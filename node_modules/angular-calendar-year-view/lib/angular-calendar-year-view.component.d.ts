import { OnInit, EventEmitter, TemplateRef } from "@angular/core";
import { DomSanitizer } from '@angular/platform-browser';
import * as ɵngcc0 from '@angular/core';
export declare class AngularCalendarYearViewComponent implements OnInit {
    sanitizer: DomSanitizer;
    readonly style: import("@angular/platform-browser/src/security/dom_sanitization_service").SafeStyle;
    themecolor: any;
    events: any[];
    viewDate: Date;
    nothingToshowText: string;
    popoverEnabled: boolean;
    customTemplate: TemplateRef<any>;
    eventClicked: EventEmitter<any>;
    actionClicked: EventEmitter<any>;
    dayClicked: EventEmitter<any>;
    loader: any;
    days: any;
    dayindex: any;
    daydetails: any;
    year: any;
    calendar: any;
    spinner: any;
    constructor(sanitizer: DomSanitizer);
    ngOnInit(): void;
    ngOnChanges(): void;
    initCalendar(date: any): void;
    generateCalendar(month: any, year: any): any[];
    getNbWeeks(month: any, year: any): number;
    dayClickedFn(day: any, month: any): void;
    getTodayEvents(day: any, month: any): void;
    getnbevents(day: any, month: any): {
        nb: number;
        color: string;
    };
    eventClickedFn(event: any): void;
    refresh(date: any): void;
    actionClickedFn(action: any, event?: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AngularCalendarYearViewComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AngularCalendarYearViewComponent, "angular-calendar-year-view", never, { "themecolor": "themecolor"; "events": "events"; "viewDate": "viewDate"; "nothingToshowText": "nothingToshowText"; "popoverEnabled": "popoverEnabled"; "customTemplate": "customTemplate"; }, { "eventClicked": "eventClicked"; "actionClicked": "actionClicked"; "dayClicked": "dayClicked"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1jYWxlbmRhci15ZWFyLXZpZXcuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImFuZ3VsYXItY2FsZW5kYXIteWVhci12aWV3LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT25Jbml0LCBFdmVudEVtaXR0ZXIsIFRlbXBsYXRlUmVmIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgRG9tU2FuaXRpemVyIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEFuZ3VsYXJDYWxlbmRhclllYXJWaWV3Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICAgIHNhbml0aXplcjogRG9tU2FuaXRpemVyO1xyXG4gICAgcmVhZG9ubHkgc3R5bGU6IGltcG9ydChcIkBhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXIvc3JjL3NlY3VyaXR5L2RvbV9zYW5pdGl6YXRpb25fc2VydmljZVwiKS5TYWZlU3R5bGU7XHJcbiAgICB0aGVtZWNvbG9yOiBhbnk7XHJcbiAgICBldmVudHM6IGFueVtdO1xyXG4gICAgdmlld0RhdGU6IERhdGU7XHJcbiAgICBub3RoaW5nVG9zaG93VGV4dDogc3RyaW5nO1xyXG4gICAgcG9wb3ZlckVuYWJsZWQ6IGJvb2xlYW47XHJcbiAgICBjdXN0b21UZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcclxuICAgIGV2ZW50Q2xpY2tlZDogRXZlbnRFbWl0dGVyPGFueT47XHJcbiAgICBhY3Rpb25DbGlja2VkOiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIGRheUNsaWNrZWQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xyXG4gICAgbG9hZGVyOiBhbnk7XHJcbiAgICBkYXlzOiBhbnk7XHJcbiAgICBkYXlpbmRleDogYW55O1xyXG4gICAgZGF5ZGV0YWlsczogYW55O1xyXG4gICAgeWVhcjogYW55O1xyXG4gICAgY2FsZW5kYXI6IGFueTtcclxuICAgIHNwaW5uZXI6IGFueTtcclxuICAgIGNvbnN0cnVjdG9yKHNhbml0aXplcjogRG9tU2FuaXRpemVyKTtcclxuICAgIG5nT25Jbml0KCk6IHZvaWQ7XHJcbiAgICBuZ09uQ2hhbmdlcygpOiB2b2lkO1xyXG4gICAgaW5pdENhbGVuZGFyKGRhdGU6IGFueSk6IHZvaWQ7XHJcbiAgICBnZW5lcmF0ZUNhbGVuZGFyKG1vbnRoOiBhbnksIHllYXI6IGFueSk6IGFueVtdO1xyXG4gICAgZ2V0TmJXZWVrcyhtb250aDogYW55LCB5ZWFyOiBhbnkpOiBudW1iZXI7XHJcbiAgICBkYXlDbGlja2VkRm4oZGF5OiBhbnksIG1vbnRoOiBhbnkpOiB2b2lkO1xyXG4gICAgZ2V0VG9kYXlFdmVudHMoZGF5OiBhbnksIG1vbnRoOiBhbnkpOiB2b2lkO1xyXG4gICAgZ2V0bmJldmVudHMoZGF5OiBhbnksIG1vbnRoOiBhbnkpOiB7XHJcbiAgICAgICAgbmI6IG51bWJlcjtcclxuICAgICAgICBjb2xvcjogc3RyaW5nO1xyXG4gICAgfTtcclxuICAgIGV2ZW50Q2xpY2tlZEZuKGV2ZW50OiBhbnkpOiB2b2lkO1xyXG4gICAgcmVmcmVzaChkYXRlOiBhbnkpOiB2b2lkO1xyXG4gICAgYWN0aW9uQ2xpY2tlZEZuKGFjdGlvbjogYW55LCBldmVudD86IGFueSk6IHZvaWQ7XHJcbn1cclxuIl19