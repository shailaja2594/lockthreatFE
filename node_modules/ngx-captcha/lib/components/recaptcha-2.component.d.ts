import { ElementRef, Injector, NgZone, OnChanges, OnDestroy, Renderer2, SimpleChanges } from '@angular/core';
import { ReCaptchaType } from '../models/recaptcha-type.enum';
import { ScriptService } from '../services/script.service';
import { BaseReCaptchaComponent } from './base-recaptcha.component';
import * as ɵngcc0 from '@angular/core';
export declare class ReCaptcha2Component extends BaseReCaptchaComponent implements OnChanges, OnDestroy {
    protected renderer: Renderer2;
    protected zone: NgZone;
    protected injector: Injector;
    protected scriptService: ScriptService;
    /**
    * Name of the global expire callback
    */
    protected readonly windowOnErrorCallbackProperty = "ngx_captcha_error_callback";
    /**
    * Name of the global error callback
    */
    protected readonly windowOnExpireCallbackProperty = "ngx_captcha_expire_callback";
    /**
     * Theme
     */
    theme: 'dark' | 'light';
    /**
    * Size
    */
    size: 'compact' | 'normal';
    /**
     * Language code. Auto-detects the user's language if unspecified.
     */
    hl: string;
    captchaWrapperElem: ElementRef;
    protected recaptchaType: ReCaptchaType;
    constructor(renderer: Renderer2, zone: NgZone, injector: Injector, scriptService: ScriptService);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    protected captchaSpecificSetup(): void;
    /**
     * Gets reCaptcha properties
    */
    protected getCaptchaProperties(): any;
    /**
     * Registers global callbacks
    */
    private registerCallbacks;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ReCaptcha2Component, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ReCaptcha2Component, "ngx-recaptcha2", never, { "theme": "theme"; "size": "size"; "hl": "hl"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVjYXB0Y2hhLTIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInJlY2FwdGNoYS0yLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBJbmplY3RvciwgTmdab25lLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgUmVuZGVyZXIyLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFJlQ2FwdGNoYVR5cGUgfSBmcm9tICcuLi9tb2RlbHMvcmVjYXB0Y2hhLXR5cGUuZW51bSc7XHJcbmltcG9ydCB7IFNjcmlwdFNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9zY3JpcHQuc2VydmljZSc7XHJcbmltcG9ydCB7IEJhc2VSZUNhcHRjaGFDb21wb25lbnQgfSBmcm9tICcuL2Jhc2UtcmVjYXB0Y2hhLmNvbXBvbmVudCc7XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFJlQ2FwdGNoYTJDb21wb25lbnQgZXh0ZW5kcyBCYXNlUmVDYXB0Y2hhQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xyXG4gICAgcHJvdGVjdGVkIHJlbmRlcmVyOiBSZW5kZXJlcjI7XHJcbiAgICBwcm90ZWN0ZWQgem9uZTogTmdab25lO1xyXG4gICAgcHJvdGVjdGVkIGluamVjdG9yOiBJbmplY3RvcjtcclxuICAgIHByb3RlY3RlZCBzY3JpcHRTZXJ2aWNlOiBTY3JpcHRTZXJ2aWNlO1xyXG4gICAgLyoqXHJcbiAgICAqIE5hbWUgb2YgdGhlIGdsb2JhbCBleHBpcmUgY2FsbGJhY2tcclxuICAgICovXHJcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgd2luZG93T25FcnJvckNhbGxiYWNrUHJvcGVydHkgPSBcIm5neF9jYXB0Y2hhX2Vycm9yX2NhbGxiYWNrXCI7XHJcbiAgICAvKipcclxuICAgICogTmFtZSBvZiB0aGUgZ2xvYmFsIGVycm9yIGNhbGxiYWNrXHJcbiAgICAqL1xyXG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IHdpbmRvd09uRXhwaXJlQ2FsbGJhY2tQcm9wZXJ0eSA9IFwibmd4X2NhcHRjaGFfZXhwaXJlX2NhbGxiYWNrXCI7XHJcbiAgICAvKipcclxuICAgICAqIFRoZW1lXHJcbiAgICAgKi9cclxuICAgIHRoZW1lOiAnZGFyaycgfCAnbGlnaHQnO1xyXG4gICAgLyoqXHJcbiAgICAqIFNpemVcclxuICAgICovXHJcbiAgICBzaXplOiAnY29tcGFjdCcgfCAnbm9ybWFsJztcclxuICAgIC8qKlxyXG4gICAgICogTGFuZ3VhZ2UgY29kZS4gQXV0by1kZXRlY3RzIHRoZSB1c2VyJ3MgbGFuZ3VhZ2UgaWYgdW5zcGVjaWZpZWQuXHJcbiAgICAgKi9cclxuICAgIGhsOiBzdHJpbmc7XHJcbiAgICBjYXB0Y2hhV3JhcHBlckVsZW06IEVsZW1lbnRSZWY7XHJcbiAgICBwcm90ZWN0ZWQgcmVjYXB0Y2hhVHlwZTogUmVDYXB0Y2hhVHlwZTtcclxuICAgIGNvbnN0cnVjdG9yKHJlbmRlcmVyOiBSZW5kZXJlcjIsIHpvbmU6IE5nWm9uZSwgaW5qZWN0b3I6IEluamVjdG9yLCBzY3JpcHRTZXJ2aWNlOiBTY3JpcHRTZXJ2aWNlKTtcclxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xyXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcclxuICAgIHByb3RlY3RlZCBjYXB0Y2hhU3BlY2lmaWNTZXR1cCgpOiB2b2lkO1xyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHJlQ2FwdGNoYSBwcm9wZXJ0aWVzXHJcbiAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGdldENhcHRjaGFQcm9wZXJ0aWVzKCk6IGFueTtcclxuICAgIC8qKlxyXG4gICAgICogUmVnaXN0ZXJzIGdsb2JhbCBjYWxsYmFja3NcclxuICAgICovXHJcbiAgICBwcml2YXRlIHJlZ2lzdGVyQ2FsbGJhY2tzO1xyXG59XHJcbiJdfQ==