{"version":3,"file":"devextreme-angular-ui-sparkline.js","sources":["ng:/devextreme-angular/ui/sparkline/index.ts","ng:/devextreme-angular/ui/sparkline/devextreme-angular-ui-sparkline.ts"],"names":["tslib_1.__extends","tslib_1.__decorate","tslib_1.__param"],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 20.2.4\n * Build date: Tue Dec 01 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\nimport { format } from 'devextreme/ui/widget/ui.widget';\r\nimport { Font } from 'devextreme/viz/core/base_widget';\r\n\r\nimport DxSparkline from 'devextreme/viz/sparkline';\r\n\r\n\r\nimport {\r\n    DxComponent,\r\n    DxTemplateHost,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    NestedOptionHost,\r\n    IterableDifferHelper,\r\n    WatcherHelper\r\n} from 'devextreme-angular/core';\r\n\r\nimport { DxoMarginModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoSizeModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoTooltipModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoBorderModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFontModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFormatModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoShadowModule } from 'devextreme-angular/ui/nested';\r\n\r\n\r\n\r\n\r\n/**\r\n * The Sparkline widget is a compact chart that contains only one series. Owing to their size, sparklines occupy very little space and can be easily collected in a table or embedded straight in text.\r\n\r\n */\r\n@Component({\r\n    selector: 'dx-sparkline',\r\n    template: '',\r\n    styles: [ ' :host {  display: block; }'],\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxSparklineComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxSparkline;\r\n\r\n    /**\r\n     * Specifies the data source field that provides arguments for a sparkline.\r\n    \r\n     */\r\n    @Input()\r\n    get argumentField(): string {\r\n        return this._getOption('argumentField');\r\n    }\r\n    set argumentField(value: string) {\r\n        this._setOption('argumentField', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets a color for the bars indicating negative values. Available for a sparkline of the bar type only.\r\n    \r\n     */\r\n    @Input()\r\n    get barNegativeColor(): string {\r\n        return this._getOption('barNegativeColor');\r\n    }\r\n    set barNegativeColor(value: string) {\r\n        this._setOption('barNegativeColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets a color for the bars indicating positive values. Available for a sparkline of the bar type only.\r\n    \r\n     */\r\n    @Input()\r\n    get barPositiveColor(): string {\r\n        return this._getOption('barPositiveColor');\r\n    }\r\n    set barPositiveColor(value: string) {\r\n        this._setOption('barPositiveColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds the widget to data.\r\n    \r\n     */\r\n    @Input()\r\n    get dataSource(): DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any> {\r\n        return this._getOption('dataSource');\r\n    }\r\n    set dataSource(value: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>) {\r\n        this._setOption('dataSource', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n    \r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n    \r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets a color for the boundary of both the first and last points on a sparkline.\r\n    \r\n     */\r\n    @Input()\r\n    get firstLastColor(): string {\r\n        return this._getOption('firstLastColor');\r\n    }\r\n    set firstLastColor(value: string) {\r\n        this._setOption('firstLastColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the sparkline should ignore null data points.\r\n    \r\n     */\r\n    @Input()\r\n    get ignoreEmptyPoints(): boolean {\r\n        return this._getOption('ignoreEmptyPoints');\r\n    }\r\n    set ignoreEmptyPoints(value: boolean) {\r\n        this._setOption('ignoreEmptyPoints', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets a color for a line on a sparkline. Available for the sparklines of the line- and area-like types.\r\n    \r\n     */\r\n    @Input()\r\n    get lineColor(): string {\r\n        return this._getOption('lineColor');\r\n    }\r\n    set lineColor(value: string) {\r\n        this._setOption('lineColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a width for a line on a sparkline. Available for the sparklines of the line- and area-like types.\r\n    \r\n     */\r\n    @Input()\r\n    get lineWidth(): number {\r\n        return this._getOption('lineWidth');\r\n    }\r\n    set lineWidth(value: number) {\r\n        this._setOption('lineWidth', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets a color for the bars indicating the values that are less than the winloss threshold. Available for a sparkline of the winloss type only.\r\n    \r\n     */\r\n    @Input()\r\n    get lossColor(): string {\r\n        return this._getOption('lossColor');\r\n    }\r\n    set lossColor(value: string) {\r\n        this._setOption('lossColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Generates space around the widget.\r\n    \r\n     */\r\n    @Input()\r\n    get margin(): { bottom?: number, left?: number, right?: number, top?: number } {\r\n        return this._getOption('margin');\r\n    }\r\n    set margin(value: { bottom?: number, left?: number, right?: number, top?: number }) {\r\n        this._setOption('margin', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets a color for the boundary of the maximum point on a sparkline.\r\n    \r\n     */\r\n    @Input()\r\n    get maxColor(): string {\r\n        return this._getOption('maxColor');\r\n    }\r\n    set maxColor(value: string) {\r\n        this._setOption('maxColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the maximum value of the sparkline's value axis.\r\n    \r\n     */\r\n    @Input()\r\n    get maxValue(): number {\r\n        return this._getOption('maxValue');\r\n    }\r\n    set maxValue(value: number) {\r\n        this._setOption('maxValue', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets a color for the boundary of the minimum point on a sparkline.\r\n    \r\n     */\r\n    @Input()\r\n    get minColor(): string {\r\n        return this._getOption('minColor');\r\n    }\r\n    set minColor(value: string) {\r\n        this._setOption('minColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the minimum value of the sparkline value axis.\r\n    \r\n     */\r\n    @Input()\r\n    get minValue(): number {\r\n        return this._getOption('minValue');\r\n    }\r\n    set minValue(value: number) {\r\n        this._setOption('minValue', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Notifies the widget that it is embedded into an HTML page that uses a tag modifying the path.\r\n    \r\n     */\r\n    @Input()\r\n    get pathModified(): boolean {\r\n        return this._getOption('pathModified');\r\n    }\r\n    set pathModified(value: boolean) {\r\n        this._setOption('pathModified', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets a color for points on a sparkline. Available for the sparklines of the line- and area-like types.\r\n    \r\n     */\r\n    @Input()\r\n    get pointColor(): string {\r\n        return this._getOption('pointColor');\r\n    }\r\n    set pointColor(value: string) {\r\n        this._setOption('pointColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the diameter of sparkline points in pixels. Available for the sparklines of line- and area-like types.\r\n    \r\n     */\r\n    @Input()\r\n    get pointSize(): number {\r\n        return this._getOption('pointSize');\r\n    }\r\n    set pointSize(value: number) {\r\n        this._setOption('pointSize', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a symbol to use as a point marker on a sparkline. Available for the sparklines of the line- and area-like types.\r\n    \r\n     */\r\n    @Input()\r\n    get pointSymbol(): string {\r\n        return this._getOption('pointSymbol');\r\n    }\r\n    set pointSymbol(value: string) {\r\n        this._setOption('pointSymbol', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n    \r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not to indicate both the first and last values on a sparkline.\r\n    \r\n     */\r\n    @Input()\r\n    get showFirstLast(): boolean {\r\n        return this._getOption('showFirstLast');\r\n    }\r\n    set showFirstLast(value: boolean) {\r\n        this._setOption('showFirstLast', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not to indicate both the minimum and maximum values on a sparkline.\r\n    \r\n     */\r\n    @Input()\r\n    get showMinMax(): boolean {\r\n        return this._getOption('showMinMax');\r\n    }\r\n    set showMinMax(value: boolean) {\r\n        this._setOption('showMinMax', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's size in pixels.\r\n    \r\n     */\r\n    @Input()\r\n    get size(): { height?: number, width?: number } {\r\n        return this._getOption('size');\r\n    }\r\n    set size(value: { height?: number, width?: number }) {\r\n        this._setOption('size', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the name of the theme the widget uses.\r\n    \r\n     */\r\n    @Input()\r\n    get theme(): string {\r\n        return this._getOption('theme');\r\n    }\r\n    set theme(value: string) {\r\n        this._setOption('theme', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the tooltip.\r\n    \r\n     */\r\n    @Input()\r\n    get tooltip(): { arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: Element | JQuery | string, contentTemplate?: any, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: Font, format?: format | string, interactive?: boolean, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, zIndex?: number } {\r\n        return this._getOption('tooltip');\r\n    }\r\n    set tooltip(value: { arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: Element | JQuery | string, contentTemplate?: any, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: Font, format?: format | string, interactive?: boolean, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, zIndex?: number }) {\r\n        this._setOption('tooltip', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Determines the type of a sparkline.\r\n    \r\n     */\r\n    @Input()\r\n    get type(): string {\r\n        return this._getOption('type');\r\n    }\r\n    set type(value: string) {\r\n        this._setOption('type', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the data source field that provides values for a sparkline.\r\n    \r\n     */\r\n    @Input()\r\n    get valueField(): string {\r\n        return this._getOption('valueField');\r\n    }\r\n    set valueField(value: string) {\r\n        this._setOption('valueField', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets a color for the bars indicating the values greater than a winloss threshold. Available for a sparkline of the winloss type only.\r\n    \r\n     */\r\n    @Input()\r\n    get winColor(): string {\r\n        return this._getOption('winColor');\r\n    }\r\n    set winColor(value: string) {\r\n        this._setOption('winColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a value that serves as a threshold for the sparkline of the winloss type.\r\n    \r\n     */\r\n    @Input()\r\n    get winlossThreshold(): number {\r\n        return this._getOption('winlossThreshold');\r\n    }\r\n    set winlossThreshold(value: number) {\r\n        this._setOption('winlossThreshold', value);\r\n    }\r\n\r\n    /**\r\n    \r\n     * A function that is executed before the widget is disposed of.\r\n    \r\n    \r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when the widget's rendering has finished.\r\n    \r\n    \r\n     */\r\n    @Output() onDrawn: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed after the widget is exported.\r\n    \r\n    \r\n     */\r\n    @Output() onExported: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed before the widget is exported.\r\n    \r\n    \r\n     */\r\n    @Output() onExporting: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed before a file with exported widget is saved to the user's local storage.\r\n    \r\n    \r\n     */\r\n    @Output() onFileSaving: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when an error or warning occurs.\r\n    \r\n    \r\n     */\r\n    @Output() onIncidentOccurred: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n    \r\n    \r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed after a widget option is changed.\r\n    \r\n    \r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a tooltip becomes hidden.\r\n    \r\n    \r\n     */\r\n    @Output() onTooltipHidden: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a tooltip appears.\r\n    \r\n    \r\n     */\r\n    @Output() onTooltipShown: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() argumentFieldChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() barNegativeColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() barPositiveColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() dataSourceChange: EventEmitter<DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() firstLastColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() ignoreEmptyPointsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() lineColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() lineWidthChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() lossColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() marginChange: EventEmitter<{ bottom?: number, left?: number, right?: number, top?: number }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() maxColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() maxValueChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() minColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() minValueChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() pathModifiedChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() pointColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() pointSizeChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() pointSymbolChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() showFirstLastChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() showMinMaxChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() sizeChange: EventEmitter<{ height?: number, width?: number }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() themeChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() tooltipChange: EventEmitter<{ arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: Element | JQuery | string, contentTemplate?: any, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: Font, format?: format | string, interactive?: boolean, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, zIndex?: number }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() typeChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() valueFieldChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() winColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() winlossThresholdChange: EventEmitter<number>;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper,\r\n            optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'drawn', emit: 'onDrawn' },\r\n            { subscribe: 'exported', emit: 'onExported' },\r\n            { subscribe: 'exporting', emit: 'onExporting' },\r\n            { subscribe: 'fileSaving', emit: 'onFileSaving' },\r\n            { subscribe: 'incidentOccurred', emit: 'onIncidentOccurred' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'tooltipHidden', emit: 'onTooltipHidden' },\r\n            { subscribe: 'tooltipShown', emit: 'onTooltipShown' },\r\n            { emit: 'argumentFieldChange' },\r\n            { emit: 'barNegativeColorChange' },\r\n            { emit: 'barPositiveColorChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'firstLastColorChange' },\r\n            { emit: 'ignoreEmptyPointsChange' },\r\n            { emit: 'lineColorChange' },\r\n            { emit: 'lineWidthChange' },\r\n            { emit: 'lossColorChange' },\r\n            { emit: 'marginChange' },\r\n            { emit: 'maxColorChange' },\r\n            { emit: 'maxValueChange' },\r\n            { emit: 'minColorChange' },\r\n            { emit: 'minValueChange' },\r\n            { emit: 'pathModifiedChange' },\r\n            { emit: 'pointColorChange' },\r\n            { emit: 'pointSizeChange' },\r\n            { emit: 'pointSymbolChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'showFirstLastChange' },\r\n            { emit: 'showMinMaxChange' },\r\n            { emit: 'sizeChange' },\r\n            { emit: 'themeChange' },\r\n            { emit: 'tooltipChange' },\r\n            { emit: 'typeChange' },\r\n            { emit: 'valueFieldChange' },\r\n            { emit: 'winColorChange' },\r\n            { emit: 'winlossThresholdChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n\r\n        return new DxSparkline(element, options);\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('dataSource', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('dataSource');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxoMarginModule,\r\n    DxoSizeModule,\r\n    DxoTooltipModule,\r\n    DxoBorderModule,\r\n    DxoFontModule,\r\n    DxoFormatModule,\r\n    DxoShadowModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxSparklineComponent\r\n  ],\r\n  exports: [\r\n    DxSparklineComponent,\r\n    DxoMarginModule,\r\n    DxoSizeModule,\r\n    DxoTooltipModule,\r\n    DxoBorderModule,\r\n    DxoFontModule,\r\n    DxoFormatModule,\r\n    DxoShadowModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxSparklineModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}