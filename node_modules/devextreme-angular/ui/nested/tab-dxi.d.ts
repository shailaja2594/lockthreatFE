/*!
 * devextreme-angular
 * Version: 20.2.4
 * Build date: Tue Dec 01 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { ElementRef, Renderer2, AfterViewInit, QueryList } from '@angular/core';
import DevExpress from 'devextreme/bundles/dx.all';
import { NestedOptionHost, DxTemplateDirective, IDxTemplateHost, DxTemplateHost } from 'devextreme-angular/core';
import { CollectionNestedOption } from 'devextreme-angular/core';
import { DxiItemComponent } from './item-dxi';
import { DxiCommandComponent } from './command-dxi';
import { DxiGroupComponent } from './group-dxi';
import * as ɵngcc0 from '@angular/core';
export declare class DxiTabComponent extends CollectionNestedOption implements AfterViewInit, IDxTemplateHost {
    private renderer;
    private document;
    private element;
    alignItemLabels: boolean;
    badge: string;
    colCount: number;
    colCountByScreen: {
        lg?: number;
        md?: number;
        sm?: number;
        xs?: number;
    };
    disabled: boolean;
    icon: string;
    items: Array<DevExpress.ui.dxFormSimpleItem | DevExpress.ui.dxFormGroupItem | DevExpress.ui.dxFormTabbedItem | DevExpress.ui.dxFormEmptyItem | DevExpress.ui.dxFormButtonItem>;
    tabTemplate: any;
    template: any;
    title: string;
    commands: Array<DevExpress.ui.dxDiagramCustomCommand | string>;
    groups: Array<any | {
        commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>;
        title?: string;
    }>;
    protected readonly _optionPath: string;
    itemsChildren: QueryList<DxiItemComponent>;
    commandsChildren: QueryList<DxiCommandComponent>;
    groupsChildren: QueryList<DxiGroupComponent>;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost, renderer: Renderer2, document: any, templateHost: DxTemplateHost, element: ElementRef);
    setTemplate(template: DxTemplateDirective): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DxiTabComponent, [{ host: true; skipSelf: true; }, { host: true; }, null, null, { host: true; }, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DxiTabComponent, "dxi-tab", never, { "alignItemLabels": "alignItemLabels"; "badge": "badge"; "colCount": "colCount"; "colCountByScreen": "colCountByScreen"; "disabled": "disabled"; "icon": "icon"; "items": "items"; "tabTemplate": "tabTemplate"; "template": "template"; "title": "title"; "commands": "commands"; "groups": "groups"; }, {}, ["itemsChildren", "commandsChildren", "groupsChildren"], ["*"]>;
}
export declare class DxiTabModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DxiTabModule, [typeof DxiTabComponent], never, [typeof DxiTabComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DxiTabModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLWR4aS5kLnRzIiwic291cmNlcyI6WyJ0YWItZHhpLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqIFZlcnNpb246IDIwLjIuNFxyXG4gKiBCdWlsZCBkYXRlOiBUdWUgRGVjIDAxIDIwMjBcclxuICpcclxuICogQ29weXJpZ2h0IChjKSAyMDEyIC0gMjAyMCBEZXZlbG9wZXIgRXhwcmVzcyBJbmMuIEFMTCBSSUdIVFMgUkVTRVJWRURcclxuICpcclxuICogVGhpcyBzb2Z0d2FyZSBtYXkgYmUgbW9kaWZpZWQgYW5kIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSB0ZXJtc1xyXG4gKiBvZiB0aGUgTUlUIGxpY2Vuc2UuIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IG9mIHRoZSBwcm9qZWN0IGZvciBkZXRhaWxzLlxyXG4gKlxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vRGV2RXhwcmVzcy9kZXZleHRyZW1lLWFuZ3VsYXJcclxuICovXHJcbmltcG9ydCB7IEVsZW1lbnRSZWYsIFJlbmRlcmVyMiwgQWZ0ZXJWaWV3SW5pdCwgUXVlcnlMaXN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCBEZXZFeHByZXNzIGZyb20gJ2RldmV4dHJlbWUvYnVuZGxlcy9keC5hbGwnO1xyXG5pbXBvcnQgeyBOZXN0ZWRPcHRpb25Ib3N0LCBEeFRlbXBsYXRlRGlyZWN0aXZlLCBJRHhUZW1wbGF0ZUhvc3QsIER4VGVtcGxhdGVIb3N0IH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb2xsZWN0aW9uTmVzdGVkT3B0aW9uIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEeGlJdGVtQ29tcG9uZW50IH0gZnJvbSAnLi9pdGVtLWR4aSc7XHJcbmltcG9ydCB7IER4aUNvbW1hbmRDb21wb25lbnQgfSBmcm9tICcuL2NvbW1hbmQtZHhpJztcclxuaW1wb3J0IHsgRHhpR3JvdXBDb21wb25lbnQgfSBmcm9tICcuL2dyb3VwLWR4aSc7XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIER4aVRhYkNvbXBvbmVudCBleHRlbmRzIENvbGxlY3Rpb25OZXN0ZWRPcHRpb24gaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBJRHhUZW1wbGF0ZUhvc3Qge1xyXG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcclxuICAgIHByaXZhdGUgZG9jdW1lbnQ7XHJcbiAgICBwcml2YXRlIGVsZW1lbnQ7XHJcbiAgICBhbGlnbkl0ZW1MYWJlbHM6IGJvb2xlYW47XHJcbiAgICBiYWRnZTogc3RyaW5nO1xyXG4gICAgY29sQ291bnQ6IG51bWJlcjtcclxuICAgIGNvbENvdW50QnlTY3JlZW46IHtcclxuICAgICAgICBsZz86IG51bWJlcjtcclxuICAgICAgICBtZD86IG51bWJlcjtcclxuICAgICAgICBzbT86IG51bWJlcjtcclxuICAgICAgICB4cz86IG51bWJlcjtcclxuICAgIH07XHJcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcclxuICAgIGljb246IHN0cmluZztcclxuICAgIGl0ZW1zOiBBcnJheTxEZXZFeHByZXNzLnVpLmR4Rm9ybVNpbXBsZUl0ZW0gfCBEZXZFeHByZXNzLnVpLmR4Rm9ybUdyb3VwSXRlbSB8IERldkV4cHJlc3MudWkuZHhGb3JtVGFiYmVkSXRlbSB8IERldkV4cHJlc3MudWkuZHhGb3JtRW1wdHlJdGVtIHwgRGV2RXhwcmVzcy51aS5keEZvcm1CdXR0b25JdGVtPjtcclxuICAgIHRhYlRlbXBsYXRlOiBhbnk7XHJcbiAgICB0ZW1wbGF0ZTogYW55O1xyXG4gICAgdGl0bGU6IHN0cmluZztcclxuICAgIGNvbW1hbmRzOiBBcnJheTxEZXZFeHByZXNzLnVpLmR4RGlhZ3JhbUN1c3RvbUNvbW1hbmQgfCBzdHJpbmc+O1xyXG4gICAgZ3JvdXBzOiBBcnJheTxhbnkgfCB7XHJcbiAgICAgICAgY29tbWFuZHM/OiBBcnJheTxEZXZFeHByZXNzLnVpLmR4RGlhZ3JhbUN1c3RvbUNvbW1hbmQgfCBzdHJpbmc+O1xyXG4gICAgICAgIHRpdGxlPzogc3RyaW5nO1xyXG4gICAgfT47XHJcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgX29wdGlvblBhdGg6IHN0cmluZztcclxuICAgIGl0ZW1zQ2hpbGRyZW46IFF1ZXJ5TGlzdDxEeGlJdGVtQ29tcG9uZW50PjtcclxuICAgIGNvbW1hbmRzQ2hpbGRyZW46IFF1ZXJ5TGlzdDxEeGlDb21tYW5kQ29tcG9uZW50PjtcclxuICAgIGdyb3Vwc0NoaWxkcmVuOiBRdWVyeUxpc3Q8RHhpR3JvdXBDb21wb25lbnQ+O1xyXG4gICAgY29uc3RydWN0b3IocGFyZW50T3B0aW9uSG9zdDogTmVzdGVkT3B0aW9uSG9zdCwgb3B0aW9uSG9zdDogTmVzdGVkT3B0aW9uSG9zdCwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgZG9jdW1lbnQ6IGFueSwgdGVtcGxhdGVIb3N0OiBEeFRlbXBsYXRlSG9zdCwgZWxlbWVudDogRWxlbWVudFJlZik7XHJcbiAgICBzZXRUZW1wbGF0ZSh0ZW1wbGF0ZTogRHhUZW1wbGF0ZURpcmVjdGl2ZSk6IHZvaWQ7XHJcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcclxuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XHJcbn1cclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRHhpVGFiTW9kdWxlIHtcclxufVxyXG4iXX0=