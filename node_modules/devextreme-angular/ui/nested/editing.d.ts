/*!
 * devextreme-angular
 * Version: 20.2.4
 * Build date: Tue Dec 01 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy, EventEmitter } from '@angular/core';
import { dxFormOptions } from 'devextreme/ui/form';
import { dxPopupOptions } from 'devextreme/ui/popup';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class DxoEditingComponent extends NestedOption implements OnDestroy, OnInit {
    allowAdding: boolean | Function;
    allowDeleting: boolean | Function;
    allowUpdating: boolean | Function;
    changes: Array<any>;
    confirmDelete: boolean;
    editColumnName: string;
    editRowKey: any;
    form: dxFormOptions;
    mode: string;
    popup: dxPopupOptions;
    refreshMode: string;
    selectTextOnEditStart: boolean;
    startEditAction: string;
    texts: {
        addRow?: string;
        cancelAllChanges?: string;
        cancelRowChanges?: string;
        confirmDeleteMessage?: string;
        confirmDeleteTitle?: string;
        deleteRow?: string;
        editRow?: string;
        saveAllChanges?: string;
        saveRowChanges?: string;
        undeleteRow?: string;
        validationCancelChanges?: string;
    } | {
        addRow?: string;
        addRowToNode?: string;
        cancelAllChanges?: string;
        cancelRowChanges?: string;
        confirmDeleteMessage?: string;
        confirmDeleteTitle?: string;
        deleteRow?: string;
        editRow?: string;
        saveAllChanges?: string;
        saveRowChanges?: string;
        undeleteRow?: string;
        validationCancelChanges?: string;
    };
    useIcons: boolean;
    allowAddShape: boolean;
    allowChangeConnection: boolean;
    allowChangeConnectorPoints: boolean;
    allowChangeConnectorText: boolean;
    allowChangeShapeText: boolean;
    allowDeleteConnector: boolean;
    allowDeleteShape: boolean;
    allowMoveShape: boolean;
    allowResizeShape: boolean;
    allowDependencyAdding: boolean;
    allowDependencyDeleting: boolean;
    allowResourceAdding: boolean;
    allowResourceDeleting: boolean;
    allowResourceUpdating: boolean;
    allowTaskAdding: boolean;
    allowTaskDeleting: boolean;
    allowTaskResourceUpdating: boolean;
    allowTaskUpdating: boolean;
    enabled: boolean;
    allowDragging: boolean;
    allowEditingTimeZones: boolean;
    allowResizing: boolean;
    allowTimeZoneEditing: boolean;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    changesChange: EventEmitter<Array<any>>;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    editColumnNameChange: EventEmitter<string>;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    editRowKeyChange: EventEmitter<any>;
    protected readonly _optionPath: string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DxoEditingComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DxoEditingComponent, "dxo-editing", never, { "allowAdding": "allowAdding"; "allowDeleting": "allowDeleting"; "allowUpdating": "allowUpdating"; "changes": "changes"; "confirmDelete": "confirmDelete"; "editColumnName": "editColumnName"; "editRowKey": "editRowKey"; "form": "form"; "mode": "mode"; "popup": "popup"; "refreshMode": "refreshMode"; "selectTextOnEditStart": "selectTextOnEditStart"; "startEditAction": "startEditAction"; "texts": "texts"; "useIcons": "useIcons"; "allowAddShape": "allowAddShape"; "allowChangeConnection": "allowChangeConnection"; "allowChangeConnectorPoints": "allowChangeConnectorPoints"; "allowChangeConnectorText": "allowChangeConnectorText"; "allowChangeShapeText": "allowChangeShapeText"; "allowDeleteConnector": "allowDeleteConnector"; "allowDeleteShape": "allowDeleteShape"; "allowMoveShape": "allowMoveShape"; "allowResizeShape": "allowResizeShape"; "allowDependencyAdding": "allowDependencyAdding"; "allowDependencyDeleting": "allowDependencyDeleting"; "allowResourceAdding": "allowResourceAdding"; "allowResourceDeleting": "allowResourceDeleting"; "allowResourceUpdating": "allowResourceUpdating"; "allowTaskAdding": "allowTaskAdding"; "allowTaskDeleting": "allowTaskDeleting"; "allowTaskResourceUpdating": "allowTaskResourceUpdating"; "allowTaskUpdating": "allowTaskUpdating"; "enabled": "enabled"; "allowDragging": "allowDragging"; "allowEditingTimeZones": "allowEditingTimeZones"; "allowResizing": "allowResizing"; "allowTimeZoneEditing": "allowTimeZoneEditing"; }, { "changesChange": "changesChange"; "editColumnNameChange": "editColumnNameChange"; "editRowKeyChange": "editRowKeyChange"; }, never, never>;
}
export declare class DxoEditingModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DxoEditingModule, [typeof DxoEditingComponent], never, [typeof DxoEditingComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DxoEditingModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdGluZy5kLnRzIiwic291cmNlcyI6WyJlZGl0aW5nLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxyXG4gKiBkZXZleHRyZW1lLWFuZ3VsYXJcclxuICogVmVyc2lvbjogMjAuMi40XHJcbiAqIEJ1aWxkIGRhdGU6IFR1ZSBEZWMgMDEgMjAyMFxyXG4gKlxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTIgLSAyMDIwIERldmVsb3BlciBFeHByZXNzIEluYy4gQUxMIFJJR0hUUyBSRVNFUlZFRFxyXG4gKlxyXG4gKiBUaGlzIHNvZnR3YXJlIG1heSBiZSBtb2RpZmllZCBhbmQgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIHRlcm1zXHJcbiAqIG9mIHRoZSBNSVQgbGljZW5zZS4gU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3Qgb2YgdGhlIHByb2plY3QgZm9yIGRldGFpbHMuXHJcbiAqXHJcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9EZXZFeHByZXNzL2RldmV4dHJlbWUtYW5ndWxhclxyXG4gKi9cclxuaW1wb3J0IHsgT25Jbml0LCBPbkRlc3Ryb3ksIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBkeEZvcm1PcHRpb25zIH0gZnJvbSAnZGV2ZXh0cmVtZS91aS9mb3JtJztcclxuaW1wb3J0IHsgZHhQb3B1cE9wdGlvbnMgfSBmcm9tICdkZXZleHRyZW1lL3VpL3BvcHVwJztcclxuaW1wb3J0IHsgTmVzdGVkT3B0aW9uSG9zdCB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTmVzdGVkT3B0aW9uIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEeG9FZGl0aW5nQ29tcG9uZW50IGV4dGVuZHMgTmVzdGVkT3B0aW9uIGltcGxlbWVudHMgT25EZXN0cm95LCBPbkluaXQge1xyXG4gICAgYWxsb3dBZGRpbmc6IGJvb2xlYW4gfCBGdW5jdGlvbjtcclxuICAgIGFsbG93RGVsZXRpbmc6IGJvb2xlYW4gfCBGdW5jdGlvbjtcclxuICAgIGFsbG93VXBkYXRpbmc6IGJvb2xlYW4gfCBGdW5jdGlvbjtcclxuICAgIGNoYW5nZXM6IEFycmF5PGFueT47XHJcbiAgICBjb25maXJtRGVsZXRlOiBib29sZWFuO1xyXG4gICAgZWRpdENvbHVtbk5hbWU6IHN0cmluZztcclxuICAgIGVkaXRSb3dLZXk6IGFueTtcclxuICAgIGZvcm06IGR4Rm9ybU9wdGlvbnM7XHJcbiAgICBtb2RlOiBzdHJpbmc7XHJcbiAgICBwb3B1cDogZHhQb3B1cE9wdGlvbnM7XHJcbiAgICByZWZyZXNoTW9kZTogc3RyaW5nO1xyXG4gICAgc2VsZWN0VGV4dE9uRWRpdFN0YXJ0OiBib29sZWFuO1xyXG4gICAgc3RhcnRFZGl0QWN0aW9uOiBzdHJpbmc7XHJcbiAgICB0ZXh0czoge1xyXG4gICAgICAgIGFkZFJvdz86IHN0cmluZztcclxuICAgICAgICBjYW5jZWxBbGxDaGFuZ2VzPzogc3RyaW5nO1xyXG4gICAgICAgIGNhbmNlbFJvd0NoYW5nZXM/OiBzdHJpbmc7XHJcbiAgICAgICAgY29uZmlybURlbGV0ZU1lc3NhZ2U/OiBzdHJpbmc7XHJcbiAgICAgICAgY29uZmlybURlbGV0ZVRpdGxlPzogc3RyaW5nO1xyXG4gICAgICAgIGRlbGV0ZVJvdz86IHN0cmluZztcclxuICAgICAgICBlZGl0Um93Pzogc3RyaW5nO1xyXG4gICAgICAgIHNhdmVBbGxDaGFuZ2VzPzogc3RyaW5nO1xyXG4gICAgICAgIHNhdmVSb3dDaGFuZ2VzPzogc3RyaW5nO1xyXG4gICAgICAgIHVuZGVsZXRlUm93Pzogc3RyaW5nO1xyXG4gICAgICAgIHZhbGlkYXRpb25DYW5jZWxDaGFuZ2VzPzogc3RyaW5nO1xyXG4gICAgfSB8IHtcclxuICAgICAgICBhZGRSb3c/OiBzdHJpbmc7XHJcbiAgICAgICAgYWRkUm93VG9Ob2RlPzogc3RyaW5nO1xyXG4gICAgICAgIGNhbmNlbEFsbENoYW5nZXM/OiBzdHJpbmc7XHJcbiAgICAgICAgY2FuY2VsUm93Q2hhbmdlcz86IHN0cmluZztcclxuICAgICAgICBjb25maXJtRGVsZXRlTWVzc2FnZT86IHN0cmluZztcclxuICAgICAgICBjb25maXJtRGVsZXRlVGl0bGU/OiBzdHJpbmc7XHJcbiAgICAgICAgZGVsZXRlUm93Pzogc3RyaW5nO1xyXG4gICAgICAgIGVkaXRSb3c/OiBzdHJpbmc7XHJcbiAgICAgICAgc2F2ZUFsbENoYW5nZXM/OiBzdHJpbmc7XHJcbiAgICAgICAgc2F2ZVJvd0NoYW5nZXM/OiBzdHJpbmc7XHJcbiAgICAgICAgdW5kZWxldGVSb3c/OiBzdHJpbmc7XHJcbiAgICAgICAgdmFsaWRhdGlvbkNhbmNlbENoYW5nZXM/OiBzdHJpbmc7XHJcbiAgICB9O1xyXG4gICAgdXNlSWNvbnM6IGJvb2xlYW47XHJcbiAgICBhbGxvd0FkZFNoYXBlOiBib29sZWFuO1xyXG4gICAgYWxsb3dDaGFuZ2VDb25uZWN0aW9uOiBib29sZWFuO1xyXG4gICAgYWxsb3dDaGFuZ2VDb25uZWN0b3JQb2ludHM6IGJvb2xlYW47XHJcbiAgICBhbGxvd0NoYW5nZUNvbm5lY3RvclRleHQ6IGJvb2xlYW47XHJcbiAgICBhbGxvd0NoYW5nZVNoYXBlVGV4dDogYm9vbGVhbjtcclxuICAgIGFsbG93RGVsZXRlQ29ubmVjdG9yOiBib29sZWFuO1xyXG4gICAgYWxsb3dEZWxldGVTaGFwZTogYm9vbGVhbjtcclxuICAgIGFsbG93TW92ZVNoYXBlOiBib29sZWFuO1xyXG4gICAgYWxsb3dSZXNpemVTaGFwZTogYm9vbGVhbjtcclxuICAgIGFsbG93RGVwZW5kZW5jeUFkZGluZzogYm9vbGVhbjtcclxuICAgIGFsbG93RGVwZW5kZW5jeURlbGV0aW5nOiBib29sZWFuO1xyXG4gICAgYWxsb3dSZXNvdXJjZUFkZGluZzogYm9vbGVhbjtcclxuICAgIGFsbG93UmVzb3VyY2VEZWxldGluZzogYm9vbGVhbjtcclxuICAgIGFsbG93UmVzb3VyY2VVcGRhdGluZzogYm9vbGVhbjtcclxuICAgIGFsbG93VGFza0FkZGluZzogYm9vbGVhbjtcclxuICAgIGFsbG93VGFza0RlbGV0aW5nOiBib29sZWFuO1xyXG4gICAgYWxsb3dUYXNrUmVzb3VyY2VVcGRhdGluZzogYm9vbGVhbjtcclxuICAgIGFsbG93VGFza1VwZGF0aW5nOiBib29sZWFuO1xyXG4gICAgZW5hYmxlZDogYm9vbGVhbjtcclxuICAgIGFsbG93RHJhZ2dpbmc6IGJvb2xlYW47XHJcbiAgICBhbGxvd0VkaXRpbmdUaW1lWm9uZXM6IGJvb2xlYW47XHJcbiAgICBhbGxvd1Jlc2l6aW5nOiBib29sZWFuO1xyXG4gICAgYWxsb3dUaW1lWm9uZUVkaXRpbmc6IGJvb2xlYW47XHJcbiAgICAvKipcclxuICAgIFxyXG4gICAgICogVGhpcyBtZW1iZXIgc3VwcG9ydHMgdGhlIGludGVybmFsIGluZnJhc3RydWN0dXJlIGFuZCBpcyBub3QgaW50ZW5kZWQgdG8gYmUgdXNlZCBkaXJlY3RseSBmcm9tIHlvdXIgY29kZS5cclxuICAgIFxyXG4gICAgICovXHJcbiAgICBjaGFuZ2VzQ2hhbmdlOiBFdmVudEVtaXR0ZXI8QXJyYXk8YW55Pj47XHJcbiAgICAvKipcclxuICAgIFxyXG4gICAgICogVGhpcyBtZW1iZXIgc3VwcG9ydHMgdGhlIGludGVybmFsIGluZnJhc3RydWN0dXJlIGFuZCBpcyBub3QgaW50ZW5kZWQgdG8gYmUgdXNlZCBkaXJlY3RseSBmcm9tIHlvdXIgY29kZS5cclxuICAgIFxyXG4gICAgICovXHJcbiAgICBlZGl0Q29sdW1uTmFtZUNoYW5nZTogRXZlbnRFbWl0dGVyPHN0cmluZz47XHJcbiAgICAvKipcclxuICAgIFxyXG4gICAgICogVGhpcyBtZW1iZXIgc3VwcG9ydHMgdGhlIGludGVybmFsIGluZnJhc3RydWN0dXJlIGFuZCBpcyBub3QgaW50ZW5kZWQgdG8gYmUgdXNlZCBkaXJlY3RseSBmcm9tIHlvdXIgY29kZS5cclxuICAgIFxyXG4gICAgICovXHJcbiAgICBlZGl0Um93S2V5Q2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIHByb3RlY3RlZCByZWFkb25seSBfb3B0aW9uUGF0aDogc3RyaW5nO1xyXG4gICAgY29uc3RydWN0b3IocGFyZW50T3B0aW9uSG9zdDogTmVzdGVkT3B0aW9uSG9zdCwgb3B0aW9uSG9zdDogTmVzdGVkT3B0aW9uSG9zdCk7XHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xyXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcclxufVxyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEeG9FZGl0aW5nTW9kdWxlIHtcclxufVxyXG4iXX0=