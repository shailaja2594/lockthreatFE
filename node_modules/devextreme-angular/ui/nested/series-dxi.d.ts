/*!
 * devextreme-angular
 * Version: 20.2.4
 * Build date: Tue Dec 01 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { NestedOptionHost } from 'devextreme-angular/core';
import { DxiChartSeries } from './base/chart-series-dxi';
import * as ɵngcc0 from '@angular/core';
export declare class DxiSeriesComponent extends DxiChartSeries {
    protected readonly _optionPath: string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DxiSeriesComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DxiSeriesComponent, "dxi-series", never, { "aggregation": "aggregation"; "argumentField": "argumentField"; "axis": "axis"; "barOverlapGroup": "barOverlapGroup"; "barPadding": "barPadding"; "barWidth": "barWidth"; "border": "border"; "closeValueField": "closeValueField"; "color": "color"; "cornerRadius": "cornerRadius"; "dashStyle": "dashStyle"; "highValueField": "highValueField"; "hoverMode": "hoverMode"; "hoverStyle": "hoverStyle"; "ignoreEmptyPoints": "ignoreEmptyPoints"; "innerColor": "innerColor"; "label": "label"; "lowValueField": "lowValueField"; "maxLabelCount": "maxLabelCount"; "minBarSize": "minBarSize"; "name": "name"; "opacity": "opacity"; "openValueField": "openValueField"; "pane": "pane"; "point": "point"; "rangeValue1Field": "rangeValue1Field"; "rangeValue2Field": "rangeValue2Field"; "reduction": "reduction"; "selectionMode": "selectionMode"; "selectionStyle": "selectionStyle"; "showInLegend": "showInLegend"; "sizeField": "sizeField"; "stack": "stack"; "tag": "tag"; "tagField": "tagField"; "type": "type"; "valueErrorBar": "valueErrorBar"; "valueField": "valueField"; "visible": "visible"; "width": "width"; "argumentType": "argumentType"; "minSegmentSize": "minSegmentSize"; "smallValuesGrouping": "smallValuesGrouping"; "closed": "closed"; }, {}, never, never>;
}
export declare class DxiSeriesModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DxiSeriesModule, [typeof DxiSeriesComponent], never, [typeof DxiSeriesComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DxiSeriesModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VyaWVzLWR4aS5kLnRzIiwic291cmNlcyI6WyJzZXJpZXMtZHhpLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqIFZlcnNpb246IDIwLjIuNFxyXG4gKiBCdWlsZCBkYXRlOiBUdWUgRGVjIDAxIDIwMjBcclxuICpcclxuICogQ29weXJpZ2h0IChjKSAyMDEyIC0gMjAyMCBEZXZlbG9wZXIgRXhwcmVzcyBJbmMuIEFMTCBSSUdIVFMgUkVTRVJWRURcclxuICpcclxuICogVGhpcyBzb2Z0d2FyZSBtYXkgYmUgbW9kaWZpZWQgYW5kIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSB0ZXJtc1xyXG4gKiBvZiB0aGUgTUlUIGxpY2Vuc2UuIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IG9mIHRoZSBwcm9qZWN0IGZvciBkZXRhaWxzLlxyXG4gKlxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vRGV2RXhwcmVzcy9kZXZleHRyZW1lLWFuZ3VsYXJcclxuICovXHJcbmltcG9ydCB7IE5lc3RlZE9wdGlvbkhvc3QgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IER4aUNoYXJ0U2VyaWVzIH0gZnJvbSAnLi9iYXNlL2NoYXJ0LXNlcmllcy1keGknO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEeGlTZXJpZXNDb21wb25lbnQgZXh0ZW5kcyBEeGlDaGFydFNlcmllcyB7XHJcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgX29wdGlvblBhdGg6IHN0cmluZztcclxuICAgIGNvbnN0cnVjdG9yKHBhcmVudE9wdGlvbkhvc3Q6IE5lc3RlZE9wdGlvbkhvc3QsIG9wdGlvbkhvc3Q6IE5lc3RlZE9wdGlvbkhvc3QpO1xyXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcclxufVxyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEeGlTZXJpZXNNb2R1bGUge1xyXG59XHJcbiJdfQ==