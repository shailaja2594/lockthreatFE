/*!
 * devextreme-angular
 * Version: 20.2.4
 * Build date: Tue Dec 01 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy, QueryList } from '@angular/core';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import { DxiSeriesComponent } from './series-dxi';
import * as ɵngcc0 from '@angular/core';
export declare class DxoChartComponent extends NestedOption implements OnDestroy, OnInit {
    barGroupPadding: number;
    barGroupWidth: number;
    bottomIndent: number;
    commonSeriesSettings: any;
    dataPrepareSettings: {
        checkTypeForAllData?: boolean;
        convertToAxisDataType?: boolean;
        sortingMethod?: boolean | Function;
    };
    maxBubbleSize: number;
    minBubbleSize: number;
    negativesAsZeroes: boolean;
    palette: string | Array<string>;
    paletteExtensionMode: string;
    series: any | Array<any>;
    seriesTemplate: {
        customizeSeries?: Function;
        nameField?: string;
    };
    topIndent: number;
    valueAxis: {
        inverted?: boolean;
        logarithmBase?: number;
        max?: number;
        min?: number;
        type?: string;
        valueType?: string;
    };
    protected readonly _optionPath: string;
    seriesChildren: QueryList<DxiSeriesComponent>;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DxoChartComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DxoChartComponent, "dxo-chart", never, { "barGroupPadding": "barGroupPadding"; "barGroupWidth": "barGroupWidth"; "bottomIndent": "bottomIndent"; "commonSeriesSettings": "commonSeriesSettings"; "dataPrepareSettings": "dataPrepareSettings"; "maxBubbleSize": "maxBubbleSize"; "minBubbleSize": "minBubbleSize"; "negativesAsZeroes": "negativesAsZeroes"; "palette": "palette"; "paletteExtensionMode": "paletteExtensionMode"; "series": "series"; "seriesTemplate": "seriesTemplate"; "topIndent": "topIndent"; "valueAxis": "valueAxis"; }, {}, ["seriesChildren"], never>;
}
export declare class DxoChartModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DxoChartModule, [typeof DxoChartComponent], never, [typeof DxoChartComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DxoChartModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcnQuZC50cyIsInNvdXJjZXMiOlsiY2hhcnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqIFZlcnNpb246IDIwLjIuNFxyXG4gKiBCdWlsZCBkYXRlOiBUdWUgRGVjIDAxIDIwMjBcclxuICpcclxuICogQ29weXJpZ2h0IChjKSAyMDEyIC0gMjAyMCBEZXZlbG9wZXIgRXhwcmVzcyBJbmMuIEFMTCBSSUdIVFMgUkVTRVJWRURcclxuICpcclxuICogVGhpcyBzb2Z0d2FyZSBtYXkgYmUgbW9kaWZpZWQgYW5kIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSB0ZXJtc1xyXG4gKiBvZiB0aGUgTUlUIGxpY2Vuc2UuIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IG9mIHRoZSBwcm9qZWN0IGZvciBkZXRhaWxzLlxyXG4gKlxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vRGV2RXhwcmVzcy9kZXZleHRyZW1lLWFuZ3VsYXJcclxuICovXHJcbmltcG9ydCB7IE9uSW5pdCwgT25EZXN0cm95LCBRdWVyeUxpc3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTmVzdGVkT3B0aW9uSG9zdCB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTmVzdGVkT3B0aW9uIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEeGlTZXJpZXNDb21wb25lbnQgfSBmcm9tICcuL3Nlcmllcy1keGknO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEeG9DaGFydENvbXBvbmVudCBleHRlbmRzIE5lc3RlZE9wdGlvbiBpbXBsZW1lbnRzIE9uRGVzdHJveSwgT25Jbml0IHtcclxuICAgIGJhckdyb3VwUGFkZGluZzogbnVtYmVyO1xyXG4gICAgYmFyR3JvdXBXaWR0aDogbnVtYmVyO1xyXG4gICAgYm90dG9tSW5kZW50OiBudW1iZXI7XHJcbiAgICBjb21tb25TZXJpZXNTZXR0aW5nczogYW55O1xyXG4gICAgZGF0YVByZXBhcmVTZXR0aW5nczoge1xyXG4gICAgICAgIGNoZWNrVHlwZUZvckFsbERhdGE/OiBib29sZWFuO1xyXG4gICAgICAgIGNvbnZlcnRUb0F4aXNEYXRhVHlwZT86IGJvb2xlYW47XHJcbiAgICAgICAgc29ydGluZ01ldGhvZD86IGJvb2xlYW4gfCBGdW5jdGlvbjtcclxuICAgIH07XHJcbiAgICBtYXhCdWJibGVTaXplOiBudW1iZXI7XHJcbiAgICBtaW5CdWJibGVTaXplOiBudW1iZXI7XHJcbiAgICBuZWdhdGl2ZXNBc1plcm9lczogYm9vbGVhbjtcclxuICAgIHBhbGV0dGU6IHN0cmluZyB8IEFycmF5PHN0cmluZz47XHJcbiAgICBwYWxldHRlRXh0ZW5zaW9uTW9kZTogc3RyaW5nO1xyXG4gICAgc2VyaWVzOiBhbnkgfCBBcnJheTxhbnk+O1xyXG4gICAgc2VyaWVzVGVtcGxhdGU6IHtcclxuICAgICAgICBjdXN0b21pemVTZXJpZXM/OiBGdW5jdGlvbjtcclxuICAgICAgICBuYW1lRmllbGQ/OiBzdHJpbmc7XHJcbiAgICB9O1xyXG4gICAgdG9wSW5kZW50OiBudW1iZXI7XHJcbiAgICB2YWx1ZUF4aXM6IHtcclxuICAgICAgICBpbnZlcnRlZD86IGJvb2xlYW47XHJcbiAgICAgICAgbG9nYXJpdGhtQmFzZT86IG51bWJlcjtcclxuICAgICAgICBtYXg/OiBudW1iZXI7XHJcbiAgICAgICAgbWluPzogbnVtYmVyO1xyXG4gICAgICAgIHR5cGU/OiBzdHJpbmc7XHJcbiAgICAgICAgdmFsdWVUeXBlPzogc3RyaW5nO1xyXG4gICAgfTtcclxuICAgIHByb3RlY3RlZCByZWFkb25seSBfb3B0aW9uUGF0aDogc3RyaW5nO1xyXG4gICAgc2VyaWVzQ2hpbGRyZW46IFF1ZXJ5TGlzdDxEeGlTZXJpZXNDb21wb25lbnQ+O1xyXG4gICAgY29uc3RydWN0b3IocGFyZW50T3B0aW9uSG9zdDogTmVzdGVkT3B0aW9uSG9zdCwgb3B0aW9uSG9zdDogTmVzdGVkT3B0aW9uSG9zdCk7XHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xyXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcclxufVxyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEeG9DaGFydE1vZHVsZSB7XHJcbn1cclxuIl19