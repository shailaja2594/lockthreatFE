/*!
 * devextreme-angular
 * Version: 20.2.4
 * Build date: Tue Dec 01 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
import { Component, NgModule, Host, SkipSelf, Input } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { CollectionNestedOption } from 'devextreme-angular/core';
var DxiConstantLineComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DxiConstantLineComponent, _super);
    function DxiConstantLineComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiConstantLineComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiConstantLineComponent.prototype, "dashStyle", {
        get: function () {
            return this._getOption('dashStyle');
        },
        set: function (value) {
            this._setOption('dashStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiConstantLineComponent.prototype, "displayBehindSeries", {
        get: function () {
            return this._getOption('displayBehindSeries');
        },
        set: function (value) {
            this._setOption('displayBehindSeries', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiConstantLineComponent.prototype, "extendAxis", {
        get: function () {
            return this._getOption('extendAxis');
        },
        set: function (value) {
            this._setOption('extendAxis', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiConstantLineComponent.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiConstantLineComponent.prototype, "paddingLeftRight", {
        get: function () {
            return this._getOption('paddingLeftRight');
        },
        set: function (value) {
            this._setOption('paddingLeftRight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiConstantLineComponent.prototype, "paddingTopBottom", {
        get: function () {
            return this._getOption('paddingTopBottom');
        },
        set: function (value) {
            this._setOption('paddingTopBottom', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiConstantLineComponent.prototype, "value", {
        get: function () {
            return this._getOption('value');
        },
        set: function (value) {
            this._setOption('value', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiConstantLineComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiConstantLineComponent.prototype, "_optionPath", {
        get: function () {
            return 'constantLines';
        },
        enumerable: true,
        configurable: true
    });
    DxiConstantLineComponent.prototype.ngOnDestroy = function () {
        this._deleteRemovedOptions(this._fullOptionPath());
    };
    DxiConstantLineComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], DxiConstantLineComponent.prototype, "color", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], DxiConstantLineComponent.prototype, "dashStyle", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], DxiConstantLineComponent.prototype, "displayBehindSeries", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], DxiConstantLineComponent.prototype, "extendAxis", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], DxiConstantLineComponent.prototype, "label", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], DxiConstantLineComponent.prototype, "paddingLeftRight", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], DxiConstantLineComponent.prototype, "paddingTopBottom", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], DxiConstantLineComponent.prototype, "value", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], DxiConstantLineComponent.prototype, "width", null);
    DxiConstantLineComponent = tslib_1.__decorate([
        Component({
            selector: 'dxi-constant-line',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
        tslib_1.__param(1, Host()),
        tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiConstantLineComponent);
    return DxiConstantLineComponent;
}(CollectionNestedOption));
export { DxiConstantLineComponent };
var DxiConstantLineModule = /** @class */ (function () {
    function DxiConstantLineModule() {
    }
    DxiConstantLineModule = tslib_1.__decorate([
        NgModule({
            declarations: [
                DxiConstantLineComponent
            ],
            exports: [
                DxiConstantLineComponent
            ],
        })
    ], DxiConstantLineModule);
    return DxiConstantLineModule;
}());
export { DxiConstantLineModule };
//# sourceMappingURL=data:application/json;base64,