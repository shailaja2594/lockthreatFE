import { ElementRef, OnDestroy, Renderer2, NgZone, ChangeDetectorRef } from '@angular/core';
import { AnimationEvent } from '@angular/animations';
import { Confirmation } from 'primeng/api';
import { ConfirmationService } from 'primeng/api';
import { Subscription } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/button';
import * as ɵngcc3 from 'primeng/api';
export declare class ConfirmDialog implements OnDestroy {
    el: ElementRef;
    renderer: Renderer2;
    private confirmationService;
    zone: NgZone;
    private cd;
    header: string;
    icon: string;
    message: string;
    style: any;
    styleClass: string;
    acceptIcon: string;
    acceptLabel: string;
    acceptVisible: boolean;
    rejectIcon: string;
    rejectLabel: string;
    rejectVisible: boolean;
    acceptButtonStyleClass: string;
    rejectButtonStyleClass: string;
    closeOnEscape: boolean;
    blockScroll: boolean;
    rtl: boolean;
    closable: boolean;
    appendTo: any;
    key: string;
    autoZIndex: boolean;
    baseZIndex: number;
    transitionOptions: string;
    focusTrap: boolean;
    defaultFocus: string;
    visible: any;
    position: string;
    footer: any;
    contentViewChild: ElementRef;
    confirmation: Confirmation;
    _visible: boolean;
    maskVisible: boolean;
    documentEscapeListener: any;
    container: HTMLDivElement;
    wrapper: HTMLElement;
    contentContainer: HTMLDivElement;
    subscription: Subscription;
    preWidth: number;
    _position: string;
    transformOptions: any;
    confirmationOptions: Confirmation;
    constructor(el: ElementRef, renderer: Renderer2, confirmationService: ConfirmationService, zone: NgZone, cd: ChangeDetectorRef);
    option(name: string): any;
    onAnimationStart(event: AnimationEvent): void;
    onAnimationEnd(event: AnimationEvent): void;
    getElementToFocus(): any;
    appendContainer(): void;
    restoreAppend(): void;
    enableModality(): void;
    disableModality(): void;
    close(event: Event): void;
    hide(): void;
    moveOnTop(): void;
    getMaskClass(): {
        'ui-widget-overlay ui-dialog-mask': boolean;
        'ui-dialog-visible': boolean;
        'ui-dialog-mask-scrollblocker': boolean;
    };
    getPositionClass(): string;
    bindGlobalListeners(): void;
    unbindGlobalListeners(): void;
    onOverlayHide(): void;
    ngOnDestroy(): void;
    accept(): void;
    reject(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ConfirmDialog, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ConfirmDialog, "p-confirmDialog", never, { "acceptIcon": "acceptIcon"; "acceptLabel": "acceptLabel"; "acceptVisible": "acceptVisible"; "rejectIcon": "rejectIcon"; "rejectLabel": "rejectLabel"; "rejectVisible": "rejectVisible"; "closeOnEscape": "closeOnEscape"; "blockScroll": "blockScroll"; "closable": "closable"; "autoZIndex": "autoZIndex"; "baseZIndex": "baseZIndex"; "transitionOptions": "transitionOptions"; "focusTrap": "focusTrap"; "defaultFocus": "defaultFocus"; "visible": "visible"; "position": "position"; "header": "header"; "icon": "icon"; "message": "message"; "style": "style"; "styleClass": "styleClass"; "acceptButtonStyleClass": "acceptButtonStyleClass"; "rejectButtonStyleClass": "rejectButtonStyleClass"; "rtl": "rtl"; "appendTo": "appendTo"; "key": "key"; }, {}, ["footer"], ["p-footer"]>;
}
export declare class ConfirmDialogModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ConfirmDialogModule, [typeof ConfirmDialog], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.ButtonModule], [typeof ConfirmDialog, typeof ɵngcc2.ButtonModule, typeof ɵngcc3.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ConfirmDialogModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlybWRpYWxvZy5kLnRzIiwic291cmNlcyI6WyJjb25maXJtZGlhbG9nLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBPbkRlc3Ryb3ksIFJlbmRlcmVyMiwgTmdab25lLCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQW5pbWF0aW9uRXZlbnQgfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcbmltcG9ydCB7IENvbmZpcm1hdGlvbiB9IGZyb20gJ3ByaW1lbmcvYXBpJztcbmltcG9ydCB7IENvbmZpcm1hdGlvblNlcnZpY2UgfSBmcm9tICdwcmltZW5nL2FwaSc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENvbmZpcm1EaWFsb2cgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICAgIGVsOiBFbGVtZW50UmVmO1xuICAgIHJlbmRlcmVyOiBSZW5kZXJlcjI7XG4gICAgcHJpdmF0ZSBjb25maXJtYXRpb25TZXJ2aWNlO1xuICAgIHpvbmU6IE5nWm9uZTtcbiAgICBwcml2YXRlIGNkO1xuICAgIGhlYWRlcjogc3RyaW5nO1xuICAgIGljb246IHN0cmluZztcbiAgICBtZXNzYWdlOiBzdHJpbmc7XG4gICAgc3R5bGU6IGFueTtcbiAgICBzdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgYWNjZXB0SWNvbjogc3RyaW5nO1xuICAgIGFjY2VwdExhYmVsOiBzdHJpbmc7XG4gICAgYWNjZXB0VmlzaWJsZTogYm9vbGVhbjtcbiAgICByZWplY3RJY29uOiBzdHJpbmc7XG4gICAgcmVqZWN0TGFiZWw6IHN0cmluZztcbiAgICByZWplY3RWaXNpYmxlOiBib29sZWFuO1xuICAgIGFjY2VwdEJ1dHRvblN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICByZWplY3RCdXR0b25TdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgY2xvc2VPbkVzY2FwZTogYm9vbGVhbjtcbiAgICBibG9ja1Njcm9sbDogYm9vbGVhbjtcbiAgICBydGw6IGJvb2xlYW47XG4gICAgY2xvc2FibGU6IGJvb2xlYW47XG4gICAgYXBwZW5kVG86IGFueTtcbiAgICBrZXk6IHN0cmluZztcbiAgICBhdXRvWkluZGV4OiBib29sZWFuO1xuICAgIGJhc2VaSW5kZXg6IG51bWJlcjtcbiAgICB0cmFuc2l0aW9uT3B0aW9uczogc3RyaW5nO1xuICAgIGZvY3VzVHJhcDogYm9vbGVhbjtcbiAgICBkZWZhdWx0Rm9jdXM6IHN0cmluZztcbiAgICB2aXNpYmxlOiBhbnk7XG4gICAgcG9zaXRpb246IHN0cmluZztcbiAgICBmb290ZXI6IGFueTtcbiAgICBjb250ZW50Vmlld0NoaWxkOiBFbGVtZW50UmVmO1xuICAgIGNvbmZpcm1hdGlvbjogQ29uZmlybWF0aW9uO1xuICAgIF92aXNpYmxlOiBib29sZWFuO1xuICAgIG1hc2tWaXNpYmxlOiBib29sZWFuO1xuICAgIGRvY3VtZW50RXNjYXBlTGlzdGVuZXI6IGFueTtcbiAgICBjb250YWluZXI6IEhUTUxEaXZFbGVtZW50O1xuICAgIHdyYXBwZXI6IEhUTUxFbGVtZW50O1xuICAgIGNvbnRlbnRDb250YWluZXI6IEhUTUxEaXZFbGVtZW50O1xuICAgIHN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuICAgIHByZVdpZHRoOiBudW1iZXI7XG4gICAgX3Bvc2l0aW9uOiBzdHJpbmc7XG4gICAgdHJhbnNmb3JtT3B0aW9uczogYW55O1xuICAgIGNvbmZpcm1hdGlvbk9wdGlvbnM6IENvbmZpcm1hdGlvbjtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgY29uZmlybWF0aW9uU2VydmljZTogQ29uZmlybWF0aW9uU2VydmljZSwgem9uZTogTmdab25lLCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG9wdGlvbihuYW1lOiBzdHJpbmcpOiBhbnk7XG4gICAgb25BbmltYXRpb25TdGFydChldmVudDogQW5pbWF0aW9uRXZlbnQpOiB2b2lkO1xuICAgIG9uQW5pbWF0aW9uRW5kKGV2ZW50OiBBbmltYXRpb25FdmVudCk6IHZvaWQ7XG4gICAgZ2V0RWxlbWVudFRvRm9jdXMoKTogYW55O1xuICAgIGFwcGVuZENvbnRhaW5lcigpOiB2b2lkO1xuICAgIHJlc3RvcmVBcHBlbmQoKTogdm9pZDtcbiAgICBlbmFibGVNb2RhbGl0eSgpOiB2b2lkO1xuICAgIGRpc2FibGVNb2RhbGl0eSgpOiB2b2lkO1xuICAgIGNsb3NlKGV2ZW50OiBFdmVudCk6IHZvaWQ7XG4gICAgaGlkZSgpOiB2b2lkO1xuICAgIG1vdmVPblRvcCgpOiB2b2lkO1xuICAgIGdldE1hc2tDbGFzcygpOiB7XG4gICAgICAgICd1aS13aWRnZXQtb3ZlcmxheSB1aS1kaWFsb2ctbWFzayc6IGJvb2xlYW47XG4gICAgICAgICd1aS1kaWFsb2ctdmlzaWJsZSc6IGJvb2xlYW47XG4gICAgICAgICd1aS1kaWFsb2ctbWFzay1zY3JvbGxibG9ja2VyJzogYm9vbGVhbjtcbiAgICB9O1xuICAgIGdldFBvc2l0aW9uQ2xhc3MoKTogc3RyaW5nO1xuICAgIGJpbmRHbG9iYWxMaXN0ZW5lcnMoKTogdm9pZDtcbiAgICB1bmJpbmRHbG9iYWxMaXN0ZW5lcnMoKTogdm9pZDtcbiAgICBvbk92ZXJsYXlIaWRlKCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBhY2NlcHQoKTogdm9pZDtcbiAgICByZWplY3QoKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENvbmZpcm1EaWFsb2dNb2R1bGUge1xufVxuIl19