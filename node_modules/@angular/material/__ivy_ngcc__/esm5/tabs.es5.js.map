{"version":3,"file":"tabs.es5.js","sources":["../../../src/material/tabs/ink-bar.ts","../../../src/material/tabs/tab-content.ts","../../../src/material/tabs/tab-label.ts","../../../src/material/tabs/tab.ts","../../../src/material/tabs/tabs-animations.ts","../../../src/material/tabs/tab-body.ts","../../../src/material/tabs/tab-group.ts","../../../src/material/tabs/tab-label-wrapper.ts","../../../src/material/tabs/paginated-tab-header.ts","../../../src/material/tabs/tab-header.ts","../../../src/material/tabs/tab-nav-bar/tab-nav-bar.ts","../../../src/material/tabs/tabs-module.ts"],"names":["tslib_1.__extends","observableOf"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, Inject, InjectionToken, NgZone, Optional} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/**\n * Interface for a a MatInkBar positioner method, defining the positioning and width of the ink\n * bar in a set of tabs.\n */\n// tslint:disable-next-line class-name Using leading underscore to denote internal interface.\nexport interface _MatInkBarPositioner {\n  (element: HTMLElement): { left: string, width: string };\n}\n\n/** Injection token for the MatInkBar's Positioner. */\nexport const _MAT_INK_BAR_POSITIONER =\n  new InjectionToken<_MatInkBarPositioner>('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n  });\n\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nexport function _MAT_INK_BAR_POSITIONER_FACTORY(): _MatInkBarPositioner {\n  const method = (element: HTMLElement) => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0',\n  });\n\n  return method;\n}\n\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-ink-bar',\n  host: {\n    'class': 'mat-ink-bar',\n    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n  },\n})\nexport class MatInkBar {\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    private _ngZone: NgZone,\n    @Inject(_MAT_INK_BAR_POSITIONER) private _inkBarPositioner: _MatInkBarPositioner,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) { }\n\n  /**\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\n   * Shows the ink bar if previously set as hidden.\n   * @param element\n   */\n  alignToElement(element: HTMLElement) {\n    this.show();\n\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => this._setStyles(element));\n      });\n    } else {\n      this._setStyles(element);\n    }\n  }\n\n  /** Shows the ink bar. */\n  show(): void {\n    this._elementRef.nativeElement.style.visibility = 'visible';\n  }\n\n  /** Hides the ink bar. */\n  hide(): void {\n    this._elementRef.nativeElement.style.visibility = 'hidden';\n  }\n\n  /**\n   * Sets the proper styles to the ink bar element.\n   * @param element\n   */\n  private _setStyles(element: HTMLElement) {\n    const positions = this._inkBarPositioner(element);\n    const inkBar: HTMLElement = this._elementRef.nativeElement;\n\n    inkBar.style.left = positions.left;\n    inkBar.style.width = positions.width;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({selector: '[matTabContent]'})\nexport class MatTabContent {\n  constructor(public template: TemplateRef<any>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkPortal} from '@angular/cdk/portal';\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n  selector: '[mat-tab-label], [matTabLabel]',\n})\nexport class MatTabLabel extends CdkPortal {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {MatTabContent} from './tab-content';\nimport {MatTabLabel} from './tab-label';\n\n\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {}\nconst _MatTabMixinBase: CanDisableCtor & typeof MatTabBase =\n    mixinDisabled(MatTabBase);\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab',\n  templateUrl: 'tab.html',\n  inputs: ['disabled'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matTab',\n})\nexport class MatTab extends _MatTabMixinBase implements OnInit, CanDisable, OnChanges, OnDestroy {\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n  @ContentChild(MatTabLabel, {static: false}) templateLabel: MatTabLabel;\n\n  /**\n   * Template provided in the tab content that will be used if present, used to enable lazy-loading\n   */\n  @ContentChild(MatTabContent, {read: TemplateRef, static: true})\n  _explicitContent: TemplateRef<any>;\n\n  /** Template inside the MatTab view that contains an `<ng-content>`. */\n  @ViewChild(TemplateRef, {static: true}) _implicitContent: TemplateRef<any>;\n\n  /** Plain text label for the tab, used when there is no template label. */\n  @Input('label') textLabel: string = '';\n\n  /** Aria label for the tab. */\n  @Input('aria-label') ariaLabel: string;\n\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** Portal that will be the hosted content of the tab */\n  private _contentPortal: TemplatePortal | null = null;\n\n  /** @docs-private */\n  get content(): TemplatePortal | null {\n    return this._contentPortal;\n  }\n\n  /** Emits whenever the internal state of the tab changes. */\n  readonly _stateChanges = new Subject<void>();\n\n  /**\n   * The relatively indexed position where 0 represents the center, negative is left, and positive\n   * represents the right.\n   */\n  position: number | null = null;\n\n  /**\n   * The initial relatively index origin of the tab if it was created and selected after there\n   * was already a selected tab. Provides context of what position the tab should originate from.\n   */\n  origin: number | null = null;\n\n  /**\n   * Whether the tab is currently active.\n   */\n  isActive = false;\n\n  constructor(private _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(\n        this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nexport const matTabsAnimations: {\n  readonly translateTab: AnimationTriggerMetadata;\n} = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: trigger('translateTab', [\n    // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n    state('center, void, left-origin-center, right-origin-center', style({transform: 'none'})),\n\n    // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n    // in order to ensure that the element has a height before its state changes. This is\n    // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n    // not have a static height and is not rendered. See related issue: #9465\n    state('left', style({transform: 'translate3d(-100%, 0, 0)', minHeight: '1px'})),\n    state('right', style({transform: 'translate3d(100%, 0, 0)', minHeight: '1px'})),\n\n    transition('* => left, * => right, left => center, right => center',\n        animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n    transition('void => left-origin-center', [\n      style({transform: 'translate3d(-100%, 0, 0)'}),\n      animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n    ]),\n    transition('void => right-origin-center', [\n      style({transform: 'translate3d(100%, 0, 0)'}),\n      animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n    ])\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ChangeDetectorRef,\n  Input,\n  Inject,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  ElementRef,\n  Directive,\n  Optional,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  forwardRef,\n  ViewChild,\n} from '@angular/core';\nimport {AnimationEvent} from '@angular/animations';\nimport {TemplatePortal, CdkPortalOutlet, PortalHostDirective} from '@angular/cdk/portal';\nimport {Directionality, Direction} from '@angular/cdk/bidi';\nimport {Subscription, Subject} from 'rxjs';\nimport {matTabsAnimations} from './tabs-animations';\nimport {startWith, distinctUntilChanged} from 'rxjs/operators';\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type MatTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type MatTabBodyOriginState = 'left' | 'right';\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabBodyHost]'\n})\nexport class MatTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n  /** Subscription to events for when the tab body begins centering. */\n  private _centeringSub = Subscription.EMPTY;\n  /** Subscription to events for when the tab body finishes leaving from center position. */\n  private _leavingSub = Subscription.EMPTY;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    viewContainerRef: ViewContainerRef,\n    @Inject(forwardRef(() => MatTabBody)) private _host: MatTabBody) {\n      super(componentFactoryResolver, viewContainerRef);\n  }\n\n  /** Set initial visibility or set up subscription for changing visibility. */\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this._centeringSub = this._host._beforeCentering\n      .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n      .subscribe((isCentering: boolean) => {\n        if (isCentering && !this.hasAttached()) {\n          this.attach(this._host._content);\n        }\n      });\n\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n      this.detach();\n    });\n  }\n\n  /** Clean up centering subscription. */\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this._centeringSub.unsubscribe();\n    this._leavingSub.unsubscribe();\n  }\n}\n\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\n@Directive({\n  // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n  selector: 'do-not-use-abstract-mat-tab-body-base'\n})\n// tslint:disable-next-line:class-name\nexport abstract class _MatTabBodyBase implements OnInit, OnDestroy {\n  /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n  private _positionIndex: number;\n\n  /** Subscription to the directionality change observable. */\n  private _dirChangeSubscription = Subscription.EMPTY;\n\n  /** Tab body position state. Used by the animation trigger for the current state. */\n  _position: MatTabBodyPositionState;\n\n  /** Emits when an animation on the tab is complete. */\n  _translateTabComplete = new Subject<AnimationEvent>();\n\n  /** Event emitted when the tab begins to animate towards the center as the active tab. */\n  @Output() readonly _onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted when the tab completes its animation towards the center. */\n  @Output() readonly _onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n   /** The portal host inside of this container into which the tab body content will be loaded. */\n  abstract _portalHost: PortalHostDirective;\n\n  /** The tab body content to display. */\n  @Input('content') _content: TemplatePortal;\n\n  /** Position that will be used when the tab is immediately becoming visible after creation. */\n  @Input() origin: number;\n\n  // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n  // anyway to prevent the animations module from throwing an error if the body is used on its own.\n  /** Duration for the tab's animation. */\n  @Input() animationDuration: string = '500ms';\n\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\n  @Input()\n  set position(position: number) {\n    this._positionIndex = position;\n    this._computePositionAnimationState();\n  }\n\n  constructor(private _elementRef: ElementRef<HTMLElement>,\n              @Optional() private _dir: Directionality,\n              changeDetectorRef: ChangeDetectorRef) {\n\n    if (_dir) {\n      this._dirChangeSubscription = _dir.change.subscribe((dir: Direction) => {\n        this._computePositionAnimationState(dir);\n        changeDetectorRef.markForCheck();\n      });\n    }\n\n    // Ensure that we get unique animation events, because the `.done` callback can get\n    // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n    this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      // If the transition to the center is complete, emit an event.\n      if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n        this._onCentered.emit();\n      }\n\n      if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n        this._afterLeavingCenter.emit();\n      }\n    });\n  }\n\n  /**\n   * After initialized, check if the content is centered and has an origin. If so, set the\n   * special position states that transition the tab from the left or right before centering.\n   */\n  ngOnInit() {\n    if (this._position == 'center' && this.origin != null) {\n      this._position = this._computePositionFromOrigin();\n    }\n  }\n\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n    this._translateTabComplete.complete();\n  }\n\n  _onTranslateTabStarted(event: AnimationEvent): void {\n    const isCentering = this._isCenterPosition(event.toState);\n    this._beforeCentering.emit(isCentering);\n    if (isCentering) {\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n\n  /** The text direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Whether the provided position state is considered center, regardless of origin. */\n  _isCenterPosition(position: MatTabBodyPositionState|string): boolean {\n    return position == 'center' ||\n        position == 'left-origin-center' ||\n        position == 'right-origin-center';\n  }\n\n  /** Computes the position state that will be used for the tab-body animation trigger. */\n  private _computePositionAnimationState(dir: Direction = this._getLayoutDirection()) {\n    if (this._positionIndex < 0) {\n      this._position = dir == 'ltr' ? 'left' : 'right';\n    } else if (this._positionIndex > 0) {\n      this._position = dir == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n\n  /**\n   * Computes the position state based on the specified origin position. This is used if the\n   * tab is becoming visible immediately after creation.\n   */\n  private _computePositionFromOrigin(): MatTabBodyPositionState {\n    const dir = this._getLayoutDirection();\n\n    if ((dir == 'ltr' && this.origin <= 0) || (dir == 'rtl' && this.origin > 0)) {\n      return 'left-origin-center';\n    }\n\n    return 'right-origin-center';\n  }\n}\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-body',\n  templateUrl: 'tab-body.html',\n  styleUrls: ['tab-body.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [matTabsAnimations.translateTab],\n  host: {\n    'class': 'mat-tab-body',\n  }\n})\nexport class MatTabBody extends _MatTabBodyBase {\n  @ViewChild(PortalHostDirective, {static: false}) _portalHost: PortalHostDirective;\n\n  constructor(elementRef: ElementRef<HTMLElement>,\n              @Optional() dir: Directionality,\n              changeDetectorRef: ChangeDetectorRef) {\n    super(elementRef, dir, changeDetectorRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  Optional,\n  Inject,\n  InjectionToken,\n  Directive,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  mixinColor,\n  mixinDisableRipple,\n  ThemePalette,\n} from '@angular/material/core';\nimport {merge, Subscription} from 'rxjs';\nimport {MatTab} from './tab';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class MatTabChangeEvent {\n  /** Index of the currently-selected tab. */\n  index: number;\n  /** Reference to the currently-selected tab. */\n  tab: MatTab;\n}\n\n/** Possible positions for the tab header. */\nexport type MatTabHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface MatTabsConfig {\n  /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n  animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MAT_TABS_CONFIG = new InjectionToken<MatTabsConfig>('MAT_TABS_CONFIG');\n\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupMixinBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatTabGroupMixinBase: CanColorCtor & CanDisableRippleCtor & typeof MatTabGroupMixinBase =\n    mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n\ninterface MatTabGroupBaseHeader {\n  _alignInkBarToSelectedTab: () => void;\n  focusIndex: number;\n}\n\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\n@Directive({\n  // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n  selector: 'do-not-use-abstract-mat-tab-group-base'\n})\n// tslint:disable-next-line:class-name\nexport abstract class _MatTabGroupBase extends _MatTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor, CanDisableRipple {\n  abstract _tabs: QueryList<MatTab>;\n  abstract _tabBodyWrapper: ElementRef;\n  abstract _tabHeader: MatTabGroupBaseHeader;\n\n  /** The tab index that should be selected after the content has been checked. */\n  private _indexToSelect: number | null = 0;\n\n  /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n  private _tabBodyWrapperHeight: number = 0;\n\n  /** Subscription to tabs being added/removed. */\n  private _tabsSubscription = Subscription.EMPTY;\n\n  /** Subscription to changes in the tab labels. */\n  private _tabLabelSubscription = Subscription.EMPTY;\n\n  /** Whether the tab group should grow to the size of the active tab. */\n  @Input()\n  get dynamicHeight(): boolean { return this._dynamicHeight; }\n  set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n  private _dynamicHeight: boolean = false;\n\n  /** The index of the active tab. */\n  @Input()\n  get selectedIndex(): number | null { return this._selectedIndex; }\n  set selectedIndex(value: number | null) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  private _selectedIndex: number | null = null;\n\n  /** Position of the tab header. */\n  @Input() headerPosition: MatTabHeaderPosition = 'above';\n\n  /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n  @Input()\n  get animationDuration(): string { return this._animationDuration; }\n  set animationDuration(value: string) {\n    this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n  }\n  private _animationDuration: string;\n\n  /** Background color of the tab group. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\n\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when focus has changed within a tab group. */\n  @Output() readonly focusChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>();\n\n  /** Event emitted when the body animation has completed */\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the tab selection has changed. */\n  @Output() readonly selectedTabChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>(true);\n\n  private _groupId: number;\n\n  constructor(elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Inject(MAT_TABS_CONFIG) @Optional() defaultConfig?: MatTabsConfig,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n    super(elementRef);\n    this._groupId = nextId++;\n    this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n        defaultConfig.animationDuration : '500ms';\n  }\n\n  /**\n   * After the content is checked, this component knows what tabs have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each tab should be in according to the new selected index, and additionally we know how\n   * a new selected tab should transition in (from the left or right).\n   */\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex != indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n      }\n\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n    }\n\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\n    this._tabs.forEach((tab: MatTab, index: number) => {\n      tab.position = index - indexToSelect;\n\n      // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngAfterContentInit() {\n    this._subscribeToTabLabels();\n\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n      // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this._tabs.toArray();\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            break;\n          }\n        }\n      }\n\n      this._subscribeToTabLabels();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  ngOnDestroy() {\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n\n  /** Re-aligns the ink bar to the selected tab element. */\n  realignInkBar() {\n    if (this._tabHeader) {\n      this._tabHeader._alignInkBarToSelectedTab();\n    }\n  }\n\n  _focusChanged(index: number) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n\n  private _createChangeEvent(index: number): MatTabChangeEvent {\n    const event = new MatTabChangeEvent;\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n\n  /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n  private _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n      .subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n  private _clampTabIndex(index: number | null): number {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n  }\n\n  /** Returns a unique id for each tab label element */\n  _getTabLabelId(i: number): string {\n    return `mat-tab-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns a unique id for each tab content element */\n  _getTabContentId(i: number): string {\n    return `mat-tab-content-${this._groupId}-${i}`;\n  }\n\n  /**\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\n   * height property is true.\n   */\n  _setTabBodyWrapperHeight(tabHeight: number): void {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) { return; }\n\n    const wrapper: HTMLElement = this._tabBodyWrapper.nativeElement;\n\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = tabHeight + 'px';\n    }\n  }\n\n  /** Removes the height of the tab body wrapper. */\n  _removeTabBodyWrapperHeight(): void {\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    this._tabBodyWrapperHeight = wrapper.clientHeight;\n    wrapper.style.height = '';\n    this.animationDone.emit();\n  }\n\n  /** Handle click events, setting new selected index if appropriate. */\n  _handleClick(tab: MatTab, tabHeader: MatTabGroupBaseHeader, index: number) {\n    if (!tab.disabled) {\n      this.selectedIndex = tabHeader.focusIndex = index;\n    }\n  }\n\n  /** Retrieves the tabindex for the tab. */\n  _getTabIndex(tab: MatTab, idx: number): number | null {\n    if (tab.disabled) {\n      return null;\n    }\n    return this.selectedIndex === idx ? 0 : -1;\n  }\n}\n\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-group',\n  exportAs: 'matTabGroup',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['tab-group.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['color', 'disableRipple'],\n  host: {\n    'class': 'mat-tab-group',\n    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n  },\n})\nexport class MatTabGroup extends _MatTabGroupBase {\n  @ContentChildren(MatTab) _tabs: QueryList<MatTab>;\n  @ViewChild('tabBodyWrapper', {static: false}) _tabBodyWrapper: ElementRef;\n  @ViewChild('tabHeader', {static: false}) _tabHeader: MatTabGroupBaseHeader;\n\n  constructor(elementRef: ElementRef,\n              changeDetectorRef: ChangeDetectorRef,\n              @Inject(MAT_TABS_CONFIG) @Optional() defaultConfig?: MatTabsConfig,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\n\n\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {}\nconst _MatTabLabelWrapperMixinBase: CanDisableCtor & typeof MatTabLabelWrapperBase =\n    mixinDisabled(MatTabLabelWrapperBase);\n\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabLabelWrapper]',\n  inputs: ['disabled'],\n  host: {\n    '[class.mat-tab-disabled]': 'disabled',\n    '[attr.aria-disabled]': '!!disabled',\n  }\n})\nexport class MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase implements CanDisable {\n  constructor(public elementRef: ElementRef) {\n    super();\n  }\n\n  /** Sets focus on the wrapper element */\n  focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n  getOffsetLeft(): number {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n\n  getOffsetWidth(): number {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectorRef,\n  ElementRef,\n  NgZone,\n  Optional,\n  QueryList,\n  EventEmitter,\n  AfterContentChecked,\n  AfterContentInit,\n  AfterViewInit,\n  OnDestroy,\n  Directive,\n  Inject,\n} from '@angular/core';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {FocusKeyManager, FocusableOption} from '@angular/cdk/a11y';\nimport {END, ENTER, HOME, SPACE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {merge, of as observableOf, Subject, timer, fromEvent} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {Platform, normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions =\n    normalizePassiveListenerOptions({passive: true}) as EventListenerOptions;\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n\n/** Item inside a paginated tab header. */\nexport type MatPaginatedTabHeaderItem = FocusableOption & {elementRef: ElementRef};\n\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\n@Directive({\n  // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n  selector: 'do-not-use-abstract-mat-paginated-tab-header'\n})\nexport abstract class MatPaginatedTabHeader implements AfterContentChecked, AfterContentInit,\n  AfterViewInit, OnDestroy {\n  abstract _items: QueryList<MatPaginatedTabHeaderItem>;\n  abstract _inkBar: {hide: () => void, alignToElement: (element: HTMLElement) => void};\n  abstract _tabListContainer: ElementRef<HTMLElement>;\n  abstract _tabList: ElementRef<HTMLElement>;\n  abstract _nextPaginator: ElementRef<HTMLElement>;\n  abstract _previousPaginator: ElementRef<HTMLElement>;\n\n  /** The distance in pixels that the tab labels should be translated to the left. */\n  private _scrollDistance = 0;\n\n  /** Whether the header should scroll to the selected index after the view has been checked. */\n  private _selectedIndexChanged = false;\n\n  /** Emits when the component is destroyed. */\n  protected readonly _destroyed = new Subject<void>();\n\n  /** Whether the controls for pagination should be displayed */\n  _showPaginationControls = false;\n\n  /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n  _disableScrollAfter = true;\n\n  /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n  _disableScrollBefore = true;\n\n  /**\n   * The number of tab labels that are displayed on the header. When this changes, the header\n   * should re-evaluate the scroll position.\n   */\n  private _tabLabelCount: number;\n\n  /** Whether the scroll distance has changed and should be applied after the view is checked. */\n  private _scrollDistanceChanged: boolean;\n\n  /** Used to manage focus between the tabs. */\n  private _keyManager: FocusKeyManager<MatPaginatedTabHeaderItem>;\n\n  /** Cached text content of the header. */\n  private _currentTextContent: string;\n\n  /** Stream that will stop the automated scrolling. */\n  private _stopScrolling = new Subject<void>();\n\n  /** The index of the active tab. */\n  get selectedIndex(): number { return this._selectedIndex; }\n  set selectedIndex(value: number) {\n    value = coerceNumberProperty(value);\n\n    if (this._selectedIndex != value) {\n      this._selectedIndexChanged = true;\n      this._selectedIndex = value;\n\n      if (this._keyManager) {\n        this._keyManager.updateActiveItemIndex(value);\n      }\n    }\n  }\n  private _selectedIndex: number = 0;\n\n  /** Event emitted when the option is selected. */\n  readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when a label is focused. */\n  readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n  constructor(protected _elementRef: ElementRef<HTMLElement>,\n              protected _changeDetectorRef: ChangeDetectorRef,\n              private _viewportRuler: ViewportRuler,\n              @Optional() private _dir: Directionality,\n              private _ngZone: NgZone,\n              /**\n               * @deprecated @breaking-change 9.0.0 `_platform` and `_animationMode`\n               * parameters to become required.\n               */\n              private _platform?: Platform,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n\n    // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n    _ngZone.runOutsideAngular(() => {\n      fromEvent(_elementRef.nativeElement, 'mouseleave')\n        .pipe(takeUntil(this._destroyed))\n        .subscribe(() => {\n          this._stopInterval();\n        });\n    });\n  }\n\n  /** Called when the user has selected an item via the keyboard. */\n  protected abstract _itemSelected(event: KeyboardEvent): void;\n\n  ngAfterViewInit() {\n    // We need to handle these events manually, because we want to bind passive event listeners.\n    fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._handlePaginatorPress('before');\n      });\n\n    fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._handlePaginatorPress('after');\n      });\n  }\n\n  ngAfterContentInit() {\n    const dirChange = this._dir ? this._dir.change : observableOf(null);\n    const resize = this._viewportRuler.change(150);\n    const realign = () => {\n      this.updatePagination();\n      this._alignInkBarToSelectedTab();\n    };\n\n    this._keyManager = new FocusKeyManager<MatPaginatedTabHeaderItem>(this._items)\n      .withHorizontalOrientation(this._getLayoutDirection())\n      .withWrap();\n\n    this._keyManager.updateActiveItem(0);\n\n    // Defer the first call in order to allow for slower browsers to lay out the elements.\n    // This helps in cases where the user lands directly on a page with paginated tabs.\n    typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n\n    // On dir change or window resize, realign the ink bar and update the orientation of\n    // the key manager if the direction has changed.\n    merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      realign();\n      this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n    });\n\n    // If there is a change in the focus key manager we need to emit the `indexFocused`\n    // event in order to provide a public event that notifies about focus changes. Also we realign\n    // the tabs container by scrolling the new focused tab into the visible section.\n    this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n      this.indexFocused.emit(newFocusIndex);\n      this._setTabFocus(newFocusIndex);\n    });\n  }\n\n  ngAfterContentChecked(): void {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._items.length) {\n      this.updatePagination();\n      this._tabLabelCount = this._items.length;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n      this._checkScrollingControls();\n      this._alignInkBarToSelectedTab();\n      this._selectedIndexChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._stopScrolling.complete();\n  }\n\n  /** Handles keyboard events on the header. */\n  _handleKeydown(event: KeyboardEvent) {\n    // We don't handle any key bindings with a modifier key.\n    if (hasModifierKey(event)) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case HOME:\n        this._keyManager.setFirstItemActive();\n        event.preventDefault();\n        break;\n      case END:\n        this._keyManager.setLastItemActive();\n        event.preventDefault();\n        break;\n      case ENTER:\n      case SPACE:\n        this.selectFocusedIndex.emit(this.focusIndex);\n        this._itemSelected(event);\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n  }\n\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   */\n  _onContentChanges() {\n    const textContent = this._elementRef.nativeElement.textContent;\n\n    // We need to diff the text content of the header, because the MutationObserver callback\n    // will fire even if the text content didn't change which is inefficient and is prone\n    // to infinite loops if a poorly constructed expression is passed in (see #14249).\n    if (textContent !== this._currentTextContent) {\n      this._currentTextContent = textContent || '';\n\n      // The content observer runs outside the `NgZone` by default, which\n      // means that we need to bring the callback back in ourselves.\n      this._ngZone.run(() => {\n        this.updatePagination();\n        this._alignInkBarToSelectedTab();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance. It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n  updatePagination() {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateTabScrollPosition();\n  }\n\n  /** Tracks which element has focus; used for keyboard navigation */\n  get focusIndex(): number {\n    return this._keyManager ? this._keyManager.activeItemIndex! : 0;\n  }\n\n  /** When the focus index is set, we must manually send focus to the correct label */\n  set focusIndex(value: number) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n      return;\n    }\n\n    this._keyManager.setActiveItem(value);\n  }\n\n  /**\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   */\n  _isValidIndex(index: number): boolean {\n    if (!this._items) { return true; }\n\n    const tab = this._items ? this._items.toArray()[index] : null;\n    return !!tab && !tab.disabled;\n  }\n\n  /**\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   */\n  _setTabFocus(tabIndex: number) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n\n    if (this._items && this._items.length) {\n      this._items.toArray()[tabIndex].focus();\n\n      // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n      const containerEl = this._tabListContainer.nativeElement;\n      const dir = this._getLayoutDirection();\n\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n\n  /** The layout direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n  _updateTabScrollPosition() {\n    const scrollDistance = this.scrollDistance;\n    const platform = this._platform;\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n\n    // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n    // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n    // and ripples will exceed the boundaries of the visible tab bar.\n    // See: https://github.com/angular/components/issues/10276\n    // We round the `transform` here, because transforms with sub-pixel precision cause some\n    // browsers to blur the content of the element.\n    this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n    // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n    // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n    // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n    if (platform && (platform.TRIDENT || platform.EDGE)) {\n      this._tabListContainer.nativeElement.scrollLeft = 0;\n    }\n  }\n\n  /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n  get scrollDistance(): number { return this._scrollDistance; }\n  set scrollDistance(value: number) {\n    this._scrollTo(value);\n  }\n\n  /**\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the tab list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollHeader(direction: ScrollDirection) {\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n\n    // Move the scroll distance one-third the length of the tab list's viewport.\n    const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n\n    return this._scrollTo(this._scrollDistance + scrollAmount);\n  }\n\n  /** Handles click events on the pagination arrows. */\n  _handlePaginatorClick(direction: ScrollDirection) {\n    this._stopInterval();\n    this._scrollHeader(direction);\n  }\n\n  /**\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollToLabel(labelIndex: number) {\n    const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n\n    if (!selectedLabel) { return; }\n\n    // The view length is the visible width of the tab labels.\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    const {offsetLeft, offsetWidth} = selectedLabel.elementRef.nativeElement;\n\n    let labelBeforePos: number, labelAfterPos: number;\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = offsetLeft;\n      labelAfterPos = labelBeforePos + offsetWidth;\n    } else {\n      labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n      labelBeforePos = labelAfterPos - offsetWidth;\n    }\n\n    const beforeVisiblePos = this.scrollDistance;\n    const afterVisiblePos = this.scrollDistance + viewLength;\n\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n    }\n  }\n\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * tab list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkPaginationEnabled() {\n    const isEnabled =\n        this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n    if (!isEnabled) {\n      this.scrollDistance = 0;\n    }\n\n    if (isEnabled !== this._showPaginationControls) {\n      this._changeDetectorRef.markForCheck();\n    }\n\n    this._showPaginationControls = isEnabled;\n  }\n\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkScrollingControls() {\n    // Check if the pagination arrows should be activated.\n    this._disableScrollBefore = this.scrollDistance == 0;\n    this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the tab list container and tab header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _getMaxScrollDistance(): number {\n    const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return (lengthOfTabList - viewLength) || 0;\n  }\n\n  /** Tells the ink-bar to align itself to the current label wrapper */\n  _alignInkBarToSelectedTab(): void {\n    const selectedItem = this._items && this._items.length ?\n        this._items.toArray()[this.selectedIndex] : null;\n    const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n\n    if (selectedLabelWrapper) {\n      this._inkBar.alignToElement(selectedLabelWrapper);\n    } else {\n      this._inkBar.hide();\n    }\n  }\n\n  /** Stops the currently-running paginator interval.  */\n  _stopInterval() {\n    this._stopScrolling.next();\n  }\n\n  /**\n   * Handles the user pressing down on one of the paginators.\n   * Starts scrolling the header after a certain amount of time.\n   * @param direction In which direction the paginator should be scrolled.\n   */\n  _handlePaginatorPress(direction: ScrollDirection) {\n    // Avoid overlapping timers.\n    this._stopInterval();\n\n    // Start a timer after the delay and keep firing based on the interval.\n    timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n      // Keep the timer going until something tells it to stop or the component is destroyed.\n      .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n      .subscribe(() => {\n        const {maxScrollDistance, distance} = this._scrollHeader(direction);\n\n        // Stop the timer if we've reached the start or the end.\n        if (distance === 0 || distance >= maxScrollDistance) {\n          this._stopInterval();\n        }\n      });\n  }\n\n  /**\n   * Scrolls the header to a given position.\n   * @param position Position to which to scroll.\n   * @returns Information on the current scroll distance and the maximum.\n   */\n  private _scrollTo(position: number) {\n    const maxScrollDistance = this._getMaxScrollDistance();\n    this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n\n    return {maxScrollDistance, distance: this._scrollDistance};\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  NgZone,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  AfterViewInit,\n  Input,\n  Inject,\n  Directive,\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {MatInkBar} from './ink-bar';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {Platform} from '@angular/cdk/platform';\nimport {MatPaginatedTabHeader} from './paginated-tab-header';\n\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\n@Directive({\n  // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n  selector: 'do-not-use-abstract-mat-tab-header-base'\n})\n// tslint:disable-next-line:class-name\nexport abstract class _MatTabHeaderBase extends MatPaginatedTabHeader implements\n  AfterContentChecked, AfterContentInit, AfterViewInit, OnDestroy {\n\n  /** Whether the ripple effect is disabled or not. */\n  @Input()\n  get disableRipple() { return this._disableRipple; }\n  set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n  private _disableRipple: boolean = false;\n\n  constructor(elementRef: ElementRef,\n              changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              @Optional() dir: Directionality,\n              ngZone: NgZone,\n              platform: Platform,\n              // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n  protected _itemSelected(event: KeyboardEvent) {\n    event.preventDefault();\n  }\n}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-header',\n  templateUrl: 'tab-header.html',\n  styleUrls: ['tab-header.css'],\n  inputs: ['selectedIndex'],\n  outputs: ['selectFocusedIndex', 'indexFocused'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-tab-header',\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n  },\n})\nexport class MatTabHeader extends _MatTabHeaderBase {\n  @ContentChildren(MatTabLabelWrapper) _items: QueryList<MatTabLabelWrapper>;\n  @ViewChild(MatInkBar, {static: true}) _inkBar: MatInkBar;\n  @ViewChild('tabListContainer', {static: true}) _tabListContainer: ElementRef;\n  @ViewChild('tabList', {static: true}) _tabList: ElementRef;\n  @ViewChild('nextPaginator', {static: false}) _nextPaginator: ElementRef<HTMLElement>;\n  @ViewChild('previousPaginator', {static: false}) _previousPaginator: ElementRef<HTMLElement>;\n\n  constructor(elementRef: ElementRef,\n              changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              @Optional() dir: Directionality,\n              ngZone: NgZone,\n              platform: Platform,\n              // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Platform} from '@angular/cdk/platform';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanDisable, CanDisableCtor,\n  CanDisableRipple, CanDisableRippleCtor,\n  HasTabIndex, HasTabIndexCtor,\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  mixinDisabled,\n  mixinDisableRipple,\n  mixinTabIndex, RippleConfig,\n  RippleGlobalOptions,\n  RippleRenderer,\n  RippleTarget,\n  ThemePalette,\n} from '@angular/material/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {FocusMonitor, FocusableOption} from '@angular/cdk/a11y';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {MatInkBar} from '../ink-bar';\nimport {MatPaginatedTabHeader, MatPaginatedTabHeaderItem} from '../paginated-tab-header';\nimport {startWith, takeUntil} from 'rxjs/operators';\n\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\n@Directive({\n  // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n  selector: 'do-not-use-abstract-mat-tab-nav-base'\n})\n// tslint:disable-next-line:class-name\nexport abstract class _MatTabNavBase extends MatPaginatedTabHeader implements AfterContentChecked,\n  AfterContentInit, OnDestroy {\n\n  /** Query list of all tab links of the tab navigation. */\n  abstract _items: QueryList<MatPaginatedTabHeaderItem & {active: boolean}>;\n\n  /** Background color of the tab nav. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  /** Whether the ripple effect is disabled or not. */\n  @Input()\n  get disableRipple() { return this._disableRipple; }\n  set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n  private _disableRipple: boolean = false;\n\n  /** Theme color of the nav bar. */\n  @Input() color: ThemePalette = 'primary';\n\n  constructor(elementRef: ElementRef,\n              @Optional() dir: Directionality,\n              ngZone: NgZone,\n              changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              /**\n               * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n               */\n              @Optional() platform?: Platform,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n  protected _itemSelected() {\n    // noop\n  }\n\n  ngAfterContentInit() {\n    // We need this to run before the `changes` subscription in parent to ensure that the\n    // selectedIndex is up-to-date by the time the super class starts looking for it.\n    this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      this.updateActiveLink();\n    });\n\n    super.ngAfterContentInit();\n  }\n\n  /**\n   * Notifies the component that the active link has been changed.\n   * @breaking-change 8.0.0 `element` parameter to be removed.\n   */\n  updateActiveLink(_element?: ElementRef) {\n    if (!this._items) {\n      return;\n    }\n\n    const items = this._items.toArray();\n\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].active) {\n        this.selectedIndex = i;\n        this._changeDetectorRef.markForCheck();\n        return;\n      }\n    }\n\n    // The ink bar should hide itself if no items are active.\n    this.selectedIndex = -1;\n    this._inkBar.hide();\n  }\n}\n\n\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\n@Component({\n  moduleId: module.id,\n  selector: '[mat-tab-nav-bar]',\n  exportAs: 'matTabNavBar, matTabNav',\n  inputs: ['color'],\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['tab-nav-bar.css'],\n  host: {\n    'class': 'mat-tab-nav-bar mat-tab-header',\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n    '[class.mat-accent]': 'color === \"accent\"',\n    '[class.mat-warn]': 'color === \"warn\"',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatTabNav extends _MatTabNavBase {\n  @ContentChildren(forwardRef(() => MatTabLink), {descendants: true}) _items: QueryList<MatTabLink>;\n  @ViewChild(MatInkBar, {static: true}) _inkBar: MatInkBar;\n  @ViewChild('tabListContainer', {static: true}) _tabListContainer: ElementRef;\n  @ViewChild('tabList', {static: true}) _tabList: ElementRef;\n  @ViewChild('nextPaginator', {static: false}) _nextPaginator: ElementRef<HTMLElement>;\n  @ViewChild('previousPaginator', {static: false}) _previousPaginator: ElementRef<HTMLElement>;\n\n  constructor(elementRef: ElementRef,\n    @Optional() dir: Directionality,\n    ngZone: NgZone,\n    changeDetectorRef: ChangeDetectorRef,\n    viewportRuler: ViewportRuler,\n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    @Optional() platform?: Platform,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n  }\n}\n\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {}\nconst _MatTabLinkMixinBase:\n    HasTabIndexCtor & CanDisableRippleCtor & CanDisableCtor & typeof MatTabLinkMixinBase =\n        mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n\n/** Base class with all of the `MatTabLink` functionality. */\n@Directive({\n  // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n  selector: 'do-not-use-abstract-mat-tab-link-base'\n})\n// tslint:disable-next-line:class-name\nexport class _MatTabLinkBase extends _MatTabLinkMixinBase implements OnDestroy, CanDisable,\n  CanDisableRipple, HasTabIndex, RippleTarget, FocusableOption {\n\n  /** Whether the tab link is active or not. */\n  protected _isActive: boolean = false;\n\n  /** Whether the link is active. */\n  @Input()\n  get active(): boolean { return this._isActive; }\n  set active(value: boolean) {\n    if (value !== this._isActive) {\n      this._isActive = value;\n      this._tabNavBar.updateActiveLink(this.elementRef);\n    }\n  }\n\n  /**\n   * Ripple configuration for ripples that are launched on pointer down. The ripple config\n   * is set to the global ripple options since we don't have any configurable options for\n   * the tab link ripples.\n   * @docs-private\n   */\n  rippleConfig: RippleConfig & RippleGlobalOptions;\n\n  /**\n   * Whether ripples are disabled on interaction.\n   * @docs-private\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n      !!this.rippleConfig.disabled;\n  }\n\n  constructor(\n      private _tabNavBar: _MatTabNavBase, public elementRef: ElementRef,\n      @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalRippleOptions: RippleGlobalOptions|null,\n      @Attribute('tabindex') tabIndex: string, private _focusMonitor: FocusMonitor,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super();\n\n    this.rippleConfig = globalRippleOptions || {};\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    if (animationMode === 'NoopAnimations') {\n      this.rippleConfig.animation = {enterDuration: 0, exitDuration: 0};\n    }\n\n    _focusMonitor.monitor(elementRef);\n  }\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this.elementRef);\n  }\n}\n\n\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\n@Directive({\n  selector: '[mat-tab-link], [matTabLink]',\n  exportAs: 'matTabLink',\n  inputs: ['disabled', 'disableRipple', 'tabIndex'],\n  host: {\n    'class': 'mat-tab-link',\n    '[attr.aria-current]': 'active ? \"page\" : null',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.tabIndex]': 'tabIndex',\n    '[class.mat-tab-disabled]': 'disabled',\n    '[class.mat-tab-label-active]': 'active',\n  }\n})\nexport class MatTabLink extends _MatTabLinkBase implements OnDestroy {\n  /** Reference to the RippleRenderer for the tab-link. */\n  private _tabLinkRipple: RippleRenderer;\n\n  constructor(\n    tabNavBar: MatTabNav, elementRef: ElementRef, ngZone: NgZone,\n    platform: Platform,\n    @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalRippleOptions: RippleGlobalOptions|null,\n    @Attribute('tabindex') tabIndex: string, focusMonitor: FocusMonitor,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n    this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._tabLinkRipple._removeTriggerEvents();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatInkBar} from './ink-bar';\nimport {MatTab} from './tab';\nimport {MatTabBody, MatTabBodyPortal, _MatTabBodyBase} from './tab-body';\nimport {MatTabContent} from './tab-content';\nimport {MatTabGroup, _MatTabGroupBase} from './tab-group';\nimport {MatTabHeader, _MatTabHeaderBase} from './tab-header';\nimport {MatTabLabel} from './tab-label';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {MatTabLink, MatTabNav, _MatTabNavBase, _MatTabLinkBase} from './tab-nav-bar/tab-nav-bar';\nimport {MatPaginatedTabHeader} from './paginated-tab-header';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCommonModule,\n    PortalModule,\n    MatRippleModule,\n    ObserversModule,\n    A11yModule,\n  ],\n  // Don't export all components because some are only to be used internally.\n  exports: [\n    MatCommonModule,\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatTabNav,\n    MatTabLink,\n    MatTabContent,\n  ],\n  declarations: [\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatInkBar,\n    MatTabLabelWrapper,\n    MatTabNav,\n    MatTabLink,\n    MatTabBody,\n    MatTabBodyPortal,\n    MatTabHeader,\n    MatTabContent,\n\n    // TODO(crisbeto): these can be removed once they're turned into selector-less directives.\n    MatPaginatedTabHeader as any,\n    _MatTabGroupBase as any,\n    _MatTabNavBase as any,\n    _MatTabBodyBase as any,\n    _MatTabHeaderBase as any,\n    _MatTabLinkBase as any,\n  ],\n})\nexport class MatTabsModule {}\n"]}