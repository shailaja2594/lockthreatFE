{"version":3,"file":"angular-oauth2-oidc.js","sources":["ng:/angular-oauth2-oidc/types.ts","ng:/angular-oauth2-oidc/base64-helper.ts","ng:/angular-oauth2-oidc/token-validation/validation-handler.ts","ng:/angular-oauth2-oidc/url-helper.service.ts","ng:/angular-oauth2-oidc/events.ts","ng:/angular-oauth2-oidc/auth.config.ts","ng:/angular-oauth2-oidc/encoder.ts","ng:/angular-oauth2-oidc/token-validation/hash-handler.ts","ng:/angular-oauth2-oidc/oauth-service.ts","ng:/angular-oauth2-oidc/oauth-module.config.ts","ng:/angular-oauth2-oidc/interceptors/resource-server-error-handler.ts","ng:/angular-oauth2-oidc/interceptors/default-oauth.interceptor.ts","ng:/angular-oauth2-oidc/token-validation/null-validation-handler.ts","ng:/angular-oauth2-oidc/factories.ts","ng:/angular-oauth2-oidc/angular-oauth-oidc.module.ts","ng:/angular-oauth2-oidc/token-validation/jwks-validation-handler.ts","ng:/angular-oauth2-oidc/tokens.ts","ng:/angular-oauth2-oidc/angular-oauth2-oidc.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Additional options that can be passed to tryLogin.\r\n */\r\nexport class LoginOptions {\r\n  /**\r\n   * Is called, after a token has been received and\r\n   * successfully validated.\r\n   *\r\n   * Deprecated:  Use property ``events`` on OAuthService instead.\r\n   */\r\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\r\n\r\n  /**\r\n   * Hook, to validate the received tokens.\r\n   *\r\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\r\n   */\r\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise<any>;\r\n\r\n  /**\r\n   * Called when tryLogin detects that the auth server\r\n   * included an error message into the hash fragment.\r\n   *\r\n   * Deprecated:  Use property ``events`` on OAuthService instead.\r\n   */\r\n  onLoginError?: (params: object) => void;\r\n\r\n  /**\r\n   * A custom hash fragment to be used instead of the\r\n   * actual one. This is used for silent refreshes, to\r\n   * pass the iframes hash fragment to this method, and\r\n   * is also used by popup flows in the same manner.\r\n   * This can be used with code flow, where is must be set\r\n   * to a hash symbol followed by the querystring. The\r\n   * question mark is optional, but may be present following\r\n   * the hash symbol.\r\n   */\r\n  customHashFragment?: string;\r\n\r\n  /**\r\n   * Set this to true to disable the oauth2 state\r\n   * check which is a best practice to avoid\r\n   * security attacks.\r\n   * As OIDC defines a nonce check that includes\r\n   * this, this can be set to true when only doing\r\n   * OIDC.\r\n   */\r\n  disableOAuth2StateCheck?: boolean;\r\n\r\n  /**\r\n   * Normally, you want to clear your hash fragment after\r\n   * the lib read the token(s) so that they are not displayed\r\n   * anymore in the url. If not, set this to true. For code flow\r\n   * this controls removing query string values.\r\n   */\r\n  preventClearHashAfterLogin? = false;\r\n\r\n  /**\r\n   * Set this for code flow if you used a custom redirect Uri\r\n   * when retrieving the code. This is used internally for silent\r\n   * refresh and popup flows.\r\n   */\r\n  customRedirectUri?: string;\r\n}\r\n\r\n/**\r\n * Defines the logging interface the OAuthService uses\r\n * internally. Is compatible with the `console` object,\r\n * but you can provide your own implementation as well\r\n * through dependency injection.\r\n */\r\nexport abstract class OAuthLogger {\r\n  abstract debug(message?: any, ...optionalParams: any[]): void;\r\n  abstract info(message?: any, ...optionalParams: any[]): void;\r\n  abstract log(message?: any, ...optionalParams: any[]): void;\r\n  abstract warn(message?: any, ...optionalParams: any[]): void;\r\n  abstract error(message?: any, ...optionalParams: any[]): void;\r\n}\r\n\r\n/**\r\n * Defines a simple storage that can be used for\r\n * storing the tokens at client side.\r\n * Is compatible to localStorage and sessionStorage,\r\n * but you can also create your own implementations.\r\n */\r\nexport abstract class OAuthStorage {\r\n  abstract getItem(key: string): string | null;\r\n  abstract removeItem(key: string): void;\r\n  abstract setItem(key: string, data: string): void;\r\n}\r\n\r\n@Injectable()\r\nexport class MemoryStorage implements OAuthStorage {\r\n  private data = new Map<string, string>();\r\n\r\n  getItem(key: string): string {\r\n    return this.data.get(key);\r\n  }\r\n\r\n  removeItem(key: string): void {\r\n    this.data.delete(key);\r\n  }\r\n\r\n  setItem(key: string, data: string): void {\r\n    this.data.set(key, data);\r\n  }\r\n}\r\n\r\n/**\r\n * Represents the received tokens, the received state\r\n * and the parsed claims from the id-token.\r\n */\r\nexport class ReceivedTokens {\r\n  idToken: string;\r\n  accessToken: string;\r\n  idClaims?: object;\r\n  state?: string;\r\n}\r\n\r\n/**\r\n * Represents the parsed and validated id_token.\r\n */\r\nexport interface ParsedIdToken {\r\n  idToken: string;\r\n  idTokenClaims: object;\r\n  idTokenHeader: object;\r\n  idTokenClaimsJson: string;\r\n  idTokenHeaderJson: string;\r\n  idTokenExpiresAt: number;\r\n}\r\n\r\n/**\r\n * Represents the response from the token endpoint\r\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\r\n */\r\nexport interface TokenResponse {\r\n  access_token: string;\r\n  id_token: string;\r\n  token_type: string;\r\n  expires_in: number;\r\n  refresh_token: string;\r\n  scope: string;\r\n  state?: string;\r\n}\r\n\r\n/**\r\n * Represents the response from the user info endpoint\r\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\r\n */\r\nexport interface UserInfo {\r\n  sub: string;\r\n  [key: string]: any;\r\n}\r\n\r\n/**\r\n * Represents an OpenID Connect discovery document\r\n */\r\nexport interface OidcDiscoveryDoc {\r\n  issuer: string;\r\n  authorization_endpoint: string;\r\n  token_endpoint: string;\r\n  token_endpoint_auth_methods_supported: string[];\r\n  token_endpoint_auth_signing_alg_values_supported: string[];\r\n  userinfo_endpoint: string;\r\n  check_session_iframe: string;\r\n  end_session_endpoint: string;\r\n  jwks_uri: string;\r\n  registration_endpoint: string;\r\n  scopes_supported: string[];\r\n  response_types_supported: string[];\r\n  acr_values_supported: string[];\r\n  response_modes_supported: string[];\r\n  grant_types_supported: string[];\r\n  subject_types_supported: string[];\r\n  userinfo_signing_alg_values_supported: string[];\r\n  userinfo_encryption_alg_values_supported: string[];\r\n  userinfo_encryption_enc_values_supported: string[];\r\n  id_token_signing_alg_values_supported: string[];\r\n  id_token_encryption_alg_values_supported: string[];\r\n  id_token_encryption_enc_values_supported: string[];\r\n  request_object_signing_alg_values_supported: string[];\r\n  display_values_supported: string[];\r\n  claim_types_supported: string[];\r\n  claims_supported: string[];\r\n  claims_parameter_supported: boolean;\r\n  service_documentation: string;\r\n  ui_locales_supported: string[];\r\n  revocation_endpoint: string;\r\n}\r\n","// see: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_.22Unicode_Problem.22\r\nexport function b64DecodeUnicode(str) {\r\n  const base64 = str.replace(/\\-/g, '+').replace(/\\_/g, '/');\r\n\r\n  return decodeURIComponent(\r\n    atob(base64)\r\n      .split('')\r\n      .map(function(c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n      })\r\n      .join('')\r\n  );\r\n}\r\n\r\nexport function base64UrlEncode(str): string {\r\n  const base64 = btoa(str);\r\n  return base64\r\n    .replace(/\\+/g, '-')\r\n    .replace(/\\//g, '_')\r\n    .replace(/=/g, '');\r\n}\r\n","import { base64UrlEncode } from '../base64-helper';\r\n\r\nexport interface ValidationParams {\r\n  idToken: string;\r\n  accessToken: string;\r\n  idTokenHeader: object;\r\n  idTokenClaims: object;\r\n  jwks: object;\r\n  loadKeys: () => Promise<object>;\r\n}\r\n\r\n/**\r\n * Interface for Handlers that are hooked in to\r\n * validate tokens.\r\n */\r\nexport abstract class ValidationHandler {\r\n  /**\r\n   * Validates the signature of an id_token.\r\n   */\r\n  public abstract validateSignature(\r\n    validationParams: ValidationParams\r\n  ): Promise<any>;\r\n\r\n  /**\r\n   * Validates the at_hash in an id_token against the received access_token.\r\n   */\r\n  public abstract validateAtHash(\r\n    validationParams: ValidationParams\r\n  ): Promise<boolean>;\r\n}\r\n\r\n/**\r\n * This abstract implementation of ValidationHandler already implements\r\n * the method validateAtHash. However, to make use of it,\r\n * you have to override the method calcHash.\r\n */\r\nexport abstract class AbstractValidationHandler implements ValidationHandler {\r\n  /**\r\n   * Validates the signature of an id_token.\r\n   */\r\n  abstract validateSignature(validationParams: ValidationParams): Promise<any>;\r\n\r\n  /**\r\n   * Validates the at_hash in an id_token against the received access_token.\r\n   */\r\n  async validateAtHash(params: ValidationParams): Promise<boolean> {\r\n    let hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\r\n\r\n    let tokenHash = await this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\r\n\r\n    let leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\r\n\r\n    let atHash = base64UrlEncode(leftMostHalf);\r\n\r\n    let claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\r\n\r\n    if (atHash !== claimsAtHash) {\r\n      console.error('exptected at_hash: ' + atHash);\r\n      console.error('actual at_hash: ' + claimsAtHash);\r\n    }\r\n\r\n    return atHash === claimsAtHash;\r\n  }\r\n\r\n  /**\r\n   * Infers the name of the hash algorithm to use\r\n   * from the alg field of an id_token.\r\n   *\r\n   * @param jwtHeader the id_token's parsed header\r\n   */\r\n  protected inferHashAlgorithm(jwtHeader: object): string {\r\n    let alg: string = jwtHeader['alg'];\r\n\r\n    if (!alg.match(/^.S[0-9]{3}$/)) {\r\n      throw new Error('Algorithm not supported: ' + alg);\r\n    }\r\n\r\n    return 'sha-' + alg.substr(2);\r\n  }\r\n\r\n  /**\r\n   * Calculates the hash for the passed value by using\r\n   * the passed hash algorithm.\r\n   *\r\n   * @param valueToHash\r\n   * @param algorithm\r\n   */\r\n  protected abstract calcHash(\r\n    valueToHash: string,\r\n    algorithm: string\r\n  ): Promise<string>;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class UrlHelperService {\r\n  public getHashFragmentParams(customHashFragment?: string): object {\r\n    let hash = customHashFragment || window.location.hash;\r\n\r\n    hash = decodeURIComponent(hash);\r\n\r\n    if (hash.indexOf('#') !== 0) {\r\n      return {};\r\n    }\r\n\r\n    const questionMarkPosition = hash.indexOf('?');\r\n\r\n    if (questionMarkPosition > -1) {\r\n      hash = hash.substr(questionMarkPosition + 1);\r\n    } else {\r\n      hash = hash.substr(1);\r\n    }\r\n\r\n    return this.parseQueryString(hash);\r\n  }\r\n\r\n  public parseQueryString(queryString: string): object {\r\n    const data = {};\r\n    let pairs, pair, separatorIndex, escapedKey, escapedValue, key, value;\r\n\r\n    if (queryString === null) {\r\n      return data;\r\n    }\r\n\r\n    pairs = queryString.split('&');\r\n\r\n    for (let i = 0; i < pairs.length; i++) {\r\n      pair = pairs[i];\r\n      separatorIndex = pair.indexOf('=');\r\n\r\n      if (separatorIndex === -1) {\r\n        escapedKey = pair;\r\n        escapedValue = null;\r\n      } else {\r\n        escapedKey = pair.substr(0, separatorIndex);\r\n        escapedValue = pair.substr(separatorIndex + 1);\r\n      }\r\n\r\n      key = decodeURIComponent(escapedKey);\r\n      value = decodeURIComponent(escapedValue);\r\n\r\n      if (key.substr(0, 1) === '/') {\r\n        key = key.substr(1);\r\n      }\r\n\r\n      data[key] = value;\r\n    }\r\n\r\n    return data;\r\n  }\r\n}\r\n","export type EventType =\r\n  | 'discovery_document_loaded'\r\n  | 'jwks_load_error'\r\n  | 'invalid_nonce_in_state'\r\n  | 'discovery_document_load_error'\r\n  | 'discovery_document_validation_error'\r\n  | 'user_profile_loaded'\r\n  | 'user_profile_load_error'\r\n  | 'token_received'\r\n  | 'token_error'\r\n  | 'code_error'\r\n  | 'token_refreshed'\r\n  | 'token_refresh_error'\r\n  | 'silent_refresh_error'\r\n  | 'silently_refreshed'\r\n  | 'silent_refresh_timeout'\r\n  | 'token_validation_error'\r\n  | 'token_expires'\r\n  | 'session_changed'\r\n  | 'session_error'\r\n  | 'session_terminated'\r\n  | 'logout'\r\n  | 'popup_closed'\r\n  | 'popup_blocked'\r\n  | 'token_revoke_error';\r\n\r\nexport abstract class OAuthEvent {\r\n  constructor(readonly type: EventType) {}\r\n}\r\n\r\nexport class OAuthSuccessEvent extends OAuthEvent {\r\n  constructor(type: EventType, readonly info: any = null) {\r\n    super(type);\r\n  }\r\n}\r\n\r\nexport class OAuthInfoEvent extends OAuthEvent {\r\n  constructor(type: EventType, readonly info: any = null) {\r\n    super(type);\r\n  }\r\n}\r\n\r\nexport class OAuthErrorEvent extends OAuthEvent {\r\n  constructor(\r\n    type: EventType,\r\n    readonly reason: object,\r\n    readonly params: object = null\r\n  ) {\r\n    super(type);\r\n  }\r\n}\r\n","export class AuthConfig {\r\n  /**\r\n   * The client's id as registered with the auth server\r\n   */\r\n  public clientId? = '';\r\n\r\n  /**\r\n   * The client's redirectUri as registered with the auth server\r\n   */\r\n  public redirectUri? = '';\r\n\r\n  /**\r\n   * An optional second redirectUri where the auth server\r\n   * redirects the user to after logging out.\r\n   */\r\n  public postLogoutRedirectUri? = '';\r\n\r\n  /**\r\n   * The auth server's endpoint that allows to log\r\n   * the user in when using implicit flow.\r\n   */\r\n  public loginUrl? = '';\r\n\r\n  /**\r\n   * The requested scopes\r\n   */\r\n  public scope? = 'openid profile';\r\n\r\n  public resource? = '';\r\n\r\n  public rngUrl? = '';\r\n\r\n  /**\r\n   * Defines whether to use OpenId Connect during\r\n   * implicit flow.\r\n   */\r\n  public oidc? = true;\r\n\r\n  /**\r\n   * Defines whether to request an access token during\r\n   * implicit flow.\r\n   */\r\n  public requestAccessToken? = true;\r\n\r\n  public options?: any = null;\r\n\r\n  /**\r\n   * The issuer's uri.\r\n   */\r\n  public issuer? = '';\r\n\r\n  /**\r\n   * The logout url.\r\n   */\r\n  public logoutUrl? = '';\r\n\r\n  /**\r\n   * Defines whether to clear the hash fragment after logging in.\r\n   */\r\n  public clearHashAfterLogin? = true;\r\n\r\n  /**\r\n   * Url of the token endpoint as defined by OpenId Connect and OAuth 2.\r\n   */\r\n  public tokenEndpoint?: string = null;\r\n\r\n  /**\r\n   * Url of the revocation endpoint as defined by OpenId Connect and OAuth 2.\r\n   */\r\n  public revocationEndpoint?: string = null;\r\n\r\n  /**\r\n   * Names of known parameters sent out in the TokenResponse. https://tools.ietf.org/html/rfc6749#section-5.1\r\n   */\r\n  public customTokenParameters?: string[] = [];\r\n\r\n  /**\r\n   * Url of the userinfo endpoint as defined by OpenId Connect.\r\n   */\r\n  public userinfoEndpoint?: string = null;\r\n\r\n  public responseType? = '';\r\n\r\n  /**\r\n   * Defines whether additional debug information should\r\n   * be shown at the console. Note that in certain browsers\r\n   * the verbosity of the console needs to be explicitly set\r\n   * to include Debug level messages.\r\n   */\r\n  public showDebugInformation? = false;\r\n\r\n  /**\r\n   * The redirect uri used when doing silent refresh.\r\n   */\r\n  public silentRefreshRedirectUri? = '';\r\n\r\n  public silentRefreshMessagePrefix? = '';\r\n\r\n  /**\r\n   * Set this to true to display the iframe used for\r\n   * silent refresh for debugging.\r\n   */\r\n  public silentRefreshShowIFrame? = false;\r\n\r\n  /**\r\n   * Timeout for silent refresh.\r\n   * @internal\r\n   * depreacted b/c of typo, see silentRefreshTimeout\r\n   */\r\n  public siletRefreshTimeout?: number = 1000 * 20;\r\n\r\n  /**\r\n   * Timeout for silent refresh.\r\n   */\r\n  public silentRefreshTimeout?: number = 1000 * 20;\r\n\r\n  /**\r\n   * Some auth servers don't allow using password flow\r\n   * w/o a client secret while the standards do not\r\n   * demand for it. In this case, you can set a password\r\n   * here. As this password is exposed to the public\r\n   * it does not bring additional security and is therefore\r\n   * as good as using no password.\r\n   */\r\n  public dummyClientSecret?: string = null;\r\n\r\n  /**\r\n   * Defines whether https is required.\r\n   * The default value is remoteOnly which only allows\r\n   * http for localhost, while every other domains need\r\n   * to be used with https.\r\n   */\r\n  public requireHttps?: boolean | 'remoteOnly' = 'remoteOnly';\r\n\r\n  /**\r\n   * Defines whether every url provided by the discovery\r\n   * document has to start with the issuer's url.\r\n   */\r\n  public strictDiscoveryDocumentValidation? = true;\r\n\r\n  /**\r\n   * JSON Web Key Set (https://tools.ietf.org/html/rfc7517)\r\n   * with keys used to validate received id_tokens.\r\n   * This is taken out of the disovery document. Can be set manually too.\r\n   */\r\n  public jwks?: object = null;\r\n\r\n  /**\r\n   * Map with additional query parameter that are appended to\r\n   * the request when initializing implicit flow.\r\n   */\r\n  public customQueryParams?: object = null;\r\n\r\n  public silentRefreshIFrameName? = 'angular-oauth-oidc-silent-refresh-iframe';\r\n\r\n  /**\r\n   * Defines when the token_timeout event should be raised.\r\n   * If you set this to the default value 0.75, the event\r\n   * is triggered after 75% of the token's life time.\r\n   */\r\n  public timeoutFactor? = 0.75;\r\n\r\n  /**\r\n   * If true, the lib will try to check whether the user\r\n   * is still logged in on a regular basis as described\r\n   * in http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\r\n   */\r\n  public sessionChecksEnabled? = false;\r\n\r\n  /**\r\n   * Interval in msec for checking the session\r\n   * according to http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\r\n   */\r\n  public sessionCheckIntervall? = 3 * 1000;\r\n\r\n  /**\r\n   * Url for the iframe used for session checks\r\n   */\r\n  public sessionCheckIFrameUrl?: string = null;\r\n\r\n  /**\r\n   * Name of the iframe to use for session checks\r\n   */\r\n  public sessionCheckIFrameName? = 'angular-oauth-oidc-check-session-iframe';\r\n\r\n  /**\r\n   * This property has been introduced to disable at_hash checks\r\n   * and is indented for Identity Provider that does not deliver\r\n   * an at_hash EVEN THOUGH its recommended by the OIDC specs.\r\n   * Of course, when disabling these checks the we are bypassing\r\n   * a security check which means we are more vulnerable.\r\n   */\r\n  public disableAtHashCheck? = false;\r\n\r\n  /**\r\n   * Defines wether to check the subject of a refreshed token after silent refresh.\r\n   * Normally, it should be the same as before.\r\n   */\r\n  public skipSubjectCheck? = false;\r\n\r\n  public useIdTokenHintForSilentRefresh? = false;\r\n\r\n  /**\r\n   * Defined whether to skip the validation of the issuer in the discovery document.\r\n   * Normally, the discovey document's url starts with the url of the issuer.\r\n   */\r\n  public skipIssuerCheck? = false;\r\n\r\n  /**\r\n   * According to rfc6749 it is recommended (but not required) that the auth\r\n   * server exposes the access_token's life time in seconds.\r\n   * This is a fallback value for the case this value is not exposed.\r\n   */\r\n  public fallbackAccessTokenExpirationTimeInSec?: number;\r\n\r\n  /**\r\n   * final state sent to issuer is built as follows:\r\n   * state = nonce + nonceStateSeparator + additional state\r\n   * Default separator is ';' (encoded %3B).\r\n   * In rare cases, this character might be forbidden or inconvenient to use by the issuer so it can be customized.\r\n   */\r\n  public nonceStateSeparator? = ';';\r\n\r\n  /**\r\n   * Set this to true to use HTTP BASIC auth for AJAX calls\r\n   */\r\n  public useHttpBasicAuth? = false;\r\n\r\n  /**\r\n   * The window of time (in seconds) to allow the current time to deviate when validating id_token's iat and exp values.\r\n   */\r\n  public clockSkewInSec?: number;\r\n\r\n  /**\r\n   * The interceptors waits this time span if there is no token\r\n   */\r\n  public waitForTokenInMsec? = 0;\r\n\r\n  /**\r\n   * Set this to true if you want to use silent refresh together with\r\n   * code flow. As silent refresh is the only option for refreshing\r\n   * with implicit flow, you don't need to explicitly turn it on in\r\n   * this case.\r\n   */\r\n  public useSilentRefresh?;\r\n\r\n  /**\r\n   * Code Flow is by defauld used together with PKCI which is also higly recommented.\r\n   * You can disbale it here by setting this flag to true.\r\n   * https://tools.ietf.org/html/rfc7636#section-1.1\r\n   */\r\n  public disablePKCE? = false;\r\n\r\n  constructor(json?: Partial<AuthConfig>) {\r\n    if (json) {\r\n      Object.assign(this, json);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This property allows you to override the method that is used to open the login url,\r\n   * allowing a way for implementations to specify their own method of routing to new\r\n   * urls.\r\n   */\r\n  public openUri?: (uri: string) => void = uri => {\r\n    location.href = uri;\r\n  };\r\n}\r\n","import { HttpParameterCodec } from '@angular/common/http';\r\n/**\r\n * This custom encoder allows charactes like +, % and / to be used in passwords\r\n */\r\nexport class WebHttpUrlEncodingCodec implements HttpParameterCodec {\r\n  encodeKey(k: string): string {\r\n    return encodeURIComponent(k);\r\n  }\r\n\r\n  encodeValue(v: string): string {\r\n    return encodeURIComponent(v);\r\n  }\r\n\r\n  decodeKey(k: string): string {\r\n    return decodeURIComponent(k);\r\n  }\r\n\r\n  decodeValue(v: string) {\r\n    return decodeURIComponent(v);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { sha256 } from 'js-sha256';\r\n\r\n/**\r\n * Abstraction for crypto algorithms\r\n */\r\nexport abstract class HashHandler {\r\n  abstract calcHash(valueToHash: string, algorithm: string): Promise<string>;\r\n}\r\n\r\n@Injectable()\r\nexport class DefaultHashHandler implements HashHandler {\r\n  async calcHash(valueToHash: string, algorithm: string): Promise<string> {\r\n    // const encoder = new TextEncoder();\r\n    // const hashArray = await window.crypto.subtle.digest(algorithm, data);\r\n    // const data = encoder.encode(valueToHash);\r\n\r\n    const hashArray = sha256.array(valueToHash);\r\n    // const hashString = this.toHashString(hashArray);\r\n    const hashString = this.toHashString2(hashArray);\r\n\r\n    return hashString;\r\n  }\r\n\r\n  toHashString2(byteArray: number[]) {\r\n    let result = '';\r\n    for (let e of byteArray) {\r\n      result += String.fromCharCode(e);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  toHashString(buffer: ArrayBuffer) {\r\n    const byteArray = new Uint8Array(buffer);\r\n    let result = '';\r\n    for (let e of byteArray) {\r\n      result += String.fromCharCode(e);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  // hexString(buffer) {\r\n  //     const byteArray = new Uint8Array(buffer);\r\n  //     const hexCodes = [...byteArray].map(value => {\r\n  //       const hexCode = value.toString(16);\r\n  //       const paddedHexCode = hexCode.padStart(2, '0');\r\n  //       return paddedHexCode;\r\n  //     });\r\n\r\n  //     return hexCodes.join('');\r\n  //   }\r\n\r\n  // toHashString(hexString: string) {\r\n  //   let result = '';\r\n  //   for (let i = 0; i < hexString.length; i += 2) {\r\n  //     let hexDigit = hexString.charAt(i) + hexString.charAt(i + 1);\r\n  //     let num = parseInt(hexDigit, 16);\r\n  //     result += String.fromCharCode(num);\r\n  //   }\r\n  //   return result;\r\n  // }\r\n}\r\n","import { Injectable, NgZone, Optional, OnDestroy, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport {\r\n  Observable,\r\n  Subject,\r\n  Subscription,\r\n  of,\r\n  race,\r\n  from,\r\n  combineLatest\r\n} from 'rxjs';\r\nimport {\r\n  filter,\r\n  delay,\r\n  first,\r\n  tap,\r\n  map,\r\n  switchMap,\r\n  debounceTime\r\n} from 'rxjs/operators';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\nimport {\r\n  ValidationHandler,\r\n  ValidationParams\r\n} from './token-validation/validation-handler';\r\nimport { UrlHelperService } from './url-helper.service';\r\nimport {\r\n  OAuthEvent,\r\n  OAuthInfoEvent,\r\n  OAuthErrorEvent,\r\n  OAuthSuccessEvent\r\n} from './events';\r\nimport {\r\n  OAuthLogger,\r\n  OAuthStorage,\r\n  LoginOptions,\r\n  ParsedIdToken,\r\n  OidcDiscoveryDoc,\r\n  TokenResponse,\r\n  UserInfo\r\n} from './types';\r\nimport { b64DecodeUnicode, base64UrlEncode } from './base64-helper';\r\nimport { AuthConfig } from './auth.config';\r\nimport { WebHttpUrlEncodingCodec } from './encoder';\r\nimport { HashHandler } from './token-validation/hash-handler';\r\n\r\n/**\r\n * Service for logging in and logging out with\r\n * OIDC and OAuth2. Supports implicit flow and\r\n * password flow.\r\n */\r\n@Injectable()\r\nexport class OAuthService extends AuthConfig implements OnDestroy {\r\n  // Extending AuthConfig ist just for LEGACY reasons\r\n  // to not break existing code.\r\n\r\n  /**\r\n   * The ValidationHandler used to validate received\r\n   * id_tokens.\r\n   */\r\n  public tokenValidationHandler: ValidationHandler;\r\n\r\n  /**\r\n   * @internal\r\n   * Deprecated:  use property events instead\r\n   */\r\n  public discoveryDocumentLoaded = false;\r\n\r\n  /**\r\n   * @internal\r\n   * Deprecated:  use property events instead\r\n   */\r\n  public discoveryDocumentLoaded$: Observable<OidcDiscoveryDoc>;\r\n\r\n  /**\r\n   * Informs about events, like token_received or token_expires.\r\n   * See the string enum EventType for a full list of event types.\r\n   */\r\n  public events: Observable<OAuthEvent>;\r\n\r\n  /**\r\n   * The received (passed around) state, when logging\r\n   * in with implicit flow.\r\n   */\r\n  public state? = '';\r\n\r\n  protected eventsSubject: Subject<OAuthEvent> = new Subject<OAuthEvent>();\r\n  protected discoveryDocumentLoadedSubject: Subject<\r\n    OidcDiscoveryDoc\r\n  > = new Subject<OidcDiscoveryDoc>();\r\n  protected silentRefreshPostMessageEventListener: EventListener;\r\n  protected grantTypesSupported: Array<string> = [];\r\n  protected _storage: OAuthStorage;\r\n  protected accessTokenTimeoutSubscription: Subscription;\r\n  protected idTokenTimeoutSubscription: Subscription;\r\n  protected tokenReceivedSubscription: Subscription;\r\n  protected sessionCheckEventListener: EventListener;\r\n  protected jwksUri: string;\r\n  protected sessionCheckTimer: any;\r\n  protected silentRefreshSubject: string;\r\n  protected inImplicitFlow = false;\r\n\r\n  protected saveNoncesInLocalStorage = false;\r\n\r\n  constructor(\r\n    protected ngZone: NgZone,\r\n    protected http: HttpClient,\r\n    @Optional() storage: OAuthStorage,\r\n    @Optional() tokenValidationHandler: ValidationHandler,\r\n    @Optional() protected config: AuthConfig,\r\n    protected urlHelper: UrlHelperService,\r\n    protected logger: OAuthLogger,\r\n    @Optional() protected crypto: HashHandler,\r\n    @Inject(DOCUMENT) private document: Document\r\n  ) {\r\n    super();\r\n\r\n    this.debug('angular-oauth2-oidc v8-beta');\r\n\r\n    this.discoveryDocumentLoaded$ = this.discoveryDocumentLoadedSubject.asObservable();\r\n    this.events = this.eventsSubject.asObservable();\r\n\r\n    if (tokenValidationHandler) {\r\n      this.tokenValidationHandler = tokenValidationHandler;\r\n    }\r\n\r\n    if (config) {\r\n      this.configure(config);\r\n    }\r\n\r\n    try {\r\n      if (storage) {\r\n        this.setStorage(storage);\r\n      } else if (typeof sessionStorage !== 'undefined') {\r\n        this.setStorage(sessionStorage);\r\n      }\r\n    } catch (e) {\r\n      console.error(\r\n        'No OAuthStorage provided and cannot access default (sessionStorage).' +\r\n          'Consider providing a custom OAuthStorage implementation in your module.',\r\n        e\r\n      );\r\n    }\r\n\r\n    // in IE, sessionStorage does not always survive a redirect\r\n    if (\r\n      typeof window !== 'undefined' &&\r\n      typeof window['localStorage'] !== 'undefined'\r\n    ) {\r\n      const ua = window?.navigator?.userAgent;\r\n      const msie = ua?.includes('MSIE ') || ua?.includes('Trident');\r\n\r\n      if (msie) {\r\n        this.saveNoncesInLocalStorage = true;\r\n      }\r\n    }\r\n\r\n    this.setupRefreshTimer();\r\n  }\r\n\r\n  /**\r\n   * Use this method to configure the service\r\n   * @param config the configuration\r\n   */\r\n  public configure(config: AuthConfig): void {\r\n    // For the sake of downward compatibility with\r\n    // original configuration API\r\n    Object.assign(this, new AuthConfig(), config);\r\n\r\n    this.config = Object.assign({} as AuthConfig, new AuthConfig(), config);\r\n\r\n    if (this.sessionChecksEnabled) {\r\n      this.setupSessionCheck();\r\n    }\r\n\r\n    this.configChanged();\r\n  }\r\n\r\n  protected configChanged(): void {\r\n    this.setupRefreshTimer();\r\n  }\r\n\r\n  public restartSessionChecksIfStillLoggedIn(): void {\r\n    if (this.hasValidIdToken()) {\r\n      this.initSessionCheck();\r\n    }\r\n  }\r\n\r\n  protected restartRefreshTimerIfStillLoggedIn(): void {\r\n    this.setupExpirationTimers();\r\n  }\r\n\r\n  protected setupSessionCheck(): void {\r\n    this.events.pipe(filter(e => e.type === 'token_received')).subscribe(e => {\r\n      this.initSessionCheck();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Will setup up silent refreshing for when the token is\r\n   * about to expire. When the user is logged out via this.logOut method, the\r\n   * silent refreshing will pause and not refresh the tokens until the user is\r\n   * logged back in via receiving a new token.\r\n   * @param params Additional parameter to pass\r\n   * @param listenTo Setup automatic refresh of a specific token type\r\n   */\r\n  public setupAutomaticSilentRefresh(\r\n    params: object = {},\r\n    listenTo?: 'access_token' | 'id_token' | 'any',\r\n    noPrompt = true\r\n  ): void {\r\n    let shouldRunSilentRefresh = true;\r\n    this.events\r\n      .pipe(\r\n        tap(e => {\r\n          if (e.type === 'token_received') {\r\n            shouldRunSilentRefresh = true;\r\n          } else if (e.type === 'logout') {\r\n            shouldRunSilentRefresh = false;\r\n          }\r\n        }),\r\n        filter(e => e.type === 'token_expires'),\r\n        debounceTime(1000)\r\n      )\r\n      .subscribe(e => {\r\n        const event = e as OAuthInfoEvent;\r\n        if (\r\n          (listenTo == null || listenTo === 'any' || event.info === listenTo) &&\r\n          shouldRunSilentRefresh\r\n        ) {\r\n          // this.silentRefresh(params, noPrompt).catch(_ => {\r\n          this.refreshInternal(params, noPrompt).catch(_ => {\r\n            this.debug('Automatic silent refresh did not work');\r\n          });\r\n        }\r\n      });\r\n\r\n    this.restartRefreshTimerIfStillLoggedIn();\r\n  }\r\n\r\n  protected refreshInternal(\r\n    params,\r\n    noPrompt\r\n  ): Promise<TokenResponse | OAuthEvent> {\r\n    if (!this.useSilentRefresh && this.responseType === 'code') {\r\n      return this.refreshToken();\r\n    } else {\r\n      return this.silentRefresh(params, noPrompt);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convenience method that first calls `loadDiscoveryDocument(...)` and\r\n   * directly chains using the `then(...)` part of the promise to call\r\n   * the `tryLogin(...)` method.\r\n   *\r\n   * @param options LoginOptions to pass through to `tryLogin(...)`\r\n   */\r\n  public loadDiscoveryDocumentAndTryLogin(\r\n    options: LoginOptions = null\r\n  ): Promise<boolean> {\r\n    return this.loadDiscoveryDocument().then(doc => {\r\n      return this.tryLogin(options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Convenience method that first calls `loadDiscoveryDocumentAndTryLogin(...)`\r\n   * and if then chains to `initLoginFlow()`, but only if there is no valid\r\n   * IdToken or no valid AccessToken.\r\n   *\r\n   * @param options LoginOptions to pass through to `tryLogin(...)`\r\n   */\r\n  public loadDiscoveryDocumentAndLogin(\r\n    options: LoginOptions & { state?: string } = null\r\n  ): Promise<boolean> {\r\n    if (!options) {\r\n      options = { state: '' };\r\n    }\r\n    return this.loadDiscoveryDocumentAndTryLogin(options).then(_ => {\r\n      if (!this.hasValidIdToken() || !this.hasValidAccessToken()) {\r\n        if (this.responseType === 'code') {\r\n          this.initCodeFlow();\r\n        } else {\r\n          this.initImplicitFlow();\r\n        }\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  protected debug(...args): void {\r\n    if (this.showDebugInformation) {\r\n      this.logger.debug.apply(this.logger, args);\r\n    }\r\n  }\r\n\r\n  protected validateUrlFromDiscoveryDocument(url: string): string[] {\r\n    const errors: string[] = [];\r\n    const httpsCheck = this.validateUrlForHttps(url);\r\n    const issuerCheck = this.validateUrlAgainstIssuer(url);\r\n\r\n    if (!httpsCheck) {\r\n      errors.push(\r\n        'https for all urls required. Also for urls received by discovery.'\r\n      );\r\n    }\r\n\r\n    if (!issuerCheck) {\r\n      errors.push(\r\n        'Every url in discovery document has to start with the issuer url.' +\r\n          'Also see property strictDiscoveryDocumentValidation.'\r\n      );\r\n    }\r\n\r\n    return errors;\r\n  }\r\n\r\n  protected validateUrlForHttps(url: string): boolean {\r\n    if (!url) {\r\n      return true;\r\n    }\r\n\r\n    const lcUrl = url.toLowerCase();\r\n\r\n    if (this.requireHttps === false) {\r\n      return true;\r\n    }\r\n\r\n    if (\r\n      (lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/) ||\r\n        lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/)) &&\r\n      this.requireHttps === 'remoteOnly'\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return lcUrl.startsWith('https://');\r\n  }\r\n\r\n  protected assertUrlNotNullAndCorrectProtocol(\r\n    url: string | undefined,\r\n    description: string\r\n  ) {\r\n    if (!url) {\r\n      throw new Error(`'${description}' should not be null`);\r\n    }\r\n    if (!this.validateUrlForHttps(url)) {\r\n      throw new Error(\r\n        `'${description}' must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).`\r\n      );\r\n    }\r\n  }\r\n\r\n  protected validateUrlAgainstIssuer(url: string) {\r\n    if (!this.strictDiscoveryDocumentValidation) {\r\n      return true;\r\n    }\r\n    if (!url) {\r\n      return true;\r\n    }\r\n    return url.toLowerCase().startsWith(this.issuer.toLowerCase());\r\n  }\r\n\r\n  protected setupRefreshTimer(): void {\r\n    if (typeof window === 'undefined') {\r\n      this.debug('timer not supported on this plattform');\r\n      return;\r\n    }\r\n\r\n    if (this.hasValidIdToken() || this.hasValidAccessToken()) {\r\n      this.clearAccessTokenTimer();\r\n      this.clearIdTokenTimer();\r\n      this.setupExpirationTimers();\r\n    }\r\n\r\n    if (this.tokenReceivedSubscription)\r\n      this.tokenReceivedSubscription.unsubscribe();\r\n\r\n    this.tokenReceivedSubscription = this.events\r\n      .pipe(filter(e => e.type === 'token_received'))\r\n      .subscribe(_ => {\r\n        this.clearAccessTokenTimer();\r\n        this.clearIdTokenTimer();\r\n        this.setupExpirationTimers();\r\n      });\r\n  }\r\n\r\n  protected setupExpirationTimers(): void {\r\n    if (this.hasValidAccessToken()) {\r\n      this.setupAccessTokenTimer();\r\n    }\r\n\r\n    if (this.hasValidIdToken()) {\r\n      this.setupIdTokenTimer();\r\n    }\r\n  }\r\n\r\n  protected setupAccessTokenTimer(): void {\r\n    const expiration = this.getAccessTokenExpiration();\r\n    const storedAt = this.getAccessTokenStoredAt();\r\n    const timeout = this.calcTimeout(storedAt, expiration);\r\n\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.accessTokenTimeoutSubscription = of(\r\n        new OAuthInfoEvent('token_expires', 'access_token')\r\n      )\r\n        .pipe(delay(timeout))\r\n        .subscribe(e => {\r\n          this.ngZone.run(() => {\r\n            this.eventsSubject.next(e);\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  protected setupIdTokenTimer(): void {\r\n    const expiration = this.getIdTokenExpiration();\r\n    const storedAt = this.getIdTokenStoredAt();\r\n    const timeout = this.calcTimeout(storedAt, expiration);\r\n\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.idTokenTimeoutSubscription = of(\r\n        new OAuthInfoEvent('token_expires', 'id_token')\r\n      )\r\n        .pipe(delay(timeout))\r\n        .subscribe(e => {\r\n          this.ngZone.run(() => {\r\n            this.eventsSubject.next(e);\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Stops timers for automatic refresh.\r\n   * To restart it, call setupAutomaticSilentRefresh again.\r\n   */\r\n  public stopAutomaticRefresh() {\r\n    this.clearAccessTokenTimer();\r\n    this.clearIdTokenTimer();\r\n  }\r\n\r\n  protected clearAccessTokenTimer(): void {\r\n    if (this.accessTokenTimeoutSubscription) {\r\n      this.accessTokenTimeoutSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  protected clearIdTokenTimer(): void {\r\n    if (this.idTokenTimeoutSubscription) {\r\n      this.idTokenTimeoutSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  protected calcTimeout(storedAt: number, expiration: number): number {\r\n    const now = Date.now();\r\n    const delta =\r\n      (expiration - storedAt) * this.timeoutFactor - (now - storedAt);\r\n    return Math.max(0, delta);\r\n  }\r\n\r\n  /**\r\n   * DEPRECATED. Use a provider for OAuthStorage instead:\r\n   *\r\n   * { provide: OAuthStorage, useFactory: oAuthStorageFactory }\r\n   * export function oAuthStorageFactory(): OAuthStorage { return localStorage; }\r\n   * Sets a custom storage used to store the received\r\n   * tokens on client side. By default, the browser's\r\n   * sessionStorage is used.\r\n   * @ignore\r\n   *\r\n   * @param storage\r\n   */\r\n  public setStorage(storage: OAuthStorage): void {\r\n    this._storage = storage;\r\n    this.configChanged();\r\n  }\r\n\r\n  /**\r\n   * Loads the discovery document to configure most\r\n   * properties of this service. The url of the discovery\r\n   * document is infered from the issuer's url according\r\n   * to the OpenId Connect spec. To use another url you\r\n   * can pass it to to optional parameter fullUrl.\r\n   *\r\n   * @param fullUrl\r\n   */\r\n  public loadDiscoveryDocument(\r\n    fullUrl: string = null\r\n  ): Promise<OAuthSuccessEvent> {\r\n    return new Promise((resolve, reject) => {\r\n      if (!fullUrl) {\r\n        fullUrl = this.issuer || '';\r\n        if (!fullUrl.endsWith('/')) {\r\n          fullUrl += '/';\r\n        }\r\n        fullUrl += '.well-known/openid-configuration';\r\n      }\r\n\r\n      if (!this.validateUrlForHttps(fullUrl)) {\r\n        reject(\r\n          \"issuer  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\"\r\n        );\r\n        return;\r\n      }\r\n\r\n      this.http.get<OidcDiscoveryDoc>(fullUrl).subscribe(\r\n        doc => {\r\n          if (!this.validateDiscoveryDocument(doc)) {\r\n            this.eventsSubject.next(\r\n              new OAuthErrorEvent('discovery_document_validation_error', null)\r\n            );\r\n            reject('discovery_document_validation_error');\r\n            return;\r\n          }\r\n\r\n          this.loginUrl = doc.authorization_endpoint;\r\n          this.logoutUrl = doc.end_session_endpoint || this.logoutUrl;\r\n          this.grantTypesSupported = doc.grant_types_supported;\r\n          this.issuer = doc.issuer;\r\n          this.tokenEndpoint = doc.token_endpoint;\r\n          this.userinfoEndpoint =\r\n            doc.userinfo_endpoint || this.userinfoEndpoint;\r\n          this.jwksUri = doc.jwks_uri;\r\n          this.sessionCheckIFrameUrl =\r\n            doc.check_session_iframe || this.sessionCheckIFrameUrl;\r\n\r\n          this.discoveryDocumentLoaded = true;\r\n          this.discoveryDocumentLoadedSubject.next(doc);\r\n          this.revocationEndpoint = doc.revocation_endpoint;\r\n\r\n          if (this.sessionChecksEnabled) {\r\n            this.restartSessionChecksIfStillLoggedIn();\r\n          }\r\n\r\n          this.loadJwks()\r\n            .then(jwks => {\r\n              const result: object = {\r\n                discoveryDocument: doc,\r\n                jwks: jwks\r\n              };\r\n\r\n              const event = new OAuthSuccessEvent(\r\n                'discovery_document_loaded',\r\n                result\r\n              );\r\n              this.eventsSubject.next(event);\r\n              resolve(event);\r\n              return;\r\n            })\r\n            .catch(err => {\r\n              this.eventsSubject.next(\r\n                new OAuthErrorEvent('discovery_document_load_error', err)\r\n              );\r\n              reject(err);\r\n              return;\r\n            });\r\n        },\r\n        err => {\r\n          this.logger.error('error loading discovery document', err);\r\n          this.eventsSubject.next(\r\n            new OAuthErrorEvent('discovery_document_load_error', err)\r\n          );\r\n          reject(err);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  protected loadJwks(): Promise<object> {\r\n    return new Promise<object>((resolve, reject) => {\r\n      if (this.jwksUri) {\r\n        this.http.get(this.jwksUri).subscribe(\r\n          jwks => {\r\n            this.jwks = jwks;\r\n            this.eventsSubject.next(\r\n              new OAuthSuccessEvent('discovery_document_loaded')\r\n            );\r\n            resolve(jwks);\r\n          },\r\n          err => {\r\n            this.logger.error('error loading jwks', err);\r\n            this.eventsSubject.next(\r\n              new OAuthErrorEvent('jwks_load_error', err)\r\n            );\r\n            reject(err);\r\n          }\r\n        );\r\n      } else {\r\n        resolve(null);\r\n      }\r\n    });\r\n  }\r\n\r\n  protected validateDiscoveryDocument(doc: OidcDiscoveryDoc): boolean {\r\n    let errors: string[];\r\n\r\n    if (!this.skipIssuerCheck && doc.issuer !== this.issuer) {\r\n      this.logger.error(\r\n        'invalid issuer in discovery document',\r\n        'expected: ' + this.issuer,\r\n        'current: ' + doc.issuer\r\n      );\r\n      return false;\r\n    }\r\n\r\n    errors = this.validateUrlFromDiscoveryDocument(doc.authorization_endpoint);\r\n    if (errors.length > 0) {\r\n      this.logger.error(\r\n        'error validating authorization_endpoint in discovery document',\r\n        errors\r\n      );\r\n      return false;\r\n    }\r\n\r\n    errors = this.validateUrlFromDiscoveryDocument(doc.end_session_endpoint);\r\n    if (errors.length > 0) {\r\n      this.logger.error(\r\n        'error validating end_session_endpoint in discovery document',\r\n        errors\r\n      );\r\n      return false;\r\n    }\r\n\r\n    errors = this.validateUrlFromDiscoveryDocument(doc.token_endpoint);\r\n    if (errors.length > 0) {\r\n      this.logger.error(\r\n        'error validating token_endpoint in discovery document',\r\n        errors\r\n      );\r\n    }\r\n\r\n    errors = this.validateUrlFromDiscoveryDocument(doc.revocation_endpoint);\r\n    if (errors.length > 0) {\r\n      this.logger.error(\r\n        'error validating revocation_endpoint in discovery document',\r\n        errors\r\n      );\r\n    }\r\n\r\n    errors = this.validateUrlFromDiscoveryDocument(doc.userinfo_endpoint);\r\n    if (errors.length > 0) {\r\n      this.logger.error(\r\n        'error validating userinfo_endpoint in discovery document',\r\n        errors\r\n      );\r\n      return false;\r\n    }\r\n\r\n    errors = this.validateUrlFromDiscoveryDocument(doc.jwks_uri);\r\n    if (errors.length > 0) {\r\n      this.logger.error(\r\n        'error validating jwks_uri in discovery document',\r\n        errors\r\n      );\r\n      return false;\r\n    }\r\n\r\n    if (this.sessionChecksEnabled && !doc.check_session_iframe) {\r\n      this.logger.warn(\r\n        'sessionChecksEnabled is activated but discovery document' +\r\n          ' does not contain a check_session_iframe field'\r\n      );\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Uses password flow to exchange userName and password for an\r\n   * access_token. After receiving the access_token, this method\r\n   * uses it to query the userinfo endpoint in order to get information\r\n   * about the user in question.\r\n   *\r\n   * When using this, make sure that the property oidc is set to false.\r\n   * Otherwise stricter validations take place that make this operation\r\n   * fail.\r\n   *\r\n   * @param userName\r\n   * @param password\r\n   * @param headers Optional additional http-headers.\r\n   */\r\n  public fetchTokenUsingPasswordFlowAndLoadUserProfile(\r\n    userName: string,\r\n    password: string,\r\n    headers: HttpHeaders = new HttpHeaders()\r\n  ): Promise<UserInfo> {\r\n    return this.fetchTokenUsingPasswordFlow(\r\n      userName,\r\n      password,\r\n      headers\r\n    ).then(() => this.loadUserProfile());\r\n  }\r\n\r\n  /**\r\n   * Loads the user profile by accessing the user info endpoint defined by OpenId Connect.\r\n   *\r\n   * When using this with OAuth2 password flow, make sure that the property oidc is set to false.\r\n   * Otherwise stricter validations take place that make this operation fail.\r\n   */\r\n  public loadUserProfile(): Promise<UserInfo> {\r\n    if (!this.hasValidAccessToken()) {\r\n      throw new Error('Can not load User Profile without access_token');\r\n    }\r\n    if (!this.validateUrlForHttps(this.userinfoEndpoint)) {\r\n      throw new Error(\r\n        \"userinfoEndpoint must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\"\r\n      );\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const headers = new HttpHeaders().set(\r\n        'Authorization',\r\n        'Bearer ' + this.getAccessToken()\r\n      );\r\n\r\n      this.http\r\n        .get<UserInfo>(this.userinfoEndpoint, { headers })\r\n        .subscribe(\r\n          info => {\r\n            this.debug('userinfo received', info);\r\n\r\n            const existingClaims = this.getIdentityClaims() || {};\r\n\r\n            if (!this.skipSubjectCheck) {\r\n              if (\r\n                this.oidc &&\r\n                (!existingClaims['sub'] || info.sub !== existingClaims['sub'])\r\n              ) {\r\n                const err =\r\n                  'if property oidc is true, the received user-id (sub) has to be the user-id ' +\r\n                  'of the user that has logged in with oidc.\\n' +\r\n                  'if you are not using oidc but just oauth2 password flow set oidc to false';\r\n\r\n                reject(err);\r\n                return;\r\n              }\r\n            }\r\n\r\n            info = Object.assign({}, existingClaims, info);\r\n\r\n            this._storage.setItem('id_token_claims_obj', JSON.stringify(info));\r\n            this.eventsSubject.next(\r\n              new OAuthSuccessEvent('user_profile_loaded')\r\n            );\r\n            resolve(info);\r\n          },\r\n          err => {\r\n            this.logger.error('error loading user info', err);\r\n            this.eventsSubject.next(\r\n              new OAuthErrorEvent('user_profile_load_error', err)\r\n            );\r\n            reject(err);\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Uses password flow to exchange userName and password for an access_token.\r\n   * @param userName\r\n   * @param password\r\n   * @param headers Optional additional http-headers.\r\n   */\r\n  public fetchTokenUsingPasswordFlow(\r\n    userName: string,\r\n    password: string,\r\n    headers: HttpHeaders = new HttpHeaders()\r\n  ): Promise<TokenResponse> {\r\n    this.assertUrlNotNullAndCorrectProtocol(\r\n      this.tokenEndpoint,\r\n      'tokenEndpoint'\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      /**\r\n       * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\r\n       * serialize and parse URL parameter keys and values.\r\n       *\r\n       * @stable\r\n       */\r\n      let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() })\r\n        .set('grant_type', 'password')\r\n        .set('scope', this.scope)\r\n        .set('username', userName)\r\n        .set('password', password);\r\n\r\n      if (this.useHttpBasicAuth) {\r\n        const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n        headers = headers.set('Authorization', 'Basic ' + header);\r\n      }\r\n\r\n      if (!this.useHttpBasicAuth) {\r\n        params = params.set('client_id', this.clientId);\r\n      }\r\n\r\n      if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n        params = params.set('client_secret', this.dummyClientSecret);\r\n      }\r\n\r\n      if (this.customQueryParams) {\r\n        for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n          params = params.set(key, this.customQueryParams[key]);\r\n        }\r\n      }\r\n\r\n      headers = headers.set(\r\n        'Content-Type',\r\n        'application/x-www-form-urlencoded'\r\n      );\r\n\r\n      this.http\r\n        .post<TokenResponse>(this.tokenEndpoint, params, { headers })\r\n        .subscribe(\r\n          tokenResponse => {\r\n            this.debug('tokenResponse', tokenResponse);\r\n            this.storeAccessTokenResponse(\r\n              tokenResponse.access_token,\r\n              tokenResponse.refresh_token,\r\n              tokenResponse.expires_in ||\r\n                this.fallbackAccessTokenExpirationTimeInSec,\r\n              tokenResponse.scope,\r\n              this.extractRecognizedCustomParameters(tokenResponse)\r\n            );\r\n\r\n            this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n            resolve(tokenResponse);\r\n          },\r\n          err => {\r\n            this.logger.error('Error performing password flow', err);\r\n            this.eventsSubject.next(new OAuthErrorEvent('token_error', err));\r\n            reject(err);\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Refreshes the token using a refresh_token.\r\n   * This does not work for implicit flow, b/c\r\n   * there is no refresh_token in this flow.\r\n   * A solution for this is provided by the\r\n   * method silentRefresh.\r\n   */\r\n  public refreshToken(): Promise<TokenResponse> {\r\n    this.assertUrlNotNullAndCorrectProtocol(\r\n      this.tokenEndpoint,\r\n      'tokenEndpoint'\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      let params = new HttpParams()\r\n        .set('grant_type', 'refresh_token')\r\n        .set('scope', this.scope)\r\n        .set('refresh_token', this._storage.getItem('refresh_token'));\r\n\r\n      let headers = new HttpHeaders().set(\r\n        'Content-Type',\r\n        'application/x-www-form-urlencoded'\r\n      );\r\n\r\n      if (this.useHttpBasicAuth) {\r\n        const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n        headers = headers.set('Authorization', 'Basic ' + header);\r\n      }\r\n\r\n      if (!this.useHttpBasicAuth) {\r\n        params = params.set('client_id', this.clientId);\r\n      }\r\n\r\n      if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n        params = params.set('client_secret', this.dummyClientSecret);\r\n      }\r\n\r\n      if (this.customQueryParams) {\r\n        for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n          params = params.set(key, this.customQueryParams[key]);\r\n        }\r\n      }\r\n\r\n      this.http\r\n        .post<TokenResponse>(this.tokenEndpoint, params, { headers })\r\n        .pipe(\r\n          switchMap(tokenResponse => {\r\n            if (tokenResponse.id_token) {\r\n              return from(\r\n                this.processIdToken(\r\n                  tokenResponse.id_token,\r\n                  tokenResponse.access_token,\r\n                  true\r\n                )\r\n              ).pipe(\r\n                tap(result => this.storeIdToken(result)),\r\n                map(_ => tokenResponse)\r\n              );\r\n            } else {\r\n              return of(tokenResponse);\r\n            }\r\n          })\r\n        )\r\n        .subscribe(\r\n          tokenResponse => {\r\n            this.debug('refresh tokenResponse', tokenResponse);\r\n            this.storeAccessTokenResponse(\r\n              tokenResponse.access_token,\r\n              tokenResponse.refresh_token,\r\n              tokenResponse.expires_in ||\r\n                this.fallbackAccessTokenExpirationTimeInSec,\r\n              tokenResponse.scope,\r\n              this.extractRecognizedCustomParameters(tokenResponse)\r\n            );\r\n\r\n            this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n            this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\r\n            resolve(tokenResponse);\r\n          },\r\n          err => {\r\n            this.logger.error('Error refreshing token', err);\r\n            this.eventsSubject.next(\r\n              new OAuthErrorEvent('token_refresh_error', err)\r\n            );\r\n            reject(err);\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  protected removeSilentRefreshEventListener(): void {\r\n    if (this.silentRefreshPostMessageEventListener) {\r\n      window.removeEventListener(\r\n        'message',\r\n        this.silentRefreshPostMessageEventListener\r\n      );\r\n      this.silentRefreshPostMessageEventListener = null;\r\n    }\r\n  }\r\n\r\n  protected setupSilentRefreshEventListener(): void {\r\n    this.removeSilentRefreshEventListener();\r\n\r\n    this.silentRefreshPostMessageEventListener = (e: MessageEvent) => {\r\n      const message = this.processMessageEventMessage(e);\r\n\r\n      this.tryLogin({\r\n        customHashFragment: message,\r\n        preventClearHashAfterLogin: true,\r\n        customRedirectUri: this.silentRefreshRedirectUri || this.redirectUri\r\n      }).catch(err => this.debug('tryLogin during silent refresh failed', err));\r\n    };\r\n\r\n    window.addEventListener(\r\n      'message',\r\n      this.silentRefreshPostMessageEventListener\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Performs a silent refresh for implicit flow.\r\n   * Use this method to get new tokens when/before\r\n   * the existing tokens expire.\r\n   */\r\n  public silentRefresh(\r\n    params: object = {},\r\n    noPrompt = true\r\n  ): Promise<OAuthEvent> {\r\n    const claims: object = this.getIdentityClaims() || {};\r\n\r\n    if (this.useIdTokenHintForSilentRefresh && this.hasValidIdToken()) {\r\n      params['id_token_hint'] = this.getIdToken();\r\n    }\r\n\r\n    if (!this.validateUrlForHttps(this.loginUrl)) {\r\n      throw new Error(\r\n        \"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\"\r\n      );\r\n    }\r\n\r\n    if (typeof document === 'undefined') {\r\n      throw new Error('silent refresh is not supported on this platform');\r\n    }\r\n\r\n    const existingIframe = document.getElementById(\r\n      this.silentRefreshIFrameName\r\n    );\r\n\r\n    if (existingIframe) {\r\n      document.body.removeChild(existingIframe);\r\n    }\r\n\r\n    this.silentRefreshSubject = claims['sub'];\r\n\r\n    const iframe = document.createElement('iframe');\r\n    iframe.id = this.silentRefreshIFrameName;\r\n\r\n    this.setupSilentRefreshEventListener();\r\n\r\n    const redirectUri = this.silentRefreshRedirectUri || this.redirectUri;\r\n    this.createLoginUrl(null, null, redirectUri, noPrompt, params).then(url => {\r\n      iframe.setAttribute('src', url);\r\n\r\n      if (!this.silentRefreshShowIFrame) {\r\n        iframe.style['display'] = 'none';\r\n      }\r\n      document.body.appendChild(iframe);\r\n    });\r\n\r\n    const errors = this.events.pipe(\r\n      filter(e => e instanceof OAuthErrorEvent),\r\n      first()\r\n    );\r\n    const success = this.events.pipe(\r\n      filter(e => e.type === 'token_received'),\r\n      first()\r\n    );\r\n    const timeout = of(\r\n      new OAuthErrorEvent('silent_refresh_timeout', null)\r\n    ).pipe(delay(this.silentRefreshTimeout));\r\n\r\n    return race([errors, success, timeout])\r\n      .pipe(\r\n        map(e => {\r\n          if (e instanceof OAuthErrorEvent) {\r\n            if (e.type === 'silent_refresh_timeout') {\r\n              this.eventsSubject.next(e);\r\n            } else {\r\n              e = new OAuthErrorEvent('silent_refresh_error', e);\r\n              this.eventsSubject.next(e);\r\n            }\r\n            throw e;\r\n          } else if (e.type === 'token_received') {\r\n            e = new OAuthSuccessEvent('silently_refreshed');\r\n            this.eventsSubject.next(e);\r\n          }\r\n          return e;\r\n        })\r\n      )\r\n      .toPromise();\r\n  }\r\n\r\n  /**\r\n   * This method exists for backwards compatibility.\r\n   * {@link OAuthService#initLoginFlowInPopup} handles both code\r\n   * and implicit flows.\r\n   */\r\n  public initImplicitFlowInPopup(options?: {\r\n    height?: number;\r\n    width?: number;\r\n  }) {\r\n    return this.initLoginFlowInPopup(options);\r\n  }\r\n\r\n  public initLoginFlowInPopup(options?: { height?: number; width?: number }) {\r\n    options = options || {};\r\n    return this.createLoginUrl(\r\n      null,\r\n      null,\r\n      this.silentRefreshRedirectUri,\r\n      false,\r\n      {\r\n        display: 'popup'\r\n      }\r\n    ).then(url => {\r\n      return new Promise((resolve, reject) => {\r\n        /**\r\n         * Error handling section\r\n         */\r\n        const checkForPopupClosedInterval = 500;\r\n        let windowRef = window.open(\r\n          url,\r\n          '_blank',\r\n          this.calculatePopupFeatures(options)\r\n        );\r\n        let checkForPopupClosedTimer: any;\r\n        const checkForPopupClosed = () => {\r\n          if (!windowRef || windowRef.closed) {\r\n            cleanup();\r\n            reject(new OAuthErrorEvent('popup_closed', {}));\r\n          }\r\n        };\r\n        if (!windowRef) {\r\n          reject(new OAuthErrorEvent('popup_blocked', {}));\r\n        } else {\r\n          checkForPopupClosedTimer = window.setInterval(\r\n            checkForPopupClosed,\r\n            checkForPopupClosedInterval\r\n          );\r\n        }\r\n\r\n        const cleanup = () => {\r\n          window.clearInterval(checkForPopupClosedTimer);\r\n          window.removeEventListener('message', listener);\r\n          if (windowRef !== null) {\r\n            windowRef.close();\r\n          }\r\n          windowRef = null;\r\n        };\r\n\r\n        const listener = (e: MessageEvent) => {\r\n          const message = this.processMessageEventMessage(e);\r\n\r\n          if (message && message !== null) {\r\n            this.tryLogin({\r\n              customHashFragment: message,\r\n              preventClearHashAfterLogin: true,\r\n              customRedirectUri: this.silentRefreshRedirectUri\r\n            }).then(\r\n              () => {\r\n                cleanup();\r\n                resolve();\r\n              },\r\n              err => {\r\n                cleanup();\r\n                reject(err);\r\n              }\r\n            );\r\n          } else {\r\n            console.log('false event firing');\r\n          }\r\n        };\r\n\r\n        window.addEventListener('message', listener);\r\n      });\r\n    });\r\n  }\r\n\r\n  protected calculatePopupFeatures(options: {\r\n    height?: number;\r\n    width?: number;\r\n  }): string {\r\n    // Specify an static height and width and calculate centered position\r\n\r\n    const height = options.height || 470;\r\n    const width = options.width || 500;\r\n    const left = window.screenLeft + (window.outerWidth - width) / 2;\r\n    const top = window.screenTop + (window.outerHeight - height) / 2;\r\n    return `location=no,toolbar=no,width=${width},height=${height},top=${top},left=${left}`;\r\n  }\r\n\r\n  protected processMessageEventMessage(e: MessageEvent): string {\r\n    let expectedPrefix = '#';\r\n\r\n    if (this.silentRefreshMessagePrefix) {\r\n      expectedPrefix += this.silentRefreshMessagePrefix;\r\n    }\r\n\r\n    if (!e || !e.data || typeof e.data !== 'string') {\r\n      return;\r\n    }\r\n\r\n    const prefixedMessage: string = e.data;\r\n\r\n    if (!prefixedMessage.startsWith(expectedPrefix)) {\r\n      return;\r\n    }\r\n\r\n    return '#' + prefixedMessage.substr(expectedPrefix.length);\r\n  }\r\n\r\n  protected canPerformSessionCheck(): boolean {\r\n    if (!this.sessionChecksEnabled) {\r\n      return false;\r\n    }\r\n    if (!this.sessionCheckIFrameUrl) {\r\n      console.warn(\r\n        'sessionChecksEnabled is activated but there is no sessionCheckIFrameUrl'\r\n      );\r\n      return false;\r\n    }\r\n    const sessionState = this.getSessionState();\r\n    if (!sessionState) {\r\n      console.warn(\r\n        'sessionChecksEnabled is activated but there is no session_state'\r\n      );\r\n      return false;\r\n    }\r\n    if (typeof document === 'undefined') {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  protected setupSessionCheckEventListener(): void {\r\n    this.removeSessionCheckEventListener();\r\n\r\n    this.sessionCheckEventListener = (e: MessageEvent) => {\r\n      const origin = e.origin.toLowerCase();\r\n      const issuer = this.issuer.toLowerCase();\r\n\r\n      this.debug('sessionCheckEventListener');\r\n\r\n      if (!issuer.startsWith(origin)) {\r\n        this.debug(\r\n          'sessionCheckEventListener',\r\n          'wrong origin',\r\n          origin,\r\n          'expected',\r\n          issuer,\r\n          'event',\r\n          e\r\n        );\r\n\r\n        return;\r\n      }\r\n\r\n      // only run in Angular zone if it is 'changed' or 'error'\r\n      switch (e.data) {\r\n        case 'unchanged':\r\n          this.handleSessionUnchanged();\r\n          break;\r\n        case 'changed':\r\n          this.ngZone.run(() => {\r\n            this.handleSessionChange();\r\n          });\r\n          break;\r\n        case 'error':\r\n          this.ngZone.run(() => {\r\n            this.handleSessionError();\r\n          });\r\n          break;\r\n      }\r\n\r\n      this.debug('got info from session check inframe', e);\r\n    };\r\n\r\n    // prevent Angular from refreshing the view on every message (runs in intervals)\r\n    this.ngZone.runOutsideAngular(() => {\r\n      window.addEventListener('message', this.sessionCheckEventListener);\r\n    });\r\n  }\r\n\r\n  protected handleSessionUnchanged(): void {\r\n    this.debug('session check', 'session unchanged');\r\n  }\r\n\r\n  protected handleSessionChange(): void {\r\n    this.eventsSubject.next(new OAuthInfoEvent('session_changed'));\r\n    this.stopSessionCheckTimer();\r\n\r\n    if (!this.useSilentRefresh && this.responseType === 'code') {\r\n      this.refreshToken()\r\n        .then(_ => {\r\n          this.debug('token refresh after session change worked');\r\n        })\r\n        .catch(_ => {\r\n          this.debug('token refresh did not work after session changed');\r\n          this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\r\n          this.logOut(true);\r\n        });\r\n    } else if (this.silentRefreshRedirectUri) {\r\n      this.silentRefresh().catch(_ =>\r\n        this.debug('silent refresh failed after session changed')\r\n      );\r\n      this.waitForSilentRefreshAfterSessionChange();\r\n    } else {\r\n      this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\r\n      this.logOut(true);\r\n    }\r\n  }\r\n\r\n  protected waitForSilentRefreshAfterSessionChange(): void {\r\n    this.events\r\n      .pipe(\r\n        filter(\r\n          (e: OAuthEvent) =>\r\n            e.type === 'silently_refreshed' ||\r\n            e.type === 'silent_refresh_timeout' ||\r\n            e.type === 'silent_refresh_error'\r\n        ),\r\n        first()\r\n      )\r\n      .subscribe(e => {\r\n        if (e.type !== 'silently_refreshed') {\r\n          this.debug('silent refresh did not work after session changed');\r\n          this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\r\n          this.logOut(true);\r\n        }\r\n      });\r\n  }\r\n\r\n  protected handleSessionError(): void {\r\n    this.stopSessionCheckTimer();\r\n    this.eventsSubject.next(new OAuthInfoEvent('session_error'));\r\n  }\r\n\r\n  protected removeSessionCheckEventListener(): void {\r\n    if (this.sessionCheckEventListener) {\r\n      window.removeEventListener('message', this.sessionCheckEventListener);\r\n      this.sessionCheckEventListener = null;\r\n    }\r\n  }\r\n\r\n  protected initSessionCheck(): void {\r\n    if (!this.canPerformSessionCheck()) {\r\n      return;\r\n    }\r\n\r\n    const existingIframe = document.getElementById(this.sessionCheckIFrameName);\r\n    if (existingIframe) {\r\n      document.body.removeChild(existingIframe);\r\n    }\r\n\r\n    const iframe = document.createElement('iframe');\r\n    iframe.id = this.sessionCheckIFrameName;\r\n\r\n    this.setupSessionCheckEventListener();\r\n\r\n    const url = this.sessionCheckIFrameUrl;\r\n    iframe.setAttribute('src', url);\r\n    iframe.style.display = 'none';\r\n    document.body.appendChild(iframe);\r\n\r\n    this.startSessionCheckTimer();\r\n  }\r\n\r\n  protected startSessionCheckTimer(): void {\r\n    this.stopSessionCheckTimer();\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.sessionCheckTimer = setInterval(\r\n        this.checkSession.bind(this),\r\n        this.sessionCheckIntervall\r\n      );\r\n    });\r\n  }\r\n\r\n  protected stopSessionCheckTimer(): void {\r\n    if (this.sessionCheckTimer) {\r\n      clearInterval(this.sessionCheckTimer);\r\n      this.sessionCheckTimer = null;\r\n    }\r\n  }\r\n\r\n  public checkSession(): void {\r\n    const iframe: any = document.getElementById(this.sessionCheckIFrameName);\r\n\r\n    if (!iframe) {\r\n      this.logger.warn(\r\n        'checkSession did not find iframe',\r\n        this.sessionCheckIFrameName\r\n      );\r\n    }\r\n\r\n    const sessionState = this.getSessionState();\r\n\r\n    if (!sessionState) {\r\n      this.stopSessionCheckTimer();\r\n    }\r\n\r\n    const message = this.clientId + ' ' + sessionState;\r\n    iframe.contentWindow.postMessage(message, this.issuer);\r\n  }\r\n\r\n  protected async createLoginUrl(\r\n    state = '',\r\n    loginHint = '',\r\n    customRedirectUri = '',\r\n    noPrompt = false,\r\n    params: object = {}\r\n  ): Promise<string> {\r\n    const that = this;\r\n\r\n    let redirectUri: string;\r\n\r\n    if (customRedirectUri) {\r\n      redirectUri = customRedirectUri;\r\n    } else {\r\n      redirectUri = this.redirectUri;\r\n    }\r\n\r\n    const nonce = await this.createAndSaveNonce();\r\n\r\n    if (state) {\r\n      state =\r\n        nonce + this.config.nonceStateSeparator + encodeURIComponent(state);\r\n    } else {\r\n      state = nonce;\r\n    }\r\n\r\n    if (!this.requestAccessToken && !this.oidc) {\r\n      throw new Error('Either requestAccessToken or oidc or both must be true');\r\n    }\r\n\r\n    if (this.config.responseType) {\r\n      this.responseType = this.config.responseType;\r\n    } else {\r\n      if (this.oidc && this.requestAccessToken) {\r\n        this.responseType = 'id_token token';\r\n      } else if (this.oidc && !this.requestAccessToken) {\r\n        this.responseType = 'id_token';\r\n      } else {\r\n        this.responseType = 'token';\r\n      }\r\n    }\r\n\r\n    const seperationChar = that.loginUrl.indexOf('?') > -1 ? '&' : '?';\r\n\r\n    let scope = that.scope;\r\n\r\n    if (this.oidc && !scope.match(/(^|\\s)openid($|\\s)/)) {\r\n      scope = 'openid ' + scope;\r\n    }\r\n\r\n    let url =\r\n      that.loginUrl +\r\n      seperationChar +\r\n      'response_type=' +\r\n      encodeURIComponent(that.responseType) +\r\n      '&client_id=' +\r\n      encodeURIComponent(that.clientId) +\r\n      '&state=' +\r\n      encodeURIComponent(state) +\r\n      '&redirect_uri=' +\r\n      encodeURIComponent(redirectUri) +\r\n      '&scope=' +\r\n      encodeURIComponent(scope);\r\n\r\n    if (this.responseType === 'code' && !this.disablePKCE) {\r\n      const [\r\n        challenge,\r\n        verifier\r\n      ] = await this.createChallangeVerifierPairForPKCE();\r\n\r\n      if (\r\n        this.saveNoncesInLocalStorage &&\r\n        typeof window['localStorage'] !== 'undefined'\r\n      ) {\r\n        localStorage.setItem('PKCI_verifier', verifier);\r\n      } else {\r\n        this._storage.setItem('PKCI_verifier', verifier);\r\n      }\r\n\r\n      url += '&code_challenge=' + challenge;\r\n      url += '&code_challenge_method=S256';\r\n    }\r\n\r\n    if (loginHint) {\r\n      url += '&login_hint=' + encodeURIComponent(loginHint);\r\n    }\r\n\r\n    if (that.resource) {\r\n      url += '&resource=' + encodeURIComponent(that.resource);\r\n    }\r\n\r\n    if (that.oidc) {\r\n      url += '&nonce=' + encodeURIComponent(nonce);\r\n    }\r\n\r\n    if (noPrompt) {\r\n      url += '&prompt=none';\r\n    }\r\n\r\n    for (const key of Object.keys(params)) {\r\n      url +=\r\n        '&' + encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n    }\r\n\r\n    if (this.customQueryParams) {\r\n      for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n        url +=\r\n          '&' + key + '=' + encodeURIComponent(this.customQueryParams[key]);\r\n      }\r\n    }\r\n\r\n    return url;\r\n  }\r\n\r\n  initImplicitFlowInternal(\r\n    additionalState = '',\r\n    params: string | object = ''\r\n  ): void {\r\n    if (this.inImplicitFlow) {\r\n      return;\r\n    }\r\n\r\n    this.inImplicitFlow = true;\r\n\r\n    if (!this.validateUrlForHttps(this.loginUrl)) {\r\n      throw new Error(\r\n        \"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\"\r\n      );\r\n    }\r\n\r\n    let addParams: object = {};\r\n    let loginHint: string = null;\r\n\r\n    if (typeof params === 'string') {\r\n      loginHint = params;\r\n    } else if (typeof params === 'object') {\r\n      addParams = params;\r\n    }\r\n\r\n    this.createLoginUrl(additionalState, loginHint, null, false, addParams)\r\n      .then(this.config.openUri)\r\n      .catch(error => {\r\n        console.error('Error in initImplicitFlow', error);\r\n        this.inImplicitFlow = false;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Starts the implicit flow and redirects to user to\r\n   * the auth servers' login url.\r\n   *\r\n   * @param additionalState Optional state that is passed around.\r\n   *  You'll find this state in the property `state` after `tryLogin` logged in the user.\r\n   * @param params Hash with additional parameter. If it is a string, it is used for the\r\n   *               parameter loginHint (for the sake of compatibility with former versions)\r\n   */\r\n  public initImplicitFlow(\r\n    additionalState = '',\r\n    params: string | object = ''\r\n  ): void {\r\n    if (this.loginUrl !== '') {\r\n      this.initImplicitFlowInternal(additionalState, params);\r\n    } else {\r\n      this.events\r\n        .pipe(filter(e => e.type === 'discovery_document_loaded'))\r\n        .subscribe(_ => this.initImplicitFlowInternal(additionalState, params));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset current implicit flow\r\n   *\r\n   * @description This method allows resetting the current implict flow in order to be initialized again.\r\n   */\r\n  public resetImplicitFlow(): void {\r\n    this.inImplicitFlow = false;\r\n  }\r\n\r\n  protected callOnTokenReceivedIfExists(options: LoginOptions): void {\r\n    const that = this;\r\n    if (options.onTokenReceived) {\r\n      const tokenParams = {\r\n        idClaims: that.getIdentityClaims(),\r\n        idToken: that.getIdToken(),\r\n        accessToken: that.getAccessToken(),\r\n        state: that.state\r\n      };\r\n      options.onTokenReceived(tokenParams);\r\n    }\r\n  }\r\n\r\n  protected storeAccessTokenResponse(\r\n    accessToken: string,\r\n    refreshToken: string,\r\n    expiresIn: number,\r\n    grantedScopes: String,\r\n    customParameters?: Map<string, string>\r\n  ): void {\r\n    this._storage.setItem('access_token', accessToken);\r\n    if (grantedScopes && !Array.isArray(grantedScopes)) {\r\n      this._storage.setItem(\r\n        'granted_scopes',\r\n        JSON.stringify(grantedScopes.split('+'))\r\n      );\r\n    } else if (grantedScopes && Array.isArray(grantedScopes)) {\r\n      this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes));\r\n    }\r\n\r\n    this._storage.setItem('access_token_stored_at', '' + Date.now());\r\n    if (expiresIn) {\r\n      const expiresInMilliSeconds = expiresIn * 1000;\r\n      const now = new Date();\r\n      const expiresAt = now.getTime() + expiresInMilliSeconds;\r\n      this._storage.setItem('expires_at', '' + expiresAt);\r\n    }\r\n\r\n    if (refreshToken) {\r\n      this._storage.setItem('refresh_token', refreshToken);\r\n    }\r\n    if (customParameters) {\r\n      customParameters.forEach((value: string, key: string) => {\r\n        this._storage.setItem(key, value);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delegates to tryLoginImplicitFlow for the sake of competability\r\n   * @param options Optional options.\r\n   */\r\n  public tryLogin(options: LoginOptions = null): Promise<boolean> {\r\n    if (this.config.responseType === 'code') {\r\n      return this.tryLoginCodeFlow(options).then(_ => true);\r\n    } else {\r\n      return this.tryLoginImplicitFlow(options);\r\n    }\r\n  }\r\n\r\n  private parseQueryString(queryString: string): object {\r\n    if (!queryString || queryString.length === 0) {\r\n      return {};\r\n    }\r\n\r\n    if (queryString.charAt(0) === '?') {\r\n      queryString = queryString.substr(1);\r\n    }\r\n\r\n    return this.urlHelper.parseQueryString(queryString);\r\n  }\r\n\r\n  public tryLoginCodeFlow(options: LoginOptions = null): Promise<void> {\r\n    options = options || {};\r\n\r\n    const querySource = options.customHashFragment\r\n      ? options.customHashFragment.substring(1)\r\n      : window.location.search;\r\n\r\n    const parts = this.getCodePartsFromUrl(querySource);\r\n\r\n    const code = parts['code'];\r\n    const state = parts['state'];\r\n\r\n    const sessionState = parts['session_state'];\r\n\r\n    if (!options.preventClearHashAfterLogin) {\r\n      const href = location.href\r\n        .replace(/[&\\?]code=[^&\\$]*/, '')\r\n        .replace(/[&\\?]scope=[^&\\$]*/, '')\r\n        .replace(/[&\\?]state=[^&\\$]*/, '')\r\n        .replace(/[&\\?]session_state=[^&\\$]*/, '');\r\n\r\n      history.replaceState(null, window.name, href);\r\n    }\r\n\r\n    let [nonceInState, userState] = this.parseState(state);\r\n    this.state = userState;\r\n\r\n    if (parts['error']) {\r\n      this.debug('error trying to login');\r\n      this.handleLoginError({}, parts);\r\n      const err = new OAuthErrorEvent('code_error', {}, parts);\r\n      this.eventsSubject.next(err);\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    if (!nonceInState) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    const success = this.validateNonce(nonceInState);\r\n    if (!success) {\r\n      const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\r\n      this.eventsSubject.next(event);\r\n      return Promise.reject(event);\r\n    }\r\n\r\n    this.storeSessionState(sessionState);\r\n\r\n    if (code) {\r\n      return this.getTokenFromCode(code, options).then(_ => null);\r\n    } else {\r\n      return Promise.resolve();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retrieve the returned auth code from the redirect uri that has been called.\r\n   * If required also check hash, as we could use hash location strategy.\r\n   */\r\n  private getCodePartsFromUrl(queryString: string): object {\r\n    if (!queryString || queryString.length === 0) {\r\n      return this.urlHelper.getHashFragmentParams();\r\n    }\r\n\r\n    // normalize query string\r\n    if (queryString.charAt(0) === '?') {\r\n      queryString = queryString.substr(1);\r\n    }\r\n\r\n    return this.urlHelper.parseQueryString(queryString);\r\n  }\r\n\r\n  /**\r\n   * Get token using an intermediate code. Works for the Authorization Code flow.\r\n   */\r\n  private getTokenFromCode(\r\n    code: string,\r\n    options: LoginOptions\r\n  ): Promise<object> {\r\n    let params = new HttpParams()\r\n      .set('grant_type', 'authorization_code')\r\n      .set('code', code)\r\n      .set('redirect_uri', options.customRedirectUri || this.redirectUri);\r\n\r\n    if (!this.disablePKCE) {\r\n      let pkciVerifier;\r\n\r\n      if (\r\n        this.saveNoncesInLocalStorage &&\r\n        typeof window['localStorage'] !== 'undefined'\r\n      ) {\r\n        pkciVerifier = localStorage.getItem('PKCI_verifier');\r\n      } else {\r\n        pkciVerifier = this._storage.getItem('PKCI_verifier');\r\n      }\r\n\r\n      if (!pkciVerifier) {\r\n        console.warn('No PKCI verifier found in oauth storage!');\r\n      } else {\r\n        params = params.set('code_verifier', pkciVerifier);\r\n      }\r\n    }\r\n\r\n    return this.fetchAndProcessToken(params);\r\n  }\r\n\r\n  private fetchAndProcessToken(params: HttpParams): Promise<TokenResponse> {\r\n    this.assertUrlNotNullAndCorrectProtocol(\r\n      this.tokenEndpoint,\r\n      'tokenEndpoint'\r\n    );\r\n    let headers = new HttpHeaders().set(\r\n      'Content-Type',\r\n      'application/x-www-form-urlencoded'\r\n    );\r\n\r\n    if (this.useHttpBasicAuth) {\r\n      const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n      headers = headers.set('Authorization', 'Basic ' + header);\r\n    }\r\n\r\n    if (!this.useHttpBasicAuth) {\r\n      params = params.set('client_id', this.clientId);\r\n    }\r\n\r\n    if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n      params = params.set('client_secret', this.dummyClientSecret);\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      if (this.customQueryParams) {\r\n        for (let key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n          params = params.set(key, this.customQueryParams[key]);\r\n        }\r\n      }\r\n\r\n      this.http\r\n        .post<TokenResponse>(this.tokenEndpoint, params, { headers })\r\n        .subscribe(\r\n          tokenResponse => {\r\n            this.debug('refresh tokenResponse', tokenResponse);\r\n            this.storeAccessTokenResponse(\r\n              tokenResponse.access_token,\r\n              tokenResponse.refresh_token,\r\n              tokenResponse.expires_in ||\r\n                this.fallbackAccessTokenExpirationTimeInSec,\r\n              tokenResponse.scope,\r\n              this.extractRecognizedCustomParameters(tokenResponse)\r\n            );\r\n\r\n            if (this.oidc && tokenResponse.id_token) {\r\n              this.processIdToken(\r\n                tokenResponse.id_token,\r\n                tokenResponse.access_token\r\n              )\r\n                .then(result => {\r\n                  this.storeIdToken(result);\r\n\r\n                  this.eventsSubject.next(\r\n                    new OAuthSuccessEvent('token_received')\r\n                  );\r\n                  this.eventsSubject.next(\r\n                    new OAuthSuccessEvent('token_refreshed')\r\n                  );\r\n\r\n                  resolve(tokenResponse);\r\n                })\r\n                .catch(reason => {\r\n                  this.eventsSubject.next(\r\n                    new OAuthErrorEvent('token_validation_error', reason)\r\n                  );\r\n                  console.error('Error validating tokens');\r\n                  console.error(reason);\r\n\r\n                  reject(reason);\r\n                });\r\n            } else {\r\n              this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n              this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\r\n\r\n              resolve(tokenResponse);\r\n            }\r\n          },\r\n          err => {\r\n            console.error('Error getting token', err);\r\n            this.eventsSubject.next(\r\n              new OAuthErrorEvent('token_refresh_error', err)\r\n            );\r\n            reject(err);\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Checks whether there are tokens in the hash fragment\r\n   * as a result of the implicit flow. These tokens are\r\n   * parsed, validated and used to sign the user in to the\r\n   * current client.\r\n   *\r\n   * @param options Optional options.\r\n   */\r\n  public tryLoginImplicitFlow(options: LoginOptions = null): Promise<boolean> {\r\n    options = options || {};\r\n\r\n    let parts: object;\r\n\r\n    if (options.customHashFragment) {\r\n      parts = this.urlHelper.getHashFragmentParams(options.customHashFragment);\r\n    } else {\r\n      parts = this.urlHelper.getHashFragmentParams();\r\n    }\r\n\r\n    this.debug('parsed url', parts);\r\n\r\n    const state = parts['state'];\r\n\r\n    let [nonceInState, userState] = this.parseState(state);\r\n    this.state = userState;\r\n\r\n    if (parts['error']) {\r\n      this.debug('error trying to login');\r\n      this.handleLoginError(options, parts);\r\n      const err = new OAuthErrorEvent('token_error', {}, parts);\r\n      this.eventsSubject.next(err);\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    const accessToken = parts['access_token'];\r\n    const idToken = parts['id_token'];\r\n    const sessionState = parts['session_state'];\r\n    const grantedScopes = parts['scope'];\r\n\r\n    if (!this.requestAccessToken && !this.oidc) {\r\n      return Promise.reject(\r\n        'Either requestAccessToken or oidc (or both) must be true.'\r\n      );\r\n    }\r\n\r\n    if (this.requestAccessToken && !accessToken) {\r\n      return Promise.resolve(false);\r\n    }\r\n    if (this.requestAccessToken && !options.disableOAuth2StateCheck && !state) {\r\n      return Promise.resolve(false);\r\n    }\r\n    if (this.oidc && !idToken) {\r\n      return Promise.resolve(false);\r\n    }\r\n\r\n    if (this.sessionChecksEnabled && !sessionState) {\r\n      this.logger.warn(\r\n        'session checks (Session Status Change Notification) ' +\r\n          'were activated in the configuration but the id_token ' +\r\n          'does not contain a session_state claim'\r\n      );\r\n    }\r\n\r\n    if (this.requestAccessToken && !options.disableOAuth2StateCheck) {\r\n      const success = this.validateNonce(nonceInState);\r\n\r\n      if (!success) {\r\n        const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\r\n        this.eventsSubject.next(event);\r\n        return Promise.reject(event);\r\n      }\r\n    }\r\n\r\n    if (this.requestAccessToken) {\r\n      this.storeAccessTokenResponse(\r\n        accessToken,\r\n        null,\r\n        parts['expires_in'] || this.fallbackAccessTokenExpirationTimeInSec,\r\n        grantedScopes\r\n      );\r\n    }\r\n\r\n    if (!this.oidc) {\r\n      this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n      if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\r\n        location.hash = '';\r\n      }\r\n\r\n      this.callOnTokenReceivedIfExists(options);\r\n      return Promise.resolve(true);\r\n    }\r\n\r\n    return this.processIdToken(idToken, accessToken)\r\n      .then(result => {\r\n        if (options.validationHandler) {\r\n          return options\r\n            .validationHandler({\r\n              accessToken: accessToken,\r\n              idClaims: result.idTokenClaims,\r\n              idToken: result.idToken,\r\n              state: state\r\n            })\r\n            .then(_ => result);\r\n        }\r\n        return result;\r\n      })\r\n      .then(result => {\r\n        this.storeIdToken(result);\r\n        this.storeSessionState(sessionState);\r\n        if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\r\n          location.hash = '';\r\n        }\r\n        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n        this.callOnTokenReceivedIfExists(options);\r\n        this.inImplicitFlow = false;\r\n        return true;\r\n      })\r\n      .catch(reason => {\r\n        this.eventsSubject.next(\r\n          new OAuthErrorEvent('token_validation_error', reason)\r\n        );\r\n        this.logger.error('Error validating tokens');\r\n        this.logger.error(reason);\r\n        return Promise.reject(reason);\r\n      });\r\n  }\r\n\r\n  private parseState(state: string): [string, string] {\r\n    let nonce = state;\r\n    let userState = '';\r\n\r\n    if (state) {\r\n      const idx = state.indexOf(this.config.nonceStateSeparator);\r\n      if (idx > -1) {\r\n        nonce = state.substr(0, idx);\r\n        userState = state.substr(idx + this.config.nonceStateSeparator.length);\r\n      }\r\n    }\r\n    return [nonce, userState];\r\n  }\r\n\r\n  protected validateNonce(nonceInState: string): boolean {\r\n    let savedNonce;\r\n\r\n    if (\r\n      this.saveNoncesInLocalStorage &&\r\n      typeof window['localStorage'] !== 'undefined'\r\n    ) {\r\n      savedNonce = localStorage.getItem('nonce');\r\n    } else {\r\n      savedNonce = this._storage.getItem('nonce');\r\n    }\r\n\r\n    if (savedNonce !== nonceInState) {\r\n      const err = 'Validating access_token failed, wrong state/nonce.';\r\n      console.error(err, savedNonce, nonceInState);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  protected storeIdToken(idToken: ParsedIdToken): void {\r\n    this._storage.setItem('id_token', idToken.idToken);\r\n    this._storage.setItem('id_token_claims_obj', idToken.idTokenClaimsJson);\r\n    this._storage.setItem('id_token_expires_at', '' + idToken.idTokenExpiresAt);\r\n    this._storage.setItem('id_token_stored_at', '' + Date.now());\r\n  }\r\n\r\n  protected storeSessionState(sessionState: string): void {\r\n    this._storage.setItem('session_state', sessionState);\r\n  }\r\n\r\n  protected getSessionState(): string {\r\n    return this._storage.getItem('session_state');\r\n  }\r\n\r\n  protected handleLoginError(options: LoginOptions, parts: object): void {\r\n    if (options.onLoginError) {\r\n      options.onLoginError(parts);\r\n    }\r\n    if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\r\n      location.hash = '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  public processIdToken(\r\n    idToken: string,\r\n    accessToken: string,\r\n    skipNonceCheck = false\r\n  ): Promise<ParsedIdToken> {\r\n    const tokenParts = idToken.split('.');\r\n    const headerBase64 = this.padBase64(tokenParts[0]);\r\n    const headerJson = b64DecodeUnicode(headerBase64);\r\n    const header = JSON.parse(headerJson);\r\n    const claimsBase64 = this.padBase64(tokenParts[1]);\r\n    const claimsJson = b64DecodeUnicode(claimsBase64);\r\n    const claims = JSON.parse(claimsJson);\r\n\r\n    let savedNonce;\r\n    if (\r\n      this.saveNoncesInLocalStorage &&\r\n      typeof window['localStorage'] !== 'undefined'\r\n    ) {\r\n      savedNonce = localStorage.getItem('nonce');\r\n    } else {\r\n      savedNonce = this._storage.getItem('nonce');\r\n    }\r\n\r\n    if (Array.isArray(claims.aud)) {\r\n      if (claims.aud.every(v => v !== this.clientId)) {\r\n        const err = 'Wrong audience: ' + claims.aud.join(',');\r\n        this.logger.warn(err);\r\n        return Promise.reject(err);\r\n      }\r\n    } else {\r\n      if (claims.aud !== this.clientId) {\r\n        const err = 'Wrong audience: ' + claims.aud;\r\n        this.logger.warn(err);\r\n        return Promise.reject(err);\r\n      }\r\n    }\r\n\r\n    if (!claims.sub) {\r\n      const err = 'No sub claim in id_token';\r\n      this.logger.warn(err);\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    /* For now, we only check whether the sub against\r\n     * silentRefreshSubject when sessionChecksEnabled is on\r\n     * We will reconsider in a later version to do this\r\n     * in every other case too.\r\n     */\r\n    if (\r\n      this.sessionChecksEnabled &&\r\n      this.silentRefreshSubject &&\r\n      this.silentRefreshSubject !== claims['sub']\r\n    ) {\r\n      const err =\r\n        'After refreshing, we got an id_token for another user (sub). ' +\r\n        `Expected sub: ${this.silentRefreshSubject}, received sub: ${claims['sub']}`;\r\n\r\n      this.logger.warn(err);\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    if (!claims.iat) {\r\n      const err = 'No iat claim in id_token';\r\n      this.logger.warn(err);\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    if (!this.skipIssuerCheck && claims.iss !== this.issuer) {\r\n      const err = 'Wrong issuer: ' + claims.iss;\r\n      this.logger.warn(err);\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    if (!skipNonceCheck && claims.nonce !== savedNonce) {\r\n      const err = 'Wrong nonce: ' + claims.nonce;\r\n      this.logger.warn(err);\r\n      return Promise.reject(err);\r\n    }\r\n    // at_hash is not applicable to authorization code flow\r\n    // addressing https://github.com/manfredsteyer/angular-oauth2-oidc/issues/661\r\n    // i.e. Based on spec the at_hash check is only true for implicit code flow on Ping Federate\r\n    // https://www.pingidentity.com/developer/en/resources/openid-connect-developers-guide.html\r\n    if (this.hasOwnProperty('responseType') && this.responseType === 'code') {\r\n      this.disableAtHashCheck = true;\r\n    }\r\n    if (\r\n      !this.disableAtHashCheck &&\r\n      this.requestAccessToken &&\r\n      !claims['at_hash']\r\n    ) {\r\n      const err = 'An at_hash is needed!';\r\n      this.logger.warn(err);\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    const now = Date.now();\r\n    const issuedAtMSec = claims.iat * 1000;\r\n    const expiresAtMSec = claims.exp * 1000;\r\n    const clockSkewInMSec = (this.clockSkewInSec || 600) * 1000;\r\n\r\n    if (\r\n      issuedAtMSec - clockSkewInMSec >= now ||\r\n      expiresAtMSec + clockSkewInMSec <= now\r\n    ) {\r\n      const err = 'Token has expired';\r\n      console.error(err);\r\n      console.error({\r\n        now: now,\r\n        issuedAtMSec: issuedAtMSec,\r\n        expiresAtMSec: expiresAtMSec\r\n      });\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    const validationParams: ValidationParams = {\r\n      accessToken: accessToken,\r\n      idToken: idToken,\r\n      jwks: this.jwks,\r\n      idTokenClaims: claims,\r\n      idTokenHeader: header,\r\n      loadKeys: () => this.loadJwks()\r\n    };\r\n\r\n    if (this.disableAtHashCheck) {\r\n      return this.checkSignature(validationParams).then(_ => {\r\n        const result: ParsedIdToken = {\r\n          idToken: idToken,\r\n          idTokenClaims: claims,\r\n          idTokenClaimsJson: claimsJson,\r\n          idTokenHeader: header,\r\n          idTokenHeaderJson: headerJson,\r\n          idTokenExpiresAt: expiresAtMSec\r\n        };\r\n        return result;\r\n      });\r\n    }\r\n\r\n    return this.checkAtHash(validationParams).then(atHashValid => {\r\n      if (!this.disableAtHashCheck && this.requestAccessToken && !atHashValid) {\r\n        const err = 'Wrong at_hash';\r\n        this.logger.warn(err);\r\n        return Promise.reject(err);\r\n      }\r\n\r\n      return this.checkSignature(validationParams).then(_ => {\r\n        const atHashCheckEnabled = !this.disableAtHashCheck;\r\n        const result: ParsedIdToken = {\r\n          idToken: idToken,\r\n          idTokenClaims: claims,\r\n          idTokenClaimsJson: claimsJson,\r\n          idTokenHeader: header,\r\n          idTokenHeaderJson: headerJson,\r\n          idTokenExpiresAt: expiresAtMSec\r\n        };\r\n        if (atHashCheckEnabled) {\r\n          return this.checkAtHash(validationParams).then(atHashValid => {\r\n            if (this.requestAccessToken && !atHashValid) {\r\n              const err = 'Wrong at_hash';\r\n              this.logger.warn(err);\r\n              return Promise.reject(err);\r\n            } else {\r\n              return result;\r\n            }\r\n          });\r\n        } else {\r\n          return result;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns the received claims about the user.\r\n   */\r\n  public getIdentityClaims(): object {\r\n    const claims = this._storage.getItem('id_token_claims_obj');\r\n    if (!claims) {\r\n      return null;\r\n    }\r\n    return JSON.parse(claims);\r\n  }\r\n\r\n  /**\r\n   * Returns the granted scopes from the server.\r\n   */\r\n  public getGrantedScopes(): object {\r\n    const scopes = this._storage.getItem('granted_scopes');\r\n    if (!scopes) {\r\n      return null;\r\n    }\r\n    return JSON.parse(scopes);\r\n  }\r\n\r\n  /**\r\n   * Returns the current id_token.\r\n   */\r\n  public getIdToken(): string {\r\n    return this._storage ? this._storage.getItem('id_token') : null;\r\n  }\r\n\r\n  protected padBase64(base64data): string {\r\n    while (base64data.length % 4 !== 0) {\r\n      base64data += '=';\r\n    }\r\n    return base64data;\r\n  }\r\n\r\n  /**\r\n   * Returns the current access_token.\r\n   */\r\n  public getAccessToken(): string {\r\n    return this._storage ? this._storage.getItem('access_token') : null;\r\n  }\r\n\r\n  public getRefreshToken(): string {\r\n    return this._storage ? this._storage.getItem('refresh_token') : null;\r\n  }\r\n\r\n  /**\r\n   * Returns the expiration date of the access_token\r\n   * as milliseconds since 1970.\r\n   */\r\n  public getAccessTokenExpiration(): number {\r\n    if (!this._storage.getItem('expires_at')) {\r\n      return null;\r\n    }\r\n    return parseInt(this._storage.getItem('expires_at'), 10);\r\n  }\r\n\r\n  protected getAccessTokenStoredAt(): number {\r\n    return parseInt(this._storage.getItem('access_token_stored_at'), 10);\r\n  }\r\n\r\n  protected getIdTokenStoredAt(): number {\r\n    return parseInt(this._storage.getItem('id_token_stored_at'), 10);\r\n  }\r\n\r\n  /**\r\n   * Returns the expiration date of the id_token\r\n   * as milliseconds since 1970.\r\n   */\r\n  public getIdTokenExpiration(): number {\r\n    if (!this._storage.getItem('id_token_expires_at')) {\r\n      return null;\r\n    }\r\n\r\n    return parseInt(this._storage.getItem('id_token_expires_at'), 10);\r\n  }\r\n\r\n  /**\r\n   * Checkes, whether there is a valid access_token.\r\n   */\r\n  public hasValidAccessToken(): boolean {\r\n    if (this.getAccessToken()) {\r\n      const expiresAt = this._storage.getItem('expires_at');\r\n      const now = new Date();\r\n      if (expiresAt && parseInt(expiresAt, 10) < now.getTime()) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Checks whether there is a valid id_token.\r\n   */\r\n  public hasValidIdToken(): boolean {\r\n    if (this.getIdToken()) {\r\n      const expiresAt = this._storage.getItem('id_token_expires_at');\r\n      const now = new Date();\r\n      if (expiresAt && parseInt(expiresAt, 10) < now.getTime()) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Retrieve a saved custom property of the TokenReponse object. Only if predefined in authconfig.\r\n   */\r\n  public getCustomTokenResponseProperty(requestedProperty: string): any {\r\n    return this._storage &&\r\n      this.config.customTokenParameters &&\r\n      this.config.customTokenParameters.indexOf(requestedProperty) >= 0 &&\r\n      this._storage.getItem(requestedProperty) !== null\r\n      ? JSON.parse(this._storage.getItem(requestedProperty))\r\n      : null;\r\n  }\r\n\r\n  /**\r\n   * Returns the auth-header that can be used\r\n   * to transmit the access_token to a service\r\n   */\r\n  public authorizationHeader(): string {\r\n    return 'Bearer ' + this.getAccessToken();\r\n  }\r\n\r\n  /**\r\n   * Removes all tokens and logs the user out.\r\n   * If a logout url is configured, the user is\r\n   * redirected to it with optional state parameter.\r\n   * @param noRedirectToLogoutUrl\r\n   * @param state\r\n   */\r\n  public logOut(noRedirectToLogoutUrl = false, state = ''): void {\r\n    const id_token = this.getIdToken();\r\n    this._storage.removeItem('access_token');\r\n    this._storage.removeItem('id_token');\r\n    this._storage.removeItem('refresh_token');\r\n\r\n    if (this.saveNoncesInLocalStorage) {\r\n      localStorage.removeItem('nonce');\r\n      localStorage.removeItem('PKCI_verifier');\r\n    } else {\r\n      this._storage.removeItem('nonce');\r\n      this._storage.removeItem('PKCI_verifier');\r\n    }\r\n\r\n    this._storage.removeItem('expires_at');\r\n    this._storage.removeItem('id_token_claims_obj');\r\n    this._storage.removeItem('id_token_expires_at');\r\n    this._storage.removeItem('id_token_stored_at');\r\n    this._storage.removeItem('access_token_stored_at');\r\n    this._storage.removeItem('granted_scopes');\r\n    this._storage.removeItem('session_state');\r\n    if (this.config.customTokenParameters) {\r\n      this.config.customTokenParameters.forEach(customParam =>\r\n        this._storage.removeItem(customParam)\r\n      );\r\n    }\r\n    this.silentRefreshSubject = null;\r\n\r\n    this.eventsSubject.next(new OAuthInfoEvent('logout'));\r\n\r\n    if (!this.logoutUrl) {\r\n      return;\r\n    }\r\n    if (noRedirectToLogoutUrl) {\r\n      return;\r\n    }\r\n\r\n    if (!id_token && !this.postLogoutRedirectUri) {\r\n      return;\r\n    }\r\n\r\n    let logoutUrl: string;\r\n\r\n    if (!this.validateUrlForHttps(this.logoutUrl)) {\r\n      throw new Error(\r\n        \"logoutUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\"\r\n      );\r\n    }\r\n\r\n    // For backward compatibility\r\n    if (this.logoutUrl.indexOf('{{') > -1) {\r\n      logoutUrl = this.logoutUrl\r\n        .replace(/\\{\\{id_token\\}\\}/, id_token)\r\n        .replace(/\\{\\{client_id\\}\\}/, this.clientId);\r\n    } else {\r\n      let params = new HttpParams();\r\n\r\n      if (id_token) {\r\n        params = params.set('id_token_hint', id_token);\r\n      }\r\n\r\n      const postLogoutUrl = this.postLogoutRedirectUri || this.redirectUri;\r\n      if (postLogoutUrl) {\r\n        params = params.set('post_logout_redirect_uri', postLogoutUrl);\r\n\r\n        if (state) {\r\n          params = params.set('state', state);\r\n        }\r\n      }\r\n\r\n      logoutUrl =\r\n        this.logoutUrl +\r\n        (this.logoutUrl.indexOf('?') > -1 ? '&' : '?') +\r\n        params.toString();\r\n    }\r\n    this.config.openUri(logoutUrl);\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  public createAndSaveNonce(): Promise<string> {\r\n    const that = this;\r\n    return this.createNonce().then(function(nonce: any) {\r\n      // Use localStorage for nonce if possible\r\n      // localStorage is the only storage who survives a\r\n      // redirect in ALL browsers (also IE)\r\n      // Otherwiese we'd force teams who have to support\r\n      // IE into using localStorage for everything\r\n      if (\r\n        that.saveNoncesInLocalStorage &&\r\n        typeof window['localStorage'] !== 'undefined'\r\n      ) {\r\n        localStorage.setItem('nonce', nonce);\r\n      } else {\r\n        that._storage.setItem('nonce', nonce);\r\n      }\r\n      return nonce;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  public ngOnDestroy(): void {\r\n    this.clearAccessTokenTimer();\r\n    this.clearIdTokenTimer();\r\n\r\n    this.removeSilentRefreshEventListener();\r\n    const silentRefreshFrame = this.document.getElementById(\r\n      this.silentRefreshIFrameName\r\n    );\r\n    if (silentRefreshFrame) {\r\n      silentRefreshFrame.remove();\r\n    }\r\n\r\n    this.stopSessionCheckTimer();\r\n    this.removeSessionCheckEventListener();\r\n    const sessionCheckFrame = this.document.getElementById(\r\n      this.sessionCheckIFrameName\r\n    );\r\n    if (sessionCheckFrame) {\r\n      sessionCheckFrame.remove();\r\n    }\r\n  }\r\n\r\n  protected createNonce(): Promise<string> {\r\n    return new Promise(resolve => {\r\n      if (this.rngUrl) {\r\n        throw new Error(\r\n          'createNonce with rng-web-api has not been implemented so far'\r\n        );\r\n      }\r\n\r\n      /*\r\n       * This alphabet is from:\r\n       * https://tools.ietf.org/html/rfc7636#section-4.1\r\n       *\r\n       * [A-Z] / [a-z] / [0-9] / \"-\" / \".\" / \"_\" / \"~\"\r\n       */\r\n      const unreserved =\r\n        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\r\n      let size = 45;\r\n      let id = '';\r\n\r\n      const crypto =\r\n        typeof self === 'undefined' ? null : self.crypto || self['msCrypto'];\r\n      if (crypto) {\r\n        let bytes = new Uint8Array(size);\r\n        crypto.getRandomValues(bytes);\r\n\r\n        // Needed for IE\r\n        if (!bytes.map) {\r\n          (bytes as any).map = Array.prototype.map;\r\n        }\r\n\r\n        bytes = bytes.map(x => unreserved.charCodeAt(x % unreserved.length));\r\n        id = String.fromCharCode.apply(null, bytes);\r\n      } else {\r\n        while (0 < size--) {\r\n          id += unreserved[(Math.random() * unreserved.length) | 0];\r\n        }\r\n      }\r\n\r\n      resolve(base64UrlEncode(id));\r\n    });\r\n  }\r\n\r\n  protected async checkAtHash(params: ValidationParams): Promise<boolean> {\r\n    if (!this.tokenValidationHandler) {\r\n      this.logger.warn(\r\n        'No tokenValidationHandler configured. Cannot check at_hash.'\r\n      );\r\n      return true;\r\n    }\r\n    return this.tokenValidationHandler.validateAtHash(params);\r\n  }\r\n\r\n  protected checkSignature(params: ValidationParams): Promise<any> {\r\n    if (!this.tokenValidationHandler) {\r\n      this.logger.warn(\r\n        'No tokenValidationHandler configured. Cannot check signature.'\r\n      );\r\n      return Promise.resolve(null);\r\n    }\r\n    return this.tokenValidationHandler.validateSignature(params);\r\n  }\r\n\r\n  /**\r\n   * Start the implicit flow or the code flow,\r\n   * depending on your configuration.\r\n   */\r\n  public initLoginFlow(additionalState = '', params = {}): void {\r\n    if (this.responseType === 'code') {\r\n      return this.initCodeFlow(additionalState, params);\r\n    } else {\r\n      return this.initImplicitFlow(additionalState, params);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Starts the authorization code flow and redirects to user to\r\n   * the auth servers login url.\r\n   */\r\n  public initCodeFlow(additionalState = '', params = {}): void {\r\n    if (this.loginUrl !== '') {\r\n      this.initCodeFlowInternal(additionalState, params);\r\n    } else {\r\n      this.events\r\n        .pipe(filter(e => e.type === 'discovery_document_loaded'))\r\n        .subscribe(_ => this.initCodeFlowInternal(additionalState, params));\r\n    }\r\n  }\r\n\r\n  private initCodeFlowInternal(additionalState = '', params = {}): void {\r\n    if (!this.validateUrlForHttps(this.loginUrl)) {\r\n      throw new Error(\r\n        \"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\"\r\n      );\r\n    }\r\n\r\n    this.createLoginUrl(additionalState, '', null, false, params)\r\n      .then(this.config.openUri)\r\n      .catch(error => {\r\n        console.error('Error in initAuthorizationCodeFlow');\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  protected async createChallangeVerifierPairForPKCE(): Promise<\r\n    [string, string]\r\n  > {\r\n    if (!this.crypto) {\r\n      throw new Error(\r\n        'PKCE support for code flow needs a CryptoHander. Did you import the OAuthModule using forRoot() ?'\r\n      );\r\n    }\r\n\r\n    const verifier = await this.createNonce();\r\n    const challengeRaw = await this.crypto.calcHash(verifier, 'sha-256');\r\n    const challenge = base64UrlEncode(challengeRaw);\r\n\r\n    return [challenge, verifier];\r\n  }\r\n\r\n  private extractRecognizedCustomParameters(\r\n    tokenResponse: TokenResponse\r\n  ): Map<string, string> {\r\n    let foundParameters: Map<string, string> = new Map<string, string>();\r\n    if (!this.config.customTokenParameters) {\r\n      return foundParameters;\r\n    }\r\n    this.config.customTokenParameters.forEach((recognizedParameter: string) => {\r\n      if (tokenResponse[recognizedParameter]) {\r\n        foundParameters.set(\r\n          recognizedParameter,\r\n          JSON.stringify(tokenResponse[recognizedParameter])\r\n        );\r\n      }\r\n    });\r\n    return foundParameters;\r\n  }\r\n\r\n  /**\r\n   * Revokes the auth token to secure the vulnarability\r\n   * of the token issued allowing the authorization server to clean\r\n   * up any security credentials associated with the authorization\r\n   */\r\n  public revokeTokenAndLogout(): Promise<any> {\r\n    let revokeEndpoint = this.revocationEndpoint;\r\n    let accessToken = this.getAccessToken();\r\n    let refreshToken = this.getRefreshToken();\r\n\r\n    if (!accessToken) {\r\n      return;\r\n    }\r\n\r\n    let params = new HttpParams();\r\n\r\n    let headers = new HttpHeaders().set(\r\n      'Content-Type',\r\n      'application/x-www-form-urlencoded'\r\n    );\r\n\r\n    if (this.useHttpBasicAuth) {\r\n      const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n      headers = headers.set('Authorization', 'Basic ' + header);\r\n    }\r\n\r\n    if (!this.useHttpBasicAuth) {\r\n      params = params.set('client_id', this.clientId);\r\n    }\r\n\r\n    if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n      params = params.set('client_secret', this.dummyClientSecret);\r\n    }\r\n\r\n    if (this.customQueryParams) {\r\n      for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n        params = params.set(key, this.customQueryParams[key]);\r\n      }\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      let revokeAccessToken: Observable<void>;\r\n      let revokeRefreshToken: Observable<void>;\r\n\r\n      if (accessToken) {\r\n        let revokationParams = params\r\n          .set('token', accessToken)\r\n          .set('token_type_hint', 'access_token');\r\n        revokeAccessToken = this.http.post<void>(\r\n          revokeEndpoint,\r\n          revokationParams,\r\n          { headers }\r\n        );\r\n      } else {\r\n        revokeAccessToken = of(null);\r\n      }\r\n\r\n      if (refreshToken) {\r\n        let revokationParams = params\r\n          .set('token', refreshToken)\r\n          .set('token_type_hint', 'refresh_token');\r\n        revokeRefreshToken = this.http.post<void>(\r\n          revokeEndpoint,\r\n          revokationParams,\r\n          { headers }\r\n        );\r\n      } else {\r\n        revokeRefreshToken = of(null);\r\n      }\r\n\r\n      combineLatest([revokeAccessToken, revokeRefreshToken]).subscribe(\r\n        res => {\r\n          this.logOut();\r\n          resolve(res);\r\n          this.logger.info('Token successfully revoked');\r\n        },\r\n        err => {\r\n          this.logger.error('Error revoking token', err);\r\n          this.eventsSubject.next(\r\n            new OAuthErrorEvent('token_revoke_error', err)\r\n          );\r\n          reject(err);\r\n        }\r\n      );\r\n    });\r\n  }\r\n}\r\n","export abstract class OAuthModuleConfig {\r\n  resourceServer: OAuthResourceServerConfig;\r\n}\r\n\r\nexport abstract class OAuthResourceServerConfig {\r\n  /**\r\n   * Urls for which calls should be intercepted.\r\n   * If there is an ResourceServerErrorHandler registered, it is used for them.\r\n   * If sendAccessToken is set to true, the access_token is send to them too.\r\n   */\r\n  allowedUrls?: Array<string>;\r\n  sendAccessToken: boolean;\r\n  customUrlValidation?: (url: string) => boolean;\r\n}\r\n","import { HttpResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\n\r\nexport abstract class OAuthResourceServerErrorHandler {\r\n  abstract handleError(err: HttpResponse<any>): Observable<any>;\r\n}\r\n\r\nexport class OAuthNoopResourceServerErrorHandler\r\n  implements OAuthResourceServerErrorHandler {\r\n  handleError(err: HttpResponse<any>): Observable<any> {\r\n    return throwError(err);\r\n  }\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\n\r\nimport {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest\r\n} from '@angular/common/http';\r\nimport { Observable, of, merge } from 'rxjs';\r\nimport {\r\n  catchError,\r\n  filter,\r\n  map,\r\n  take,\r\n  mergeMap,\r\n  timeout\r\n} from 'rxjs/operators';\r\nimport { OAuthResourceServerErrorHandler } from './resource-server-error-handler';\r\nimport { OAuthModuleConfig } from '../oauth-module.config';\r\nimport { OAuthStorage } from '../types';\r\nimport { OAuthService } from '../oauth-service';\r\n\r\n@Injectable()\r\nexport class DefaultOAuthInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private authStorage: OAuthStorage,\r\n    private oAuthService: OAuthService,\r\n    private errorHandler: OAuthResourceServerErrorHandler,\r\n    @Optional() private moduleConfig: OAuthModuleConfig\r\n  ) {}\r\n\r\n  private checkUrl(url: string): boolean {\r\n    if (this.moduleConfig.resourceServer.customUrlValidation) {\r\n      return this.moduleConfig.resourceServer.customUrlValidation(url);\r\n    }\r\n\r\n    if (this.moduleConfig.resourceServer.allowedUrls) {\r\n      return !!this.moduleConfig.resourceServer.allowedUrls.find(u =>\r\n        url.startsWith(u)\r\n      );\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const url = req.url.toLowerCase();\r\n\r\n    if (\r\n      !this.moduleConfig ||\r\n      !this.moduleConfig.resourceServer ||\r\n      !this.checkUrl(url)\r\n    ) {\r\n      return next.handle(req);\r\n    }\r\n\r\n    const sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;\r\n\r\n    if (!sendAccessToken) {\r\n      return next\r\n        .handle(req)\r\n        .pipe(catchError(err => this.errorHandler.handleError(err)));\r\n    }\r\n\r\n    return merge(\r\n      of(this.oAuthService.getAccessToken()).pipe(\r\n        filter(token => (token ? true : false))\r\n      ),\r\n      this.oAuthService.events.pipe(\r\n        filter(e => e.type === 'token_received'),\r\n        timeout(this.oAuthService.waitForTokenInMsec || 0),\r\n        catchError(_ => of(null)), // timeout is not an error\r\n        map(_ => this.oAuthService.getAccessToken())\r\n      )\r\n    ).pipe(\r\n      take(1),\r\n      mergeMap(token => {\r\n        if (token) {\r\n          const header = 'Bearer ' + token;\r\n          const headers = req.headers.set('Authorization', header);\r\n          req = req.clone({ headers });\r\n        }\r\n\r\n        return next\r\n          .handle(req)\r\n          .pipe(catchError(err => this.errorHandler.handleError(err)));\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { ValidationHandler, ValidationParams } from './validation-handler';\r\n\r\n/**\r\n * A validation handler that isn't validating nothing.\r\n * Can be used to skip validation (at your own risk).\r\n */\r\nexport class NullValidationHandler implements ValidationHandler {\r\n  validateSignature(validationParams: ValidationParams): Promise<any> {\r\n    return Promise.resolve(null);\r\n  }\r\n  validateAtHash(validationParams: ValidationParams): Promise<boolean> {\r\n    return Promise.resolve(true);\r\n  }\r\n}\r\n","import { MemoryStorage } from './types';\r\n\r\nexport function createDefaultLogger() {\r\n  return console;\r\n}\r\n\r\nexport function createDefaultStorage() {\r\n  return typeof sessionStorage !== 'undefined'\r\n    ? sessionStorage\r\n    : new MemoryStorage();\r\n}\r\n","import { OAuthStorage, OAuthLogger } from './types';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { OAuthService } from './oauth-service';\r\nimport { UrlHelperService } from './url-helper.service';\r\n\r\nimport { OAuthModuleConfig } from './oauth-module.config';\r\nimport {\r\n  OAuthResourceServerErrorHandler,\r\n  OAuthNoopResourceServerErrorHandler\r\n} from './interceptors/resource-server-error-handler';\r\nimport { DefaultOAuthInterceptor } from './interceptors/default-oauth.interceptor';\r\nimport { ValidationHandler } from './token-validation/validation-handler';\r\nimport { NullValidationHandler } from './token-validation/null-validation-handler';\r\nimport { createDefaultLogger, createDefaultStorage } from './factories';\r\nimport {\r\n  HashHandler,\r\n  DefaultHashHandler\r\n} from './token-validation/hash-handler';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [],\r\n  exports: []\r\n})\r\nexport class OAuthModule {\r\n  static forRoot(\r\n    config: OAuthModuleConfig = null,\r\n    validationHandlerClass = NullValidationHandler\r\n  ): ModuleWithProviders<OAuthModule> {\r\n    return {\r\n      ngModule: OAuthModule,\r\n      providers: [\r\n        OAuthService,\r\n        UrlHelperService,\r\n        { provide: OAuthLogger, useFactory: createDefaultLogger },\r\n        { provide: OAuthStorage, useFactory: createDefaultStorage },\r\n        { provide: ValidationHandler, useClass: validationHandlerClass },\r\n        { provide: HashHandler, useClass: DefaultHashHandler },\r\n        {\r\n          provide: OAuthResourceServerErrorHandler,\r\n          useClass: OAuthNoopResourceServerErrorHandler\r\n        },\r\n        { provide: OAuthModuleConfig, useValue: config },\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: DefaultOAuthInterceptor,\r\n          multi: true\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { NullValidationHandler } from './null-validation-handler';\r\n\r\nconst err = `PLEASE READ THIS CAREFULLY:\r\n\r\nBeginning with angular-oauth2-oidc version 9, the JwksValidationHandler\r\nhas been moved to an library of its own. If you need it for implementing\r\nOAuth2/OIDC **implicit flow**, please install it using npm:\r\n\r\n  npm i angular-oauth2-oidc-jwks --save\r\n\r\nAfter that, you can import it into your application:\r\n\r\n  import { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';\r\n\r\nPlease note, that this dependency is not needed for the **code flow**,\r\nwhich is nowadays the **recommented** one for single page applications.\r\nThis also results in smaller bundle sizes.\r\n`;\r\n\r\n/**\r\n * This is just a dummy of the JwksValidationHandler\r\n * telling the users that the real one has been moved\r\n * to an library of its own, namely angular-oauth2-oidc-utils\r\n */\r\nexport class JwksValidationHandler extends NullValidationHandler {\r\n  constructor() {\r\n    super();\r\n    console.error(err);\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { AuthConfig } from './auth.config';\r\n\r\nexport const AUTH_CONFIG = new InjectionToken<AuthConfig>('AUTH_CONFIG');\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {createDefaultLogger as Éµc,createDefaultStorage as Éµd} from './factories';\nexport {DefaultHashHandler as Éµb,HashHandler as Éµa} from './token-validation/hash-handler';"]}