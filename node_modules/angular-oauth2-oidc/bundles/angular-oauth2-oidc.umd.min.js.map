{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://angular-oauth2-oidc/types.ts","ng://angular-oauth2-oidc/base64-helper.ts","ng://angular-oauth2-oidc/token-validation/validation-handler.ts","ng://angular-oauth2-oidc/url-helper.service.ts","ng://angular-oauth2-oidc/events.ts","ng://angular-oauth2-oidc/auth.config.ts","ng://angular-oauth2-oidc/encoder.ts","ng://angular-oauth2-oidc/token-validation/hash-handler.ts","ng://angular-oauth2-oidc/oauth-service.ts","ng://angular-oauth2-oidc/oauth-module.config.ts","ng://angular-oauth2-oidc/interceptors/resource-server-error-handler.ts","ng://angular-oauth2-oidc/interceptors/default-oauth.interceptor.ts","ng://angular-oauth2-oidc/token-validation/null-validation-handler.ts","ng://angular-oauth2-oidc/factories.ts","ng://angular-oauth2-oidc/angular-oauth-oidc.module.ts","ng://angular-oauth2-oidc/token-validation/jwks-validation-handler.ts","ng://angular-oauth2-oidc/tokens.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","push","__values","o","s","m","__read","ar","error","preventClearHashAfterLogin","MemoryStorage","data","Map","getItem","get","removeItem","delete","setItem","set","Injectable","b64DecodeUnicode","str","base64","replace","decodeURIComponent","atob","split","map","charCodeAt","toString","slice","join","base64UrlEncode","btoa","ValidationHandler","AbstractValidationHandler","validateAtHash","params","hashAlg","inferHashAlgorithm","idTokenHeader","calcHash","accessToken","tokenHash","_a","leftMostHalf","substr","atHash","claimsAtHash","idTokenClaims","console","jwtHeader","alg","match","Error","UrlHelperService","getHashFragmentParams","customHashFragment","hash","window","location","indexOf","questionMarkPosition","parseQueryString","queryString","pairs","pair","separatorIndex","escapedKey","escapedValue","type","OAuthSuccessEvent","info","_this","_super","OAuthEvent","OAuthInfoEvent","OAuthErrorEvent","reason","json","clientId","redirectUri","postLogoutRedirectUri","loginUrl","scope","resource","rngUrl","oidc","requestAccessToken","options","issuer","logoutUrl","clearHashAfterLogin","tokenEndpoint","revocationEndpoint","customTokenParameters","userinfoEndpoint","responseType","showDebugInformation","silentRefreshRedirectUri","silentRefreshMessagePrefix","silentRefreshShowIFrame","siletRefreshTimeout","silentRefreshTimeout","dummyClientSecret","requireHttps","strictDiscoveryDocumentValidation","jwks","customQueryParams","silentRefreshIFrameName","timeoutFactor","sessionChecksEnabled","sessionCheckIntervall","sessionCheckIFrameUrl","sessionCheckIFrameName","disableAtHashCheck","skipSubjectCheck","useIdTokenHintForSilentRefresh","skipIssuerCheck","nonceStateSeparator","useHttpBasicAuth","waitForTokenInMsec","disablePKCE","openUri","uri","href","assign","WebHttpUrlEncodingCodec","encodeKey","k","encodeURIComponent","encodeValue","decodeKey","decodeValue","HashHandler","DefaultHashHandler","valueToHash","algorithm","hashArray","sha256","array","toHashString2","byteArray","byteArray_1","byteArray_1_1","String","fromCharCode","toHashString","buffer","Uint8Array","byteArray_2","byteArray_2_1","OAuthService","ngZone","http","storage","tokenValidationHandler","config","urlHelper","logger","crypto","document","discoveryDocumentLoaded","state","eventsSubject","Subject","discoveryDocumentLoadedSubject","grantTypesSupported","inImplicitFlow","saveNoncesInLocalStorage","debug","discoveryDocumentLoaded$","asObservable","events","configure","setStorage","sessionStorage","ua","_b","navigator","userAgent","_c","includes","_d","setupRefreshTimer","AuthConfig","setupSessionCheck","configChanged","restartSessionChecksIfStillLoggedIn","hasValidIdToken","initSessionCheck","restartRefreshTimerIfStillLoggedIn","setupExpirationTimers","pipe","filter","subscribe","setupAutomaticSilentRefresh","listenTo","noPrompt","shouldRunSilentRefresh","tap","debounceTime","refreshInternal","catch","useSilentRefresh","silentRefresh","refreshToken","loadDiscoveryDocumentAndTryLogin","loadDiscoveryDocument","doc","tryLogin","loadDiscoveryDocumentAndLogin","hasValidAccessToken","initCodeFlow","initImplicitFlow","args","_i","validateUrlFromDiscoveryDocument","url","errors","httpsCheck","validateUrlForHttps","issuerCheck","validateUrlAgainstIssuer","lcUrl","toLowerCase","startsWith","assertUrlNotNullAndCorrectProtocol","description","clearAccessTokenTimer","clearIdTokenTimer","tokenReceivedSubscription","unsubscribe","setupAccessTokenTimer","setupIdTokenTimer","expiration","getAccessTokenExpiration","storedAt","getAccessTokenStoredAt","timeout","calcTimeout","runOutsideAngular","accessTokenTimeoutSubscription","of","delay","run","getIdTokenExpiration","getIdTokenStoredAt","idTokenTimeoutSubscription","stopAutomaticRefresh","now","Date","delta","Math","max","_storage","fullUrl","endsWith","validateDiscoveryDocument","authorization_endpoint","end_session_endpoint","grant_types_supported","token_endpoint","userinfo_endpoint","jwksUri","jwks_uri","check_session_iframe","revocation_endpoint","loadJwks","event","discoveryDocument","err","warn","fetchTokenUsingPasswordFlowAndLoadUserProfile","userName","password","headers","HttpHeaders","fetchTokenUsingPasswordFlow","loadUserProfile","getAccessToken","existingClaims","getIdentityClaims","sub","JSON","stringify","HttpParams","encoder","header","getOwnPropertyNames","post","tokenResponse","storeAccessTokenResponse","access_token","refresh_token","expires_in","fallbackAccessTokenExpirationTimeInSec","extractRecognizedCustomParameters","switchMap","id_token","from","processIdToken","storeIdToken","removeSilentRefreshEventListener","silentRefreshPostMessageEventListener","removeEventListener","setupSilentRefreshEventListener","message","processMessageEventMessage","customRedirectUri","addEventListener","claims","getIdToken","existingIframe","getElementById","removeChild","silentRefreshSubject","iframe","createElement","id","createLoginUrl","setAttribute","style","appendChild","first","success","race","toPromise","initImplicitFlowInPopup","initLoginFlowInPopup","display","checkForPopupClosedTimer","windowRef","open","calculatePopupFeatures","setInterval","closed","cleanup","clearInterval","listener","close","log","height","width","left","screenLeft","outerWidth","screenTop","outerHeight","expectedPrefix","prefixedMessage","canPerformSessionCheck","getSessionState","setupSessionCheckEventListener","removeSessionCheckEventListener","sessionCheckEventListener","origin","handleSessionUnchanged","handleSessionChange","handleSessionError","stopSessionCheckTimer","waitForSilentRefreshAfterSessionChange","logOut","startSessionCheckTimer","sessionCheckTimer","checkSession","bind","sessionState","contentWindow","postMessage","loginHint","that","createAndSaveNonce","nonce","_h","seperationChar","createChallangeVerifierPairForPKCE","challenge","verifier","localStorage","keys","_e","initImplicitFlowInternal","additionalState","addParams","resetImplicitFlow","callOnTokenReceivedIfExists","onTokenReceived","tokenParams","idClaims","idToken","expiresIn","grantedScopes","customParameters","isArray","expiresInMilliSeconds","expiresAt","getTime","forEach","tryLoginCodeFlow","tryLoginImplicitFlow","charAt","querySource","substring","search","parts","getCodePartsFromUrl","code","history","replaceState","name","parseState","nonceInState","userState","handleLoginError","validateNonce","event_1","storeSessionState","getTokenFromCode","pkciVerifier","fetchAndProcessToken","disableOAuth2StateCheck","event_2","validationHandler","idx","savedNonce","idTokenClaimsJson","idTokenExpiresAt","onLoginError","skipNonceCheck","tokenParts","headerJson","padBase64","parse","claimsJson","aud","every","iat","iss","issuedAtMSec","expiresAtMSec","exp","clockSkewInMSec","clockSkewInSec","validationParams","loadKeys","checkSignature","idTokenHeaderJson","checkAtHash","atHashValid","atHashCheckEnabled","getGrantedScopes","scopes","base64data","getRefreshToken","parseInt","getCustomTokenResponseProperty","requestedProperty","authorizationHeader","noRedirectToLogoutUrl","customParam","postLogoutUrl","createNonce","ngOnDestroy","silentRefreshFrame","remove","sessionCheckFrame","unreserved","size","self","bytes","getRandomValues","x","random","validateSignature","initLoginFlow","initCodeFlowInternal","challengeRaw","foundParameters","recognizedParameter","revokeTokenAndLogout","revokeEndpoint","revokeAccessToken","revokeRefreshToken","revokationParams","combineLatest","res","NgZone","HttpClient","OAuthStorage","Optional","OAuthLogger","Document","Inject","DOCUMENT","OAuthNoopResourceServerErrorHandler","handleError","throwError","DefaultOAuthInterceptor","authStorage","oAuthService","errorHandler","moduleConfig","checkUrl","resourceServer","customUrlValidation","allowedUrls","find","u","intercept","req","sendAccessToken","merge","token","catchError","take","mergeMap","clone","handle","OAuthResourceServerErrorHandler","OAuthModuleConfig","NullValidationHandler","createDefaultLogger","createDefaultStorage","OAuthModule","forRoot","validationHandlerClass","ngModule","OAuthModule_1","providers","provide","useFactory","useClass","useValue","HTTP_INTERCEPTORS","multi","NgModule","imports","CommonModule","declarations","exports","JwksValidationHandler","AUTH_CONFIG","InjectionToken"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Additional options that can be passed to tryLogin.\r\n */\r\nexport class LoginOptions {\r\n  /**\r\n   * Is called, after a token has been received and\r\n   * successfully validated.\r\n   *\r\n   * Deprecated:  Use property ``events`` on OAuthService instead.\r\n   */\r\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\r\n\r\n  /**\r\n   * Hook, to validate the received tokens.\r\n   *\r\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\r\n   */\r\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise<any>;\r\n\r\n  /**\r\n   * Called when tryLogin detects that the auth server\r\n   * included an error message into the hash fragment.\r\n   *\r\n   * Deprecated:  Use property ``events`` on OAuthService instead.\r\n   */\r\n  onLoginError?: (params: object) => void;\r\n\r\n  /**\r\n   * A custom hash fragment to be used instead of the\r\n   * actual one. This is used for silent refreshes, to\r\n   * pass the iframes hash fragment to this method, and\r\n   * is also used by popup flows in the same manner.\r\n   * This can be used with code flow, where is must be set\r\n   * to a hash symbol followed by the querystring. The\r\n   * question mark is optional, but may be present following\r\n   * the hash symbol.\r\n   */\r\n  customHashFragment?: string;\r\n\r\n  /**\r\n   * Set this to true to disable the oauth2 state\r\n   * check which is a best practice to avoid\r\n   * security attacks.\r\n   * As OIDC defines a nonce check that includes\r\n   * this, this can be set to true when only doing\r\n   * OIDC.\r\n   */\r\n  disableOAuth2StateCheck?: boolean;\r\n\r\n  /**\r\n   * Normally, you want to clear your hash fragment after\r\n   * the lib read the token(s) so that they are not displayed\r\n   * anymore in the url. If not, set this to true. For code flow\r\n   * this controls removing query string values.\r\n   */\r\n  preventClearHashAfterLogin? = false;\r\n\r\n  /**\r\n   * Set this for code flow if you used a custom redirect Uri\r\n   * when retrieving the code. This is used internally for silent\r\n   * refresh and popup flows.\r\n   */\r\n  customRedirectUri?: string;\r\n}\r\n\r\n/**\r\n * Defines the logging interface the OAuthService uses\r\n * internally. Is compatible with the `console` object,\r\n * but you can provide your own implementation as well\r\n * through dependency injection.\r\n */\r\nexport abstract class OAuthLogger {\r\n  abstract debug(message?: any, ...optionalParams: any[]): void;\r\n  abstract info(message?: any, ...optionalParams: any[]): void;\r\n  abstract log(message?: any, ...optionalParams: any[]): void;\r\n  abstract warn(message?: any, ...optionalParams: any[]): void;\r\n  abstract error(message?: any, ...optionalParams: any[]): void;\r\n}\r\n\r\n/**\r\n * Defines a simple storage that can be used for\r\n * storing the tokens at client side.\r\n * Is compatible to localStorage and sessionStorage,\r\n * but you can also create your own implementations.\r\n */\r\nexport abstract class OAuthStorage {\r\n  abstract getItem(key: string): string | null;\r\n  abstract removeItem(key: string): void;\r\n  abstract setItem(key: string, data: string): void;\r\n}\r\n\r\n@Injectable()\r\nexport class MemoryStorage implements OAuthStorage {\r\n  private data = new Map<string, string>();\r\n\r\n  getItem(key: string): string {\r\n    return this.data.get(key);\r\n  }\r\n\r\n  removeItem(key: string): void {\r\n    this.data.delete(key);\r\n  }\r\n\r\n  setItem(key: string, data: string): void {\r\n    this.data.set(key, data);\r\n  }\r\n}\r\n\r\n/**\r\n * Represents the received tokens, the received state\r\n * and the parsed claims from the id-token.\r\n */\r\nexport class ReceivedTokens {\r\n  idToken: string;\r\n  accessToken: string;\r\n  idClaims?: object;\r\n  state?: string;\r\n}\r\n\r\n/**\r\n * Represents the parsed and validated id_token.\r\n */\r\nexport interface ParsedIdToken {\r\n  idToken: string;\r\n  idTokenClaims: object;\r\n  idTokenHeader: object;\r\n  idTokenClaimsJson: string;\r\n  idTokenHeaderJson: string;\r\n  idTokenExpiresAt: number;\r\n}\r\n\r\n/**\r\n * Represents the response from the token endpoint\r\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\r\n */\r\nexport interface TokenResponse {\r\n  access_token: string;\r\n  id_token: string;\r\n  token_type: string;\r\n  expires_in: number;\r\n  refresh_token: string;\r\n  scope: string;\r\n  state?: string;\r\n}\r\n\r\n/**\r\n * Represents the response from the user info endpoint\r\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\r\n */\r\nexport interface UserInfo {\r\n  sub: string;\r\n  [key: string]: any;\r\n}\r\n\r\n/**\r\n * Represents an OpenID Connect discovery document\r\n */\r\nexport interface OidcDiscoveryDoc {\r\n  issuer: string;\r\n  authorization_endpoint: string;\r\n  token_endpoint: string;\r\n  token_endpoint_auth_methods_supported: string[];\r\n  token_endpoint_auth_signing_alg_values_supported: string[];\r\n  userinfo_endpoint: string;\r\n  check_session_iframe: string;\r\n  end_session_endpoint: string;\r\n  jwks_uri: string;\r\n  registration_endpoint: string;\r\n  scopes_supported: string[];\r\n  response_types_supported: string[];\r\n  acr_values_supported: string[];\r\n  response_modes_supported: string[];\r\n  grant_types_supported: string[];\r\n  subject_types_supported: string[];\r\n  userinfo_signing_alg_values_supported: string[];\r\n  userinfo_encryption_alg_values_supported: string[];\r\n  userinfo_encryption_enc_values_supported: string[];\r\n  id_token_signing_alg_values_supported: string[];\r\n  id_token_encryption_alg_values_supported: string[];\r\n  id_token_encryption_enc_values_supported: string[];\r\n  request_object_signing_alg_values_supported: string[];\r\n  display_values_supported: string[];\r\n  claim_types_supported: string[];\r\n  claims_supported: string[];\r\n  claims_parameter_supported: boolean;\r\n  service_documentation: string;\r\n  ui_locales_supported: string[];\r\n  revocation_endpoint: string;\r\n}\r\n","// see: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_.22Unicode_Problem.22\r\nexport function b64DecodeUnicode(str) {\r\n  const base64 = str.replace(/\\-/g, '+').replace(/\\_/g, '/');\r\n\r\n  return decodeURIComponent(\r\n    atob(base64)\r\n      .split('')\r\n      .map(function(c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n      })\r\n      .join('')\r\n  );\r\n}\r\n\r\nexport function base64UrlEncode(str): string {\r\n  const base64 = btoa(str);\r\n  return base64\r\n    .replace(/\\+/g, '-')\r\n    .replace(/\\//g, '_')\r\n    .replace(/=/g, '');\r\n}\r\n","import { base64UrlEncode } from '../base64-helper';\r\n\r\nexport interface ValidationParams {\r\n  idToken: string;\r\n  accessToken: string;\r\n  idTokenHeader: object;\r\n  idTokenClaims: object;\r\n  jwks: object;\r\n  loadKeys: () => Promise<object>;\r\n}\r\n\r\n/**\r\n * Interface for Handlers that are hooked in to\r\n * validate tokens.\r\n */\r\nexport abstract class ValidationHandler {\r\n  /**\r\n   * Validates the signature of an id_token.\r\n   */\r\n  public abstract validateSignature(\r\n    validationParams: ValidationParams\r\n  ): Promise<any>;\r\n\r\n  /**\r\n   * Validates the at_hash in an id_token against the received access_token.\r\n   */\r\n  public abstract validateAtHash(\r\n    validationParams: ValidationParams\r\n  ): Promise<boolean>;\r\n}\r\n\r\n/**\r\n * This abstract implementation of ValidationHandler already implements\r\n * the method validateAtHash. However, to make use of it,\r\n * you have to override the method calcHash.\r\n */\r\nexport abstract class AbstractValidationHandler implements ValidationHandler {\r\n  /**\r\n   * Validates the signature of an id_token.\r\n   */\r\n  abstract validateSignature(validationParams: ValidationParams): Promise<any>;\r\n\r\n  /**\r\n   * Validates the at_hash in an id_token against the received access_token.\r\n   */\r\n  async validateAtHash(params: ValidationParams): Promise<boolean> {\r\n    let hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\r\n\r\n    let tokenHash = await this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\r\n\r\n    let leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\r\n\r\n    let atHash = base64UrlEncode(leftMostHalf);\r\n\r\n    let claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\r\n\r\n    if (atHash !== claimsAtHash) {\r\n      console.error('exptected at_hash: ' + atHash);\r\n      console.error('actual at_hash: ' + claimsAtHash);\r\n    }\r\n\r\n    return atHash === claimsAtHash;\r\n  }\r\n\r\n  /**\r\n   * Infers the name of the hash algorithm to use\r\n   * from the alg field of an id_token.\r\n   *\r\n   * @param jwtHeader the id_token's parsed header\r\n   */\r\n  protected inferHashAlgorithm(jwtHeader: object): string {\r\n    let alg: string = jwtHeader['alg'];\r\n\r\n    if (!alg.match(/^.S[0-9]{3}$/)) {\r\n      throw new Error('Algorithm not supported: ' + alg);\r\n    }\r\n\r\n    return 'sha-' + alg.substr(2);\r\n  }\r\n\r\n  /**\r\n   * Calculates the hash for the passed value by using\r\n   * the passed hash algorithm.\r\n   *\r\n   * @param valueToHash\r\n   * @param algorithm\r\n   */\r\n  protected abstract calcHash(\r\n    valueToHash: string,\r\n    algorithm: string\r\n  ): Promise<string>;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class UrlHelperService {\r\n  public getHashFragmentParams(customHashFragment?: string): object {\r\n    let hash = customHashFragment || window.location.hash;\r\n\r\n    hash = decodeURIComponent(hash);\r\n\r\n    if (hash.indexOf('#') !== 0) {\r\n      return {};\r\n    }\r\n\r\n    const questionMarkPosition = hash.indexOf('?');\r\n\r\n    if (questionMarkPosition > -1) {\r\n      hash = hash.substr(questionMarkPosition + 1);\r\n    } else {\r\n      hash = hash.substr(1);\r\n    }\r\n\r\n    return this.parseQueryString(hash);\r\n  }\r\n\r\n  public parseQueryString(queryString: string): object {\r\n    const data = {};\r\n    let pairs, pair, separatorIndex, escapedKey, escapedValue, key, value;\r\n\r\n    if (queryString === null) {\r\n      return data;\r\n    }\r\n\r\n    pairs = queryString.split('&');\r\n\r\n    for (let i = 0; i < pairs.length; i++) {\r\n      pair = pairs[i];\r\n      separatorIndex = pair.indexOf('=');\r\n\r\n      if (separatorIndex === -1) {\r\n        escapedKey = pair;\r\n        escapedValue = null;\r\n      } else {\r\n        escapedKey = pair.substr(0, separatorIndex);\r\n        escapedValue = pair.substr(separatorIndex + 1);\r\n      }\r\n\r\n      key = decodeURIComponent(escapedKey);\r\n      value = decodeURIComponent(escapedValue);\r\n\r\n      if (key.substr(0, 1) === '/') {\r\n        key = key.substr(1);\r\n      }\r\n\r\n      data[key] = value;\r\n    }\r\n\r\n    return data;\r\n  }\r\n}\r\n","export type EventType =\r\n  | 'discovery_document_loaded'\r\n  | 'jwks_load_error'\r\n  | 'invalid_nonce_in_state'\r\n  | 'discovery_document_load_error'\r\n  | 'discovery_document_validation_error'\r\n  | 'user_profile_loaded'\r\n  | 'user_profile_load_error'\r\n  | 'token_received'\r\n  | 'token_error'\r\n  | 'code_error'\r\n  | 'token_refreshed'\r\n  | 'token_refresh_error'\r\n  | 'silent_refresh_error'\r\n  | 'silently_refreshed'\r\n  | 'silent_refresh_timeout'\r\n  | 'token_validation_error'\r\n  | 'token_expires'\r\n  | 'session_changed'\r\n  | 'session_error'\r\n  | 'session_terminated'\r\n  | 'logout'\r\n  | 'popup_closed'\r\n  | 'popup_blocked'\r\n  | 'token_revoke_error';\r\n\r\nexport abstract class OAuthEvent {\r\n  constructor(readonly type: EventType) {}\r\n}\r\n\r\nexport class OAuthSuccessEvent extends OAuthEvent {\r\n  constructor(type: EventType, readonly info: any = null) {\r\n    super(type);\r\n  }\r\n}\r\n\r\nexport class OAuthInfoEvent extends OAuthEvent {\r\n  constructor(type: EventType, readonly info: any = null) {\r\n    super(type);\r\n  }\r\n}\r\n\r\nexport class OAuthErrorEvent extends OAuthEvent {\r\n  constructor(\r\n    type: EventType,\r\n    readonly reason: object,\r\n    readonly params: object = null\r\n  ) {\r\n    super(type);\r\n  }\r\n}\r\n","export class AuthConfig {\r\n  /**\r\n   * The client's id as registered with the auth server\r\n   */\r\n  public clientId? = '';\r\n\r\n  /**\r\n   * The client's redirectUri as registered with the auth server\r\n   */\r\n  public redirectUri? = '';\r\n\r\n  /**\r\n   * An optional second redirectUri where the auth server\r\n   * redirects the user to after logging out.\r\n   */\r\n  public postLogoutRedirectUri? = '';\r\n\r\n  /**\r\n   * The auth server's endpoint that allows to log\r\n   * the user in when using implicit flow.\r\n   */\r\n  public loginUrl? = '';\r\n\r\n  /**\r\n   * The requested scopes\r\n   */\r\n  public scope? = 'openid profile';\r\n\r\n  public resource? = '';\r\n\r\n  public rngUrl? = '';\r\n\r\n  /**\r\n   * Defines whether to use OpenId Connect during\r\n   * implicit flow.\r\n   */\r\n  public oidc? = true;\r\n\r\n  /**\r\n   * Defines whether to request an access token during\r\n   * implicit flow.\r\n   */\r\n  public requestAccessToken? = true;\r\n\r\n  public options?: any = null;\r\n\r\n  /**\r\n   * The issuer's uri.\r\n   */\r\n  public issuer? = '';\r\n\r\n  /**\r\n   * The logout url.\r\n   */\r\n  public logoutUrl? = '';\r\n\r\n  /**\r\n   * Defines whether to clear the hash fragment after logging in.\r\n   */\r\n  public clearHashAfterLogin? = true;\r\n\r\n  /**\r\n   * Url of the token endpoint as defined by OpenId Connect and OAuth 2.\r\n   */\r\n  public tokenEndpoint?: string = null;\r\n\r\n  /**\r\n   * Url of the revocation endpoint as defined by OpenId Connect and OAuth 2.\r\n   */\r\n  public revocationEndpoint?: string = null;\r\n\r\n  /**\r\n   * Names of known parameters sent out in the TokenResponse. https://tools.ietf.org/html/rfc6749#section-5.1\r\n   */\r\n  public customTokenParameters?: string[] = [];\r\n\r\n  /**\r\n   * Url of the userinfo endpoint as defined by OpenId Connect.\r\n   */\r\n  public userinfoEndpoint?: string = null;\r\n\r\n  public responseType? = '';\r\n\r\n  /**\r\n   * Defines whether additional debug information should\r\n   * be shown at the console. Note that in certain browsers\r\n   * the verbosity of the console needs to be explicitly set\r\n   * to include Debug level messages.\r\n   */\r\n  public showDebugInformation? = false;\r\n\r\n  /**\r\n   * The redirect uri used when doing silent refresh.\r\n   */\r\n  public silentRefreshRedirectUri? = '';\r\n\r\n  public silentRefreshMessagePrefix? = '';\r\n\r\n  /**\r\n   * Set this to true to display the iframe used for\r\n   * silent refresh for debugging.\r\n   */\r\n  public silentRefreshShowIFrame? = false;\r\n\r\n  /**\r\n   * Timeout for silent refresh.\r\n   * @internal\r\n   * depreacted b/c of typo, see silentRefreshTimeout\r\n   */\r\n  public siletRefreshTimeout?: number = 1000 * 20;\r\n\r\n  /**\r\n   * Timeout for silent refresh.\r\n   */\r\n  public silentRefreshTimeout?: number = 1000 * 20;\r\n\r\n  /**\r\n   * Some auth servers don't allow using password flow\r\n   * w/o a client secret while the standards do not\r\n   * demand for it. In this case, you can set a password\r\n   * here. As this password is exposed to the public\r\n   * it does not bring additional security and is therefore\r\n   * as good as using no password.\r\n   */\r\n  public dummyClientSecret?: string = null;\r\n\r\n  /**\r\n   * Defines whether https is required.\r\n   * The default value is remoteOnly which only allows\r\n   * http for localhost, while every other domains need\r\n   * to be used with https.\r\n   */\r\n  public requireHttps?: boolean | 'remoteOnly' = 'remoteOnly';\r\n\r\n  /**\r\n   * Defines whether every url provided by the discovery\r\n   * document has to start with the issuer's url.\r\n   */\r\n  public strictDiscoveryDocumentValidation? = true;\r\n\r\n  /**\r\n   * JSON Web Key Set (https://tools.ietf.org/html/rfc7517)\r\n   * with keys used to validate received id_tokens.\r\n   * This is taken out of the disovery document. Can be set manually too.\r\n   */\r\n  public jwks?: object = null;\r\n\r\n  /**\r\n   * Map with additional query parameter that are appended to\r\n   * the request when initializing implicit flow.\r\n   */\r\n  public customQueryParams?: object = null;\r\n\r\n  public silentRefreshIFrameName? = 'angular-oauth-oidc-silent-refresh-iframe';\r\n\r\n  /**\r\n   * Defines when the token_timeout event should be raised.\r\n   * If you set this to the default value 0.75, the event\r\n   * is triggered after 75% of the token's life time.\r\n   */\r\n  public timeoutFactor? = 0.75;\r\n\r\n  /**\r\n   * If true, the lib will try to check whether the user\r\n   * is still logged in on a regular basis as described\r\n   * in http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\r\n   */\r\n  public sessionChecksEnabled? = false;\r\n\r\n  /**\r\n   * Interval in msec for checking the session\r\n   * according to http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\r\n   */\r\n  public sessionCheckIntervall? = 3 * 1000;\r\n\r\n  /**\r\n   * Url for the iframe used for session checks\r\n   */\r\n  public sessionCheckIFrameUrl?: string = null;\r\n\r\n  /**\r\n   * Name of the iframe to use for session checks\r\n   */\r\n  public sessionCheckIFrameName? = 'angular-oauth-oidc-check-session-iframe';\r\n\r\n  /**\r\n   * This property has been introduced to disable at_hash checks\r\n   * and is indented for Identity Provider that does not deliver\r\n   * an at_hash EVEN THOUGH its recommended by the OIDC specs.\r\n   * Of course, when disabling these checks the we are bypassing\r\n   * a security check which means we are more vulnerable.\r\n   */\r\n  public disableAtHashCheck? = false;\r\n\r\n  /**\r\n   * Defines wether to check the subject of a refreshed token after silent refresh.\r\n   * Normally, it should be the same as before.\r\n   */\r\n  public skipSubjectCheck? = false;\r\n\r\n  public useIdTokenHintForSilentRefresh? = false;\r\n\r\n  /**\r\n   * Defined whether to skip the validation of the issuer in the discovery document.\r\n   * Normally, the discovey document's url starts with the url of the issuer.\r\n   */\r\n  public skipIssuerCheck? = false;\r\n\r\n  /**\r\n   * According to rfc6749 it is recommended (but not required) that the auth\r\n   * server exposes the access_token's life time in seconds.\r\n   * This is a fallback value for the case this value is not exposed.\r\n   */\r\n  public fallbackAccessTokenExpirationTimeInSec?: number;\r\n\r\n  /**\r\n   * final state sent to issuer is built as follows:\r\n   * state = nonce + nonceStateSeparator + additional state\r\n   * Default separator is ';' (encoded %3B).\r\n   * In rare cases, this character might be forbidden or inconvenient to use by the issuer so it can be customized.\r\n   */\r\n  public nonceStateSeparator? = ';';\r\n\r\n  /**\r\n   * Set this to true to use HTTP BASIC auth for AJAX calls\r\n   */\r\n  public useHttpBasicAuth? = false;\r\n\r\n  /**\r\n   * The window of time (in seconds) to allow the current time to deviate when validating id_token's iat and exp values.\r\n   */\r\n  public clockSkewInSec?: number;\r\n\r\n  /**\r\n   * The interceptors waits this time span if there is no token\r\n   */\r\n  public waitForTokenInMsec? = 0;\r\n\r\n  /**\r\n   * Set this to true if you want to use silent refresh together with\r\n   * code flow. As silent refresh is the only option for refreshing\r\n   * with implicit flow, you don't need to explicitly turn it on in\r\n   * this case.\r\n   */\r\n  public useSilentRefresh?;\r\n\r\n  /**\r\n   * Code Flow is by defauld used together with PKCI which is also higly recommented.\r\n   * You can disbale it here by setting this flag to true.\r\n   * https://tools.ietf.org/html/rfc7636#section-1.1\r\n   */\r\n  public disablePKCE? = false;\r\n\r\n  constructor(json?: Partial<AuthConfig>) {\r\n    if (json) {\r\n      Object.assign(this, json);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This property allows you to override the method that is used to open the login url,\r\n   * allowing a way for implementations to specify their own method of routing to new\r\n   * urls.\r\n   */\r\n  public openUri?: (uri: string) => void = uri => {\r\n    location.href = uri;\r\n  };\r\n}\r\n","import { HttpParameterCodec } from '@angular/common/http';\r\n/**\r\n * This custom encoder allows charactes like +, % and / to be used in passwords\r\n */\r\nexport class WebHttpUrlEncodingCodec implements HttpParameterCodec {\r\n  encodeKey(k: string): string {\r\n    return encodeURIComponent(k);\r\n  }\r\n\r\n  encodeValue(v: string): string {\r\n    return encodeURIComponent(v);\r\n  }\r\n\r\n  decodeKey(k: string): string {\r\n    return decodeURIComponent(k);\r\n  }\r\n\r\n  decodeValue(v: string) {\r\n    return decodeURIComponent(v);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { sha256 } from 'js-sha256';\r\n\r\n/**\r\n * Abstraction for crypto algorithms\r\n */\r\nexport abstract class HashHandler {\r\n  abstract calcHash(valueToHash: string, algorithm: string): Promise<string>;\r\n}\r\n\r\n@Injectable()\r\nexport class DefaultHashHandler implements HashHandler {\r\n  async calcHash(valueToHash: string, algorithm: string): Promise<string> {\r\n    // const encoder = new TextEncoder();\r\n    // const hashArray = await window.crypto.subtle.digest(algorithm, data);\r\n    // const data = encoder.encode(valueToHash);\r\n\r\n    const hashArray = sha256.array(valueToHash);\r\n    // const hashString = this.toHashString(hashArray);\r\n    const hashString = this.toHashString2(hashArray);\r\n\r\n    return hashString;\r\n  }\r\n\r\n  toHashString2(byteArray: number[]) {\r\n    let result = '';\r\n    for (let e of byteArray) {\r\n      result += String.fromCharCode(e);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  toHashString(buffer: ArrayBuffer) {\r\n    const byteArray = new Uint8Array(buffer);\r\n    let result = '';\r\n    for (let e of byteArray) {\r\n      result += String.fromCharCode(e);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  // hexString(buffer) {\r\n  //     const byteArray = new Uint8Array(buffer);\r\n  //     const hexCodes = [...byteArray].map(value => {\r\n  //       const hexCode = value.toString(16);\r\n  //       const paddedHexCode = hexCode.padStart(2, '0');\r\n  //       return paddedHexCode;\r\n  //     });\r\n\r\n  //     return hexCodes.join('');\r\n  //   }\r\n\r\n  // toHashString(hexString: string) {\r\n  //   let result = '';\r\n  //   for (let i = 0; i < hexString.length; i += 2) {\r\n  //     let hexDigit = hexString.charAt(i) + hexString.charAt(i + 1);\r\n  //     let num = parseInt(hexDigit, 16);\r\n  //     result += String.fromCharCode(num);\r\n  //   }\r\n  //   return result;\r\n  // }\r\n}\r\n","import { Injectable, NgZone, Optional, OnDestroy, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport {\r\n  Observable,\r\n  Subject,\r\n  Subscription,\r\n  of,\r\n  race,\r\n  from,\r\n  combineLatest\r\n} from 'rxjs';\r\nimport {\r\n  filter,\r\n  delay,\r\n  first,\r\n  tap,\r\n  map,\r\n  switchMap,\r\n  debounceTime\r\n} from 'rxjs/operators';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\nimport {\r\n  ValidationHandler,\r\n  ValidationParams\r\n} from './token-validation/validation-handler';\r\nimport { UrlHelperService } from './url-helper.service';\r\nimport {\r\n  OAuthEvent,\r\n  OAuthInfoEvent,\r\n  OAuthErrorEvent,\r\n  OAuthSuccessEvent\r\n} from './events';\r\nimport {\r\n  OAuthLogger,\r\n  OAuthStorage,\r\n  LoginOptions,\r\n  ParsedIdToken,\r\n  OidcDiscoveryDoc,\r\n  TokenResponse,\r\n  UserInfo\r\n} from './types';\r\nimport { b64DecodeUnicode, base64UrlEncode } from './base64-helper';\r\nimport { AuthConfig } from './auth.config';\r\nimport { WebHttpUrlEncodingCodec } from './encoder';\r\nimport { HashHandler } from './token-validation/hash-handler';\r\n\r\n/**\r\n * Service for logging in and logging out with\r\n * OIDC and OAuth2. Supports implicit flow and\r\n * password flow.\r\n */\r\n@Injectable()\r\nexport class OAuthService extends AuthConfig implements OnDestroy {\r\n  // Extending AuthConfig ist just for LEGACY reasons\r\n  // to not break existing code.\r\n\r\n  /**\r\n   * The ValidationHandler used to validate received\r\n   * id_tokens.\r\n   */\r\n  public tokenValidationHandler: ValidationHandler;\r\n\r\n  /**\r\n   * @internal\r\n   * Deprecated:  use property events instead\r\n   */\r\n  public discoveryDocumentLoaded = false;\r\n\r\n  /**\r\n   * @internal\r\n   * Deprecated:  use property events instead\r\n   */\r\n  public discoveryDocumentLoaded$: Observable<OidcDiscoveryDoc>;\r\n\r\n  /**\r\n   * Informs about events, like token_received or token_expires.\r\n   * See the string enum EventType for a full list of event types.\r\n   */\r\n  public events: Observable<OAuthEvent>;\r\n\r\n  /**\r\n   * The received (passed around) state, when logging\r\n   * in with implicit flow.\r\n   */\r\n  public state? = '';\r\n\r\n  protected eventsSubject: Subject<OAuthEvent> = new Subject<OAuthEvent>();\r\n  protected discoveryDocumentLoadedSubject: Subject<\r\n    OidcDiscoveryDoc\r\n  > = new Subject<OidcDiscoveryDoc>();\r\n  protected silentRefreshPostMessageEventListener: EventListener;\r\n  protected grantTypesSupported: Array<string> = [];\r\n  protected _storage: OAuthStorage;\r\n  protected accessTokenTimeoutSubscription: Subscription;\r\n  protected idTokenTimeoutSubscription: Subscription;\r\n  protected tokenReceivedSubscription: Subscription;\r\n  protected sessionCheckEventListener: EventListener;\r\n  protected jwksUri: string;\r\n  protected sessionCheckTimer: any;\r\n  protected silentRefreshSubject: string;\r\n  protected inImplicitFlow = false;\r\n\r\n  protected saveNoncesInLocalStorage = false;\r\n\r\n  constructor(\r\n    protected ngZone: NgZone,\r\n    protected http: HttpClient,\r\n    @Optional() storage: OAuthStorage,\r\n    @Optional() tokenValidationHandler: ValidationHandler,\r\n    @Optional() protected config: AuthConfig,\r\n    protected urlHelper: UrlHelperService,\r\n    protected logger: OAuthLogger,\r\n    @Optional() protected crypto: HashHandler,\r\n    @Inject(DOCUMENT) private document: Document\r\n  ) {\r\n    super();\r\n\r\n    this.debug('angular-oauth2-oidc v8-beta');\r\n\r\n    this.discoveryDocumentLoaded$ = this.discoveryDocumentLoadedSubject.asObservable();\r\n    this.events = this.eventsSubject.asObservable();\r\n\r\n    if (tokenValidationHandler) {\r\n      this.tokenValidationHandler = tokenValidationHandler;\r\n    }\r\n\r\n    if (config) {\r\n      this.configure(config);\r\n    }\r\n\r\n    try {\r\n      if (storage) {\r\n        this.setStorage(storage);\r\n      } else if (typeof sessionStorage !== 'undefined') {\r\n        this.setStorage(sessionStorage);\r\n      }\r\n    } catch (e) {\r\n      console.error(\r\n        'No OAuthStorage provided and cannot access default (sessionStorage).' +\r\n          'Consider providing a custom OAuthStorage implementation in your module.',\r\n        e\r\n      );\r\n    }\r\n\r\n    // in IE, sessionStorage does not always survive a redirect\r\n    if (\r\n      typeof window !== 'undefined' &&\r\n      typeof window['localStorage'] !== 'undefined'\r\n    ) {\r\n      const ua = window?.navigator?.userAgent;\r\n      const msie = ua?.includes('MSIE ') || ua?.includes('Trident');\r\n\r\n      if (msie) {\r\n        this.saveNoncesInLocalStorage = true;\r\n      }\r\n    }\r\n\r\n    this.setupRefreshTimer();\r\n  }\r\n\r\n  /**\r\n   * Use this method to configure the service\r\n   * @param config the configuration\r\n   */\r\n  public configure(config: AuthConfig): void {\r\n    // For the sake of downward compatibility with\r\n    // original configuration API\r\n    Object.assign(this, new AuthConfig(), config);\r\n\r\n    this.config = Object.assign({} as AuthConfig, new AuthConfig(), config);\r\n\r\n    if (this.sessionChecksEnabled) {\r\n      this.setupSessionCheck();\r\n    }\r\n\r\n    this.configChanged();\r\n  }\r\n\r\n  protected configChanged(): void {\r\n    this.setupRefreshTimer();\r\n  }\r\n\r\n  public restartSessionChecksIfStillLoggedIn(): void {\r\n    if (this.hasValidIdToken()) {\r\n      this.initSessionCheck();\r\n    }\r\n  }\r\n\r\n  protected restartRefreshTimerIfStillLoggedIn(): void {\r\n    this.setupExpirationTimers();\r\n  }\r\n\r\n  protected setupSessionCheck(): void {\r\n    this.events.pipe(filter(e => e.type === 'token_received')).subscribe(e => {\r\n      this.initSessionCheck();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Will setup up silent refreshing for when the token is\r\n   * about to expire. When the user is logged out via this.logOut method, the\r\n   * silent refreshing will pause and not refresh the tokens until the user is\r\n   * logged back in via receiving a new token.\r\n   * @param params Additional parameter to pass\r\n   * @param listenTo Setup automatic refresh of a specific token type\r\n   */\r\n  public setupAutomaticSilentRefresh(\r\n    params: object = {},\r\n    listenTo?: 'access_token' | 'id_token' | 'any',\r\n    noPrompt = true\r\n  ): void {\r\n    let shouldRunSilentRefresh = true;\r\n    this.events\r\n      .pipe(\r\n        tap(e => {\r\n          if (e.type === 'token_received') {\r\n            shouldRunSilentRefresh = true;\r\n          } else if (e.type === 'logout') {\r\n            shouldRunSilentRefresh = false;\r\n          }\r\n        }),\r\n        filter(e => e.type === 'token_expires'),\r\n        debounceTime(1000)\r\n      )\r\n      .subscribe(e => {\r\n        const event = e as OAuthInfoEvent;\r\n        if (\r\n          (listenTo == null || listenTo === 'any' || event.info === listenTo) &&\r\n          shouldRunSilentRefresh\r\n        ) {\r\n          // this.silentRefresh(params, noPrompt).catch(_ => {\r\n          this.refreshInternal(params, noPrompt).catch(_ => {\r\n            this.debug('Automatic silent refresh did not work');\r\n          });\r\n        }\r\n      });\r\n\r\n    this.restartRefreshTimerIfStillLoggedIn();\r\n  }\r\n\r\n  protected refreshInternal(\r\n    params,\r\n    noPrompt\r\n  ): Promise<TokenResponse | OAuthEvent> {\r\n    if (!this.useSilentRefresh && this.responseType === 'code') {\r\n      return this.refreshToken();\r\n    } else {\r\n      return this.silentRefresh(params, noPrompt);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convenience method that first calls `loadDiscoveryDocument(...)` and\r\n   * directly chains using the `then(...)` part of the promise to call\r\n   * the `tryLogin(...)` method.\r\n   *\r\n   * @param options LoginOptions to pass through to `tryLogin(...)`\r\n   */\r\n  public loadDiscoveryDocumentAndTryLogin(\r\n    options: LoginOptions = null\r\n  ): Promise<boolean> {\r\n    return this.loadDiscoveryDocument().then(doc => {\r\n      return this.tryLogin(options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Convenience method that first calls `loadDiscoveryDocumentAndTryLogin(...)`\r\n   * and if then chains to `initLoginFlow()`, but only if there is no valid\r\n   * IdToken or no valid AccessToken.\r\n   *\r\n   * @param options LoginOptions to pass through to `tryLogin(...)`\r\n   */\r\n  public loadDiscoveryDocumentAndLogin(\r\n    options: LoginOptions & { state?: string } = null\r\n  ): Promise<boolean> {\r\n    if (!options) {\r\n      options = { state: '' };\r\n    }\r\n    return this.loadDiscoveryDocumentAndTryLogin(options).then(_ => {\r\n      if (!this.hasValidIdToken() || !this.hasValidAccessToken()) {\r\n        if (this.responseType === 'code') {\r\n          this.initCodeFlow();\r\n        } else {\r\n          this.initImplicitFlow();\r\n        }\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  protected debug(...args): void {\r\n    if (this.showDebugInformation) {\r\n      this.logger.debug.apply(this.logger, args);\r\n    }\r\n  }\r\n\r\n  protected validateUrlFromDiscoveryDocument(url: string): string[] {\r\n    const errors: string[] = [];\r\n    const httpsCheck = this.validateUrlForHttps(url);\r\n    const issuerCheck = this.validateUrlAgainstIssuer(url);\r\n\r\n    if (!httpsCheck) {\r\n      errors.push(\r\n        'https for all urls required. Also for urls received by discovery.'\r\n      );\r\n    }\r\n\r\n    if (!issuerCheck) {\r\n      errors.push(\r\n        'Every url in discovery document has to start with the issuer url.' +\r\n          'Also see property strictDiscoveryDocumentValidation.'\r\n      );\r\n    }\r\n\r\n    return errors;\r\n  }\r\n\r\n  protected validateUrlForHttps(url: string): boolean {\r\n    if (!url) {\r\n      return true;\r\n    }\r\n\r\n    const lcUrl = url.toLowerCase();\r\n\r\n    if (this.requireHttps === false) {\r\n      return true;\r\n    }\r\n\r\n    if (\r\n      (lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/) ||\r\n        lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/)) &&\r\n      this.requireHttps === 'remoteOnly'\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return lcUrl.startsWith('https://');\r\n  }\r\n\r\n  protected assertUrlNotNullAndCorrectProtocol(\r\n    url: string | undefined,\r\n    description: string\r\n  ) {\r\n    if (!url) {\r\n      throw new Error(`'${description}' should not be null`);\r\n    }\r\n    if (!this.validateUrlForHttps(url)) {\r\n      throw new Error(\r\n        `'${description}' must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).`\r\n      );\r\n    }\r\n  }\r\n\r\n  protected validateUrlAgainstIssuer(url: string) {\r\n    if (!this.strictDiscoveryDocumentValidation) {\r\n      return true;\r\n    }\r\n    if (!url) {\r\n      return true;\r\n    }\r\n    return url.toLowerCase().startsWith(this.issuer.toLowerCase());\r\n  }\r\n\r\n  protected setupRefreshTimer(): void {\r\n    if (typeof window === 'undefined') {\r\n      this.debug('timer not supported on this plattform');\r\n      return;\r\n    }\r\n\r\n    if (this.hasValidIdToken() || this.hasValidAccessToken()) {\r\n      this.clearAccessTokenTimer();\r\n      this.clearIdTokenTimer();\r\n      this.setupExpirationTimers();\r\n    }\r\n\r\n    if (this.tokenReceivedSubscription)\r\n      this.tokenReceivedSubscription.unsubscribe();\r\n\r\n    this.tokenReceivedSubscription = this.events\r\n      .pipe(filter(e => e.type === 'token_received'))\r\n      .subscribe(_ => {\r\n        this.clearAccessTokenTimer();\r\n        this.clearIdTokenTimer();\r\n        this.setupExpirationTimers();\r\n      });\r\n  }\r\n\r\n  protected setupExpirationTimers(): void {\r\n    if (this.hasValidAccessToken()) {\r\n      this.setupAccessTokenTimer();\r\n    }\r\n\r\n    if (this.hasValidIdToken()) {\r\n      this.setupIdTokenTimer();\r\n    }\r\n  }\r\n\r\n  protected setupAccessTokenTimer(): void {\r\n    const expiration = this.getAccessTokenExpiration();\r\n    const storedAt = this.getAccessTokenStoredAt();\r\n    const timeout = this.calcTimeout(storedAt, expiration);\r\n\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.accessTokenTimeoutSubscription = of(\r\n        new OAuthInfoEvent('token_expires', 'access_token')\r\n      )\r\n        .pipe(delay(timeout))\r\n        .subscribe(e => {\r\n          this.ngZone.run(() => {\r\n            this.eventsSubject.next(e);\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  protected setupIdTokenTimer(): void {\r\n    const expiration = this.getIdTokenExpiration();\r\n    const storedAt = this.getIdTokenStoredAt();\r\n    const timeout = this.calcTimeout(storedAt, expiration);\r\n\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.idTokenTimeoutSubscription = of(\r\n        new OAuthInfoEvent('token_expires', 'id_token')\r\n      )\r\n        .pipe(delay(timeout))\r\n        .subscribe(e => {\r\n          this.ngZone.run(() => {\r\n            this.eventsSubject.next(e);\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Stops timers for automatic refresh.\r\n   * To restart it, call setupAutomaticSilentRefresh again.\r\n   */\r\n  public stopAutomaticRefresh() {\r\n    this.clearAccessTokenTimer();\r\n    this.clearIdTokenTimer();\r\n  }\r\n\r\n  protected clearAccessTokenTimer(): void {\r\n    if (this.accessTokenTimeoutSubscription) {\r\n      this.accessTokenTimeoutSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  protected clearIdTokenTimer(): void {\r\n    if (this.idTokenTimeoutSubscription) {\r\n      this.idTokenTimeoutSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  protected calcTimeout(storedAt: number, expiration: number): number {\r\n    const now = Date.now();\r\n    const delta =\r\n      (expiration - storedAt) * this.timeoutFactor - (now - storedAt);\r\n    return Math.max(0, delta);\r\n  }\r\n\r\n  /**\r\n   * DEPRECATED. Use a provider for OAuthStorage instead:\r\n   *\r\n   * { provide: OAuthStorage, useFactory: oAuthStorageFactory }\r\n   * export function oAuthStorageFactory(): OAuthStorage { return localStorage; }\r\n   * Sets a custom storage used to store the received\r\n   * tokens on client side. By default, the browser's\r\n   * sessionStorage is used.\r\n   * @ignore\r\n   *\r\n   * @param storage\r\n   */\r\n  public setStorage(storage: OAuthStorage): void {\r\n    this._storage = storage;\r\n    this.configChanged();\r\n  }\r\n\r\n  /**\r\n   * Loads the discovery document to configure most\r\n   * properties of this service. The url of the discovery\r\n   * document is infered from the issuer's url according\r\n   * to the OpenId Connect spec. To use another url you\r\n   * can pass it to to optional parameter fullUrl.\r\n   *\r\n   * @param fullUrl\r\n   */\r\n  public loadDiscoveryDocument(\r\n    fullUrl: string = null\r\n  ): Promise<OAuthSuccessEvent> {\r\n    return new Promise((resolve, reject) => {\r\n      if (!fullUrl) {\r\n        fullUrl = this.issuer || '';\r\n        if (!fullUrl.endsWith('/')) {\r\n          fullUrl += '/';\r\n        }\r\n        fullUrl += '.well-known/openid-configuration';\r\n      }\r\n\r\n      if (!this.validateUrlForHttps(fullUrl)) {\r\n        reject(\r\n          \"issuer  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\"\r\n        );\r\n        return;\r\n      }\r\n\r\n      this.http.get<OidcDiscoveryDoc>(fullUrl).subscribe(\r\n        doc => {\r\n          if (!this.validateDiscoveryDocument(doc)) {\r\n            this.eventsSubject.next(\r\n              new OAuthErrorEvent('discovery_document_validation_error', null)\r\n            );\r\n            reject('discovery_document_validation_error');\r\n            return;\r\n          }\r\n\r\n          this.loginUrl = doc.authorization_endpoint;\r\n          this.logoutUrl = doc.end_session_endpoint || this.logoutUrl;\r\n          this.grantTypesSupported = doc.grant_types_supported;\r\n          this.issuer = doc.issuer;\r\n          this.tokenEndpoint = doc.token_endpoint;\r\n          this.userinfoEndpoint =\r\n            doc.userinfo_endpoint || this.userinfoEndpoint;\r\n          this.jwksUri = doc.jwks_uri;\r\n          this.sessionCheckIFrameUrl =\r\n            doc.check_session_iframe || this.sessionCheckIFrameUrl;\r\n\r\n          this.discoveryDocumentLoaded = true;\r\n          this.discoveryDocumentLoadedSubject.next(doc);\r\n          this.revocationEndpoint = doc.revocation_endpoint;\r\n\r\n          if (this.sessionChecksEnabled) {\r\n            this.restartSessionChecksIfStillLoggedIn();\r\n          }\r\n\r\n          this.loadJwks()\r\n            .then(jwks => {\r\n              const result: object = {\r\n                discoveryDocument: doc,\r\n                jwks: jwks\r\n              };\r\n\r\n              const event = new OAuthSuccessEvent(\r\n                'discovery_document_loaded',\r\n                result\r\n              );\r\n              this.eventsSubject.next(event);\r\n              resolve(event);\r\n              return;\r\n            })\r\n            .catch(err => {\r\n              this.eventsSubject.next(\r\n                new OAuthErrorEvent('discovery_document_load_error', err)\r\n              );\r\n              reject(err);\r\n              return;\r\n            });\r\n        },\r\n        err => {\r\n          this.logger.error('error loading discovery document', err);\r\n          this.eventsSubject.next(\r\n            new OAuthErrorEvent('discovery_document_load_error', err)\r\n          );\r\n          reject(err);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  protected loadJwks(): Promise<object> {\r\n    return new Promise<object>((resolve, reject) => {\r\n      if (this.jwksUri) {\r\n        this.http.get(this.jwksUri).subscribe(\r\n          jwks => {\r\n            this.jwks = jwks;\r\n            this.eventsSubject.next(\r\n              new OAuthSuccessEvent('discovery_document_loaded')\r\n            );\r\n            resolve(jwks);\r\n          },\r\n          err => {\r\n            this.logger.error('error loading jwks', err);\r\n            this.eventsSubject.next(\r\n              new OAuthErrorEvent('jwks_load_error', err)\r\n            );\r\n            reject(err);\r\n          }\r\n        );\r\n      } else {\r\n        resolve(null);\r\n      }\r\n    });\r\n  }\r\n\r\n  protected validateDiscoveryDocument(doc: OidcDiscoveryDoc): boolean {\r\n    let errors: string[];\r\n\r\n    if (!this.skipIssuerCheck && doc.issuer !== this.issuer) {\r\n      this.logger.error(\r\n        'invalid issuer in discovery document',\r\n        'expected: ' + this.issuer,\r\n        'current: ' + doc.issuer\r\n      );\r\n      return false;\r\n    }\r\n\r\n    errors = this.validateUrlFromDiscoveryDocument(doc.authorization_endpoint);\r\n    if (errors.length > 0) {\r\n      this.logger.error(\r\n        'error validating authorization_endpoint in discovery document',\r\n        errors\r\n      );\r\n      return false;\r\n    }\r\n\r\n    errors = this.validateUrlFromDiscoveryDocument(doc.end_session_endpoint);\r\n    if (errors.length > 0) {\r\n      this.logger.error(\r\n        'error validating end_session_endpoint in discovery document',\r\n        errors\r\n      );\r\n      return false;\r\n    }\r\n\r\n    errors = this.validateUrlFromDiscoveryDocument(doc.token_endpoint);\r\n    if (errors.length > 0) {\r\n      this.logger.error(\r\n        'error validating token_endpoint in discovery document',\r\n        errors\r\n      );\r\n    }\r\n\r\n    errors = this.validateUrlFromDiscoveryDocument(doc.revocation_endpoint);\r\n    if (errors.length > 0) {\r\n      this.logger.error(\r\n        'error validating revocation_endpoint in discovery document',\r\n        errors\r\n      );\r\n    }\r\n\r\n    errors = this.validateUrlFromDiscoveryDocument(doc.userinfo_endpoint);\r\n    if (errors.length > 0) {\r\n      this.logger.error(\r\n        'error validating userinfo_endpoint in discovery document',\r\n        errors\r\n      );\r\n      return false;\r\n    }\r\n\r\n    errors = this.validateUrlFromDiscoveryDocument(doc.jwks_uri);\r\n    if (errors.length > 0) {\r\n      this.logger.error(\r\n        'error validating jwks_uri in discovery document',\r\n        errors\r\n      );\r\n      return false;\r\n    }\r\n\r\n    if (this.sessionChecksEnabled && !doc.check_session_iframe) {\r\n      this.logger.warn(\r\n        'sessionChecksEnabled is activated but discovery document' +\r\n          ' does not contain a check_session_iframe field'\r\n      );\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Uses password flow to exchange userName and password for an\r\n   * access_token. After receiving the access_token, this method\r\n   * uses it to query the userinfo endpoint in order to get information\r\n   * about the user in question.\r\n   *\r\n   * When using this, make sure that the property oidc is set to false.\r\n   * Otherwise stricter validations take place that make this operation\r\n   * fail.\r\n   *\r\n   * @param userName\r\n   * @param password\r\n   * @param headers Optional additional http-headers.\r\n   */\r\n  public fetchTokenUsingPasswordFlowAndLoadUserProfile(\r\n    userName: string,\r\n    password: string,\r\n    headers: HttpHeaders = new HttpHeaders()\r\n  ): Promise<UserInfo> {\r\n    return this.fetchTokenUsingPasswordFlow(\r\n      userName,\r\n      password,\r\n      headers\r\n    ).then(() => this.loadUserProfile());\r\n  }\r\n\r\n  /**\r\n   * Loads the user profile by accessing the user info endpoint defined by OpenId Connect.\r\n   *\r\n   * When using this with OAuth2 password flow, make sure that the property oidc is set to false.\r\n   * Otherwise stricter validations take place that make this operation fail.\r\n   */\r\n  public loadUserProfile(): Promise<UserInfo> {\r\n    if (!this.hasValidAccessToken()) {\r\n      throw new Error('Can not load User Profile without access_token');\r\n    }\r\n    if (!this.validateUrlForHttps(this.userinfoEndpoint)) {\r\n      throw new Error(\r\n        \"userinfoEndpoint must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\"\r\n      );\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const headers = new HttpHeaders().set(\r\n        'Authorization',\r\n        'Bearer ' + this.getAccessToken()\r\n      );\r\n\r\n      this.http\r\n        .get<UserInfo>(this.userinfoEndpoint, { headers })\r\n        .subscribe(\r\n          info => {\r\n            this.debug('userinfo received', info);\r\n\r\n            const existingClaims = this.getIdentityClaims() || {};\r\n\r\n            if (!this.skipSubjectCheck) {\r\n              if (\r\n                this.oidc &&\r\n                (!existingClaims['sub'] || info.sub !== existingClaims['sub'])\r\n              ) {\r\n                const err =\r\n                  'if property oidc is true, the received user-id (sub) has to be the user-id ' +\r\n                  'of the user that has logged in with oidc.\\n' +\r\n                  'if you are not using oidc but just oauth2 password flow set oidc to false';\r\n\r\n                reject(err);\r\n                return;\r\n              }\r\n            }\r\n\r\n            info = Object.assign({}, existingClaims, info);\r\n\r\n            this._storage.setItem('id_token_claims_obj', JSON.stringify(info));\r\n            this.eventsSubject.next(\r\n              new OAuthSuccessEvent('user_profile_loaded')\r\n            );\r\n            resolve(info);\r\n          },\r\n          err => {\r\n            this.logger.error('error loading user info', err);\r\n            this.eventsSubject.next(\r\n              new OAuthErrorEvent('user_profile_load_error', err)\r\n            );\r\n            reject(err);\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Uses password flow to exchange userName and password for an access_token.\r\n   * @param userName\r\n   * @param password\r\n   * @param headers Optional additional http-headers.\r\n   */\r\n  public fetchTokenUsingPasswordFlow(\r\n    userName: string,\r\n    password: string,\r\n    headers: HttpHeaders = new HttpHeaders()\r\n  ): Promise<TokenResponse> {\r\n    this.assertUrlNotNullAndCorrectProtocol(\r\n      this.tokenEndpoint,\r\n      'tokenEndpoint'\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      /**\r\n       * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\r\n       * serialize and parse URL parameter keys and values.\r\n       *\r\n       * @stable\r\n       */\r\n      let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() })\r\n        .set('grant_type', 'password')\r\n        .set('scope', this.scope)\r\n        .set('username', userName)\r\n        .set('password', password);\r\n\r\n      if (this.useHttpBasicAuth) {\r\n        const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n        headers = headers.set('Authorization', 'Basic ' + header);\r\n      }\r\n\r\n      if (!this.useHttpBasicAuth) {\r\n        params = params.set('client_id', this.clientId);\r\n      }\r\n\r\n      if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n        params = params.set('client_secret', this.dummyClientSecret);\r\n      }\r\n\r\n      if (this.customQueryParams) {\r\n        for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n          params = params.set(key, this.customQueryParams[key]);\r\n        }\r\n      }\r\n\r\n      headers = headers.set(\r\n        'Content-Type',\r\n        'application/x-www-form-urlencoded'\r\n      );\r\n\r\n      this.http\r\n        .post<TokenResponse>(this.tokenEndpoint, params, { headers })\r\n        .subscribe(\r\n          tokenResponse => {\r\n            this.debug('tokenResponse', tokenResponse);\r\n            this.storeAccessTokenResponse(\r\n              tokenResponse.access_token,\r\n              tokenResponse.refresh_token,\r\n              tokenResponse.expires_in ||\r\n                this.fallbackAccessTokenExpirationTimeInSec,\r\n              tokenResponse.scope,\r\n              this.extractRecognizedCustomParameters(tokenResponse)\r\n            );\r\n\r\n            this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n            resolve(tokenResponse);\r\n          },\r\n          err => {\r\n            this.logger.error('Error performing password flow', err);\r\n            this.eventsSubject.next(new OAuthErrorEvent('token_error', err));\r\n            reject(err);\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Refreshes the token using a refresh_token.\r\n   * This does not work for implicit flow, b/c\r\n   * there is no refresh_token in this flow.\r\n   * A solution for this is provided by the\r\n   * method silentRefresh.\r\n   */\r\n  public refreshToken(): Promise<TokenResponse> {\r\n    this.assertUrlNotNullAndCorrectProtocol(\r\n      this.tokenEndpoint,\r\n      'tokenEndpoint'\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      let params = new HttpParams()\r\n        .set('grant_type', 'refresh_token')\r\n        .set('scope', this.scope)\r\n        .set('refresh_token', this._storage.getItem('refresh_token'));\r\n\r\n      let headers = new HttpHeaders().set(\r\n        'Content-Type',\r\n        'application/x-www-form-urlencoded'\r\n      );\r\n\r\n      if (this.useHttpBasicAuth) {\r\n        const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n        headers = headers.set('Authorization', 'Basic ' + header);\r\n      }\r\n\r\n      if (!this.useHttpBasicAuth) {\r\n        params = params.set('client_id', this.clientId);\r\n      }\r\n\r\n      if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n        params = params.set('client_secret', this.dummyClientSecret);\r\n      }\r\n\r\n      if (this.customQueryParams) {\r\n        for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n          params = params.set(key, this.customQueryParams[key]);\r\n        }\r\n      }\r\n\r\n      this.http\r\n        .post<TokenResponse>(this.tokenEndpoint, params, { headers })\r\n        .pipe(\r\n          switchMap(tokenResponse => {\r\n            if (tokenResponse.id_token) {\r\n              return from(\r\n                this.processIdToken(\r\n                  tokenResponse.id_token,\r\n                  tokenResponse.access_token,\r\n                  true\r\n                )\r\n              ).pipe(\r\n                tap(result => this.storeIdToken(result)),\r\n                map(_ => tokenResponse)\r\n              );\r\n            } else {\r\n              return of(tokenResponse);\r\n            }\r\n          })\r\n        )\r\n        .subscribe(\r\n          tokenResponse => {\r\n            this.debug('refresh tokenResponse', tokenResponse);\r\n            this.storeAccessTokenResponse(\r\n              tokenResponse.access_token,\r\n              tokenResponse.refresh_token,\r\n              tokenResponse.expires_in ||\r\n                this.fallbackAccessTokenExpirationTimeInSec,\r\n              tokenResponse.scope,\r\n              this.extractRecognizedCustomParameters(tokenResponse)\r\n            );\r\n\r\n            this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n            this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\r\n            resolve(tokenResponse);\r\n          },\r\n          err => {\r\n            this.logger.error('Error refreshing token', err);\r\n            this.eventsSubject.next(\r\n              new OAuthErrorEvent('token_refresh_error', err)\r\n            );\r\n            reject(err);\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  protected removeSilentRefreshEventListener(): void {\r\n    if (this.silentRefreshPostMessageEventListener) {\r\n      window.removeEventListener(\r\n        'message',\r\n        this.silentRefreshPostMessageEventListener\r\n      );\r\n      this.silentRefreshPostMessageEventListener = null;\r\n    }\r\n  }\r\n\r\n  protected setupSilentRefreshEventListener(): void {\r\n    this.removeSilentRefreshEventListener();\r\n\r\n    this.silentRefreshPostMessageEventListener = (e: MessageEvent) => {\r\n      const message = this.processMessageEventMessage(e);\r\n\r\n      this.tryLogin({\r\n        customHashFragment: message,\r\n        preventClearHashAfterLogin: true,\r\n        customRedirectUri: this.silentRefreshRedirectUri || this.redirectUri\r\n      }).catch(err => this.debug('tryLogin during silent refresh failed', err));\r\n    };\r\n\r\n    window.addEventListener(\r\n      'message',\r\n      this.silentRefreshPostMessageEventListener\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Performs a silent refresh for implicit flow.\r\n   * Use this method to get new tokens when/before\r\n   * the existing tokens expire.\r\n   */\r\n  public silentRefresh(\r\n    params: object = {},\r\n    noPrompt = true\r\n  ): Promise<OAuthEvent> {\r\n    const claims: object = this.getIdentityClaims() || {};\r\n\r\n    if (this.useIdTokenHintForSilentRefresh && this.hasValidIdToken()) {\r\n      params['id_token_hint'] = this.getIdToken();\r\n    }\r\n\r\n    if (!this.validateUrlForHttps(this.loginUrl)) {\r\n      throw new Error(\r\n        \"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\"\r\n      );\r\n    }\r\n\r\n    if (typeof document === 'undefined') {\r\n      throw new Error('silent refresh is not supported on this platform');\r\n    }\r\n\r\n    const existingIframe = document.getElementById(\r\n      this.silentRefreshIFrameName\r\n    );\r\n\r\n    if (existingIframe) {\r\n      document.body.removeChild(existingIframe);\r\n    }\r\n\r\n    this.silentRefreshSubject = claims['sub'];\r\n\r\n    const iframe = document.createElement('iframe');\r\n    iframe.id = this.silentRefreshIFrameName;\r\n\r\n    this.setupSilentRefreshEventListener();\r\n\r\n    const redirectUri = this.silentRefreshRedirectUri || this.redirectUri;\r\n    this.createLoginUrl(null, null, redirectUri, noPrompt, params).then(url => {\r\n      iframe.setAttribute('src', url);\r\n\r\n      if (!this.silentRefreshShowIFrame) {\r\n        iframe.style['display'] = 'none';\r\n      }\r\n      document.body.appendChild(iframe);\r\n    });\r\n\r\n    const errors = this.events.pipe(\r\n      filter(e => e instanceof OAuthErrorEvent),\r\n      first()\r\n    );\r\n    const success = this.events.pipe(\r\n      filter(e => e.type === 'token_received'),\r\n      first()\r\n    );\r\n    const timeout = of(\r\n      new OAuthErrorEvent('silent_refresh_timeout', null)\r\n    ).pipe(delay(this.silentRefreshTimeout));\r\n\r\n    return race([errors, success, timeout])\r\n      .pipe(\r\n        map(e => {\r\n          if (e instanceof OAuthErrorEvent) {\r\n            if (e.type === 'silent_refresh_timeout') {\r\n              this.eventsSubject.next(e);\r\n            } else {\r\n              e = new OAuthErrorEvent('silent_refresh_error', e);\r\n              this.eventsSubject.next(e);\r\n            }\r\n            throw e;\r\n          } else if (e.type === 'token_received') {\r\n            e = new OAuthSuccessEvent('silently_refreshed');\r\n            this.eventsSubject.next(e);\r\n          }\r\n          return e;\r\n        })\r\n      )\r\n      .toPromise();\r\n  }\r\n\r\n  /**\r\n   * This method exists for backwards compatibility.\r\n   * {@link OAuthService#initLoginFlowInPopup} handles both code\r\n   * and implicit flows.\r\n   */\r\n  public initImplicitFlowInPopup(options?: {\r\n    height?: number;\r\n    width?: number;\r\n  }) {\r\n    return this.initLoginFlowInPopup(options);\r\n  }\r\n\r\n  public initLoginFlowInPopup(options?: { height?: number; width?: number }) {\r\n    options = options || {};\r\n    return this.createLoginUrl(\r\n      null,\r\n      null,\r\n      this.silentRefreshRedirectUri,\r\n      false,\r\n      {\r\n        display: 'popup'\r\n      }\r\n    ).then(url => {\r\n      return new Promise((resolve, reject) => {\r\n        /**\r\n         * Error handling section\r\n         */\r\n        const checkForPopupClosedInterval = 500;\r\n        let windowRef = window.open(\r\n          url,\r\n          '_blank',\r\n          this.calculatePopupFeatures(options)\r\n        );\r\n        let checkForPopupClosedTimer: any;\r\n        const checkForPopupClosed = () => {\r\n          if (!windowRef || windowRef.closed) {\r\n            cleanup();\r\n            reject(new OAuthErrorEvent('popup_closed', {}));\r\n          }\r\n        };\r\n        if (!windowRef) {\r\n          reject(new OAuthErrorEvent('popup_blocked', {}));\r\n        } else {\r\n          checkForPopupClosedTimer = window.setInterval(\r\n            checkForPopupClosed,\r\n            checkForPopupClosedInterval\r\n          );\r\n        }\r\n\r\n        const cleanup = () => {\r\n          window.clearInterval(checkForPopupClosedTimer);\r\n          window.removeEventListener('message', listener);\r\n          if (windowRef !== null) {\r\n            windowRef.close();\r\n          }\r\n          windowRef = null;\r\n        };\r\n\r\n        const listener = (e: MessageEvent) => {\r\n          const message = this.processMessageEventMessage(e);\r\n\r\n          if (message && message !== null) {\r\n            this.tryLogin({\r\n              customHashFragment: message,\r\n              preventClearHashAfterLogin: true,\r\n              customRedirectUri: this.silentRefreshRedirectUri\r\n            }).then(\r\n              () => {\r\n                cleanup();\r\n                resolve();\r\n              },\r\n              err => {\r\n                cleanup();\r\n                reject(err);\r\n              }\r\n            );\r\n          } else {\r\n            console.log('false event firing');\r\n          }\r\n        };\r\n\r\n        window.addEventListener('message', listener);\r\n      });\r\n    });\r\n  }\r\n\r\n  protected calculatePopupFeatures(options: {\r\n    height?: number;\r\n    width?: number;\r\n  }): string {\r\n    // Specify an static height and width and calculate centered position\r\n\r\n    const height = options.height || 470;\r\n    const width = options.width || 500;\r\n    const left = window.screenLeft + (window.outerWidth - width) / 2;\r\n    const top = window.screenTop + (window.outerHeight - height) / 2;\r\n    return `location=no,toolbar=no,width=${width},height=${height},top=${top},left=${left}`;\r\n  }\r\n\r\n  protected processMessageEventMessage(e: MessageEvent): string {\r\n    let expectedPrefix = '#';\r\n\r\n    if (this.silentRefreshMessagePrefix) {\r\n      expectedPrefix += this.silentRefreshMessagePrefix;\r\n    }\r\n\r\n    if (!e || !e.data || typeof e.data !== 'string') {\r\n      return;\r\n    }\r\n\r\n    const prefixedMessage: string = e.data;\r\n\r\n    if (!prefixedMessage.startsWith(expectedPrefix)) {\r\n      return;\r\n    }\r\n\r\n    return '#' + prefixedMessage.substr(expectedPrefix.length);\r\n  }\r\n\r\n  protected canPerformSessionCheck(): boolean {\r\n    if (!this.sessionChecksEnabled) {\r\n      return false;\r\n    }\r\n    if (!this.sessionCheckIFrameUrl) {\r\n      console.warn(\r\n        'sessionChecksEnabled is activated but there is no sessionCheckIFrameUrl'\r\n      );\r\n      return false;\r\n    }\r\n    const sessionState = this.getSessionState();\r\n    if (!sessionState) {\r\n      console.warn(\r\n        'sessionChecksEnabled is activated but there is no session_state'\r\n      );\r\n      return false;\r\n    }\r\n    if (typeof document === 'undefined') {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  protected setupSessionCheckEventListener(): void {\r\n    this.removeSessionCheckEventListener();\r\n\r\n    this.sessionCheckEventListener = (e: MessageEvent) => {\r\n      const origin = e.origin.toLowerCase();\r\n      const issuer = this.issuer.toLowerCase();\r\n\r\n      this.debug('sessionCheckEventListener');\r\n\r\n      if (!issuer.startsWith(origin)) {\r\n        this.debug(\r\n          'sessionCheckEventListener',\r\n          'wrong origin',\r\n          origin,\r\n          'expected',\r\n          issuer,\r\n          'event',\r\n          e\r\n        );\r\n\r\n        return;\r\n      }\r\n\r\n      // only run in Angular zone if it is 'changed' or 'error'\r\n      switch (e.data) {\r\n        case 'unchanged':\r\n          this.handleSessionUnchanged();\r\n          break;\r\n        case 'changed':\r\n          this.ngZone.run(() => {\r\n            this.handleSessionChange();\r\n          });\r\n          break;\r\n        case 'error':\r\n          this.ngZone.run(() => {\r\n            this.handleSessionError();\r\n          });\r\n          break;\r\n      }\r\n\r\n      this.debug('got info from session check inframe', e);\r\n    };\r\n\r\n    // prevent Angular from refreshing the view on every message (runs in intervals)\r\n    this.ngZone.runOutsideAngular(() => {\r\n      window.addEventListener('message', this.sessionCheckEventListener);\r\n    });\r\n  }\r\n\r\n  protected handleSessionUnchanged(): void {\r\n    this.debug('session check', 'session unchanged');\r\n  }\r\n\r\n  protected handleSessionChange(): void {\r\n    this.eventsSubject.next(new OAuthInfoEvent('session_changed'));\r\n    this.stopSessionCheckTimer();\r\n\r\n    if (!this.useSilentRefresh && this.responseType === 'code') {\r\n      this.refreshToken()\r\n        .then(_ => {\r\n          this.debug('token refresh after session change worked');\r\n        })\r\n        .catch(_ => {\r\n          this.debug('token refresh did not work after session changed');\r\n          this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\r\n          this.logOut(true);\r\n        });\r\n    } else if (this.silentRefreshRedirectUri) {\r\n      this.silentRefresh().catch(_ =>\r\n        this.debug('silent refresh failed after session changed')\r\n      );\r\n      this.waitForSilentRefreshAfterSessionChange();\r\n    } else {\r\n      this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\r\n      this.logOut(true);\r\n    }\r\n  }\r\n\r\n  protected waitForSilentRefreshAfterSessionChange(): void {\r\n    this.events\r\n      .pipe(\r\n        filter(\r\n          (e: OAuthEvent) =>\r\n            e.type === 'silently_refreshed' ||\r\n            e.type === 'silent_refresh_timeout' ||\r\n            e.type === 'silent_refresh_error'\r\n        ),\r\n        first()\r\n      )\r\n      .subscribe(e => {\r\n        if (e.type !== 'silently_refreshed') {\r\n          this.debug('silent refresh did not work after session changed');\r\n          this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\r\n          this.logOut(true);\r\n        }\r\n      });\r\n  }\r\n\r\n  protected handleSessionError(): void {\r\n    this.stopSessionCheckTimer();\r\n    this.eventsSubject.next(new OAuthInfoEvent('session_error'));\r\n  }\r\n\r\n  protected removeSessionCheckEventListener(): void {\r\n    if (this.sessionCheckEventListener) {\r\n      window.removeEventListener('message', this.sessionCheckEventListener);\r\n      this.sessionCheckEventListener = null;\r\n    }\r\n  }\r\n\r\n  protected initSessionCheck(): void {\r\n    if (!this.canPerformSessionCheck()) {\r\n      return;\r\n    }\r\n\r\n    const existingIframe = document.getElementById(this.sessionCheckIFrameName);\r\n    if (existingIframe) {\r\n      document.body.removeChild(existingIframe);\r\n    }\r\n\r\n    const iframe = document.createElement('iframe');\r\n    iframe.id = this.sessionCheckIFrameName;\r\n\r\n    this.setupSessionCheckEventListener();\r\n\r\n    const url = this.sessionCheckIFrameUrl;\r\n    iframe.setAttribute('src', url);\r\n    iframe.style.display = 'none';\r\n    document.body.appendChild(iframe);\r\n\r\n    this.startSessionCheckTimer();\r\n  }\r\n\r\n  protected startSessionCheckTimer(): void {\r\n    this.stopSessionCheckTimer();\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.sessionCheckTimer = setInterval(\r\n        this.checkSession.bind(this),\r\n        this.sessionCheckIntervall\r\n      );\r\n    });\r\n  }\r\n\r\n  protected stopSessionCheckTimer(): void {\r\n    if (this.sessionCheckTimer) {\r\n      clearInterval(this.sessionCheckTimer);\r\n      this.sessionCheckTimer = null;\r\n    }\r\n  }\r\n\r\n  public checkSession(): void {\r\n    const iframe: any = document.getElementById(this.sessionCheckIFrameName);\r\n\r\n    if (!iframe) {\r\n      this.logger.warn(\r\n        'checkSession did not find iframe',\r\n        this.sessionCheckIFrameName\r\n      );\r\n    }\r\n\r\n    const sessionState = this.getSessionState();\r\n\r\n    if (!sessionState) {\r\n      this.stopSessionCheckTimer();\r\n    }\r\n\r\n    const message = this.clientId + ' ' + sessionState;\r\n    iframe.contentWindow.postMessage(message, this.issuer);\r\n  }\r\n\r\n  protected async createLoginUrl(\r\n    state = '',\r\n    loginHint = '',\r\n    customRedirectUri = '',\r\n    noPrompt = false,\r\n    params: object = {}\r\n  ): Promise<string> {\r\n    const that = this;\r\n\r\n    let redirectUri: string;\r\n\r\n    if (customRedirectUri) {\r\n      redirectUri = customRedirectUri;\r\n    } else {\r\n      redirectUri = this.redirectUri;\r\n    }\r\n\r\n    const nonce = await this.createAndSaveNonce();\r\n\r\n    if (state) {\r\n      state =\r\n        nonce + this.config.nonceStateSeparator + encodeURIComponent(state);\r\n    } else {\r\n      state = nonce;\r\n    }\r\n\r\n    if (!this.requestAccessToken && !this.oidc) {\r\n      throw new Error('Either requestAccessToken or oidc or both must be true');\r\n    }\r\n\r\n    if (this.config.responseType) {\r\n      this.responseType = this.config.responseType;\r\n    } else {\r\n      if (this.oidc && this.requestAccessToken) {\r\n        this.responseType = 'id_token token';\r\n      } else if (this.oidc && !this.requestAccessToken) {\r\n        this.responseType = 'id_token';\r\n      } else {\r\n        this.responseType = 'token';\r\n      }\r\n    }\r\n\r\n    const seperationChar = that.loginUrl.indexOf('?') > -1 ? '&' : '?';\r\n\r\n    let scope = that.scope;\r\n\r\n    if (this.oidc && !scope.match(/(^|\\s)openid($|\\s)/)) {\r\n      scope = 'openid ' + scope;\r\n    }\r\n\r\n    let url =\r\n      that.loginUrl +\r\n      seperationChar +\r\n      'response_type=' +\r\n      encodeURIComponent(that.responseType) +\r\n      '&client_id=' +\r\n      encodeURIComponent(that.clientId) +\r\n      '&state=' +\r\n      encodeURIComponent(state) +\r\n      '&redirect_uri=' +\r\n      encodeURIComponent(redirectUri) +\r\n      '&scope=' +\r\n      encodeURIComponent(scope);\r\n\r\n    if (this.responseType === 'code' && !this.disablePKCE) {\r\n      const [\r\n        challenge,\r\n        verifier\r\n      ] = await this.createChallangeVerifierPairForPKCE();\r\n\r\n      if (\r\n        this.saveNoncesInLocalStorage &&\r\n        typeof window['localStorage'] !== 'undefined'\r\n      ) {\r\n        localStorage.setItem('PKCI_verifier', verifier);\r\n      } else {\r\n        this._storage.setItem('PKCI_verifier', verifier);\r\n      }\r\n\r\n      url += '&code_challenge=' + challenge;\r\n      url += '&code_challenge_method=S256';\r\n    }\r\n\r\n    if (loginHint) {\r\n      url += '&login_hint=' + encodeURIComponent(loginHint);\r\n    }\r\n\r\n    if (that.resource) {\r\n      url += '&resource=' + encodeURIComponent(that.resource);\r\n    }\r\n\r\n    if (that.oidc) {\r\n      url += '&nonce=' + encodeURIComponent(nonce);\r\n    }\r\n\r\n    if (noPrompt) {\r\n      url += '&prompt=none';\r\n    }\r\n\r\n    for (const key of Object.keys(params)) {\r\n      url +=\r\n        '&' + encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n    }\r\n\r\n    if (this.customQueryParams) {\r\n      for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n        url +=\r\n          '&' + key + '=' + encodeURIComponent(this.customQueryParams[key]);\r\n      }\r\n    }\r\n\r\n    return url;\r\n  }\r\n\r\n  initImplicitFlowInternal(\r\n    additionalState = '',\r\n    params: string | object = ''\r\n  ): void {\r\n    if (this.inImplicitFlow) {\r\n      return;\r\n    }\r\n\r\n    this.inImplicitFlow = true;\r\n\r\n    if (!this.validateUrlForHttps(this.loginUrl)) {\r\n      throw new Error(\r\n        \"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\"\r\n      );\r\n    }\r\n\r\n    let addParams: object = {};\r\n    let loginHint: string = null;\r\n\r\n    if (typeof params === 'string') {\r\n      loginHint = params;\r\n    } else if (typeof params === 'object') {\r\n      addParams = params;\r\n    }\r\n\r\n    this.createLoginUrl(additionalState, loginHint, null, false, addParams)\r\n      .then(this.config.openUri)\r\n      .catch(error => {\r\n        console.error('Error in initImplicitFlow', error);\r\n        this.inImplicitFlow = false;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Starts the implicit flow and redirects to user to\r\n   * the auth servers' login url.\r\n   *\r\n   * @param additionalState Optional state that is passed around.\r\n   *  You'll find this state in the property `state` after `tryLogin` logged in the user.\r\n   * @param params Hash with additional parameter. If it is a string, it is used for the\r\n   *               parameter loginHint (for the sake of compatibility with former versions)\r\n   */\r\n  public initImplicitFlow(\r\n    additionalState = '',\r\n    params: string | object = ''\r\n  ): void {\r\n    if (this.loginUrl !== '') {\r\n      this.initImplicitFlowInternal(additionalState, params);\r\n    } else {\r\n      this.events\r\n        .pipe(filter(e => e.type === 'discovery_document_loaded'))\r\n        .subscribe(_ => this.initImplicitFlowInternal(additionalState, params));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset current implicit flow\r\n   *\r\n   * @description This method allows resetting the current implict flow in order to be initialized again.\r\n   */\r\n  public resetImplicitFlow(): void {\r\n    this.inImplicitFlow = false;\r\n  }\r\n\r\n  protected callOnTokenReceivedIfExists(options: LoginOptions): void {\r\n    const that = this;\r\n    if (options.onTokenReceived) {\r\n      const tokenParams = {\r\n        idClaims: that.getIdentityClaims(),\r\n        idToken: that.getIdToken(),\r\n        accessToken: that.getAccessToken(),\r\n        state: that.state\r\n      };\r\n      options.onTokenReceived(tokenParams);\r\n    }\r\n  }\r\n\r\n  protected storeAccessTokenResponse(\r\n    accessToken: string,\r\n    refreshToken: string,\r\n    expiresIn: number,\r\n    grantedScopes: String,\r\n    customParameters?: Map<string, string>\r\n  ): void {\r\n    this._storage.setItem('access_token', accessToken);\r\n    if (grantedScopes && !Array.isArray(grantedScopes)) {\r\n      this._storage.setItem(\r\n        'granted_scopes',\r\n        JSON.stringify(grantedScopes.split('+'))\r\n      );\r\n    } else if (grantedScopes && Array.isArray(grantedScopes)) {\r\n      this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes));\r\n    }\r\n\r\n    this._storage.setItem('access_token_stored_at', '' + Date.now());\r\n    if (expiresIn) {\r\n      const expiresInMilliSeconds = expiresIn * 1000;\r\n      const now = new Date();\r\n      const expiresAt = now.getTime() + expiresInMilliSeconds;\r\n      this._storage.setItem('expires_at', '' + expiresAt);\r\n    }\r\n\r\n    if (refreshToken) {\r\n      this._storage.setItem('refresh_token', refreshToken);\r\n    }\r\n    if (customParameters) {\r\n      customParameters.forEach((value: string, key: string) => {\r\n        this._storage.setItem(key, value);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delegates to tryLoginImplicitFlow for the sake of competability\r\n   * @param options Optional options.\r\n   */\r\n  public tryLogin(options: LoginOptions = null): Promise<boolean> {\r\n    if (this.config.responseType === 'code') {\r\n      return this.tryLoginCodeFlow(options).then(_ => true);\r\n    } else {\r\n      return this.tryLoginImplicitFlow(options);\r\n    }\r\n  }\r\n\r\n  private parseQueryString(queryString: string): object {\r\n    if (!queryString || queryString.length === 0) {\r\n      return {};\r\n    }\r\n\r\n    if (queryString.charAt(0) === '?') {\r\n      queryString = queryString.substr(1);\r\n    }\r\n\r\n    return this.urlHelper.parseQueryString(queryString);\r\n  }\r\n\r\n  public tryLoginCodeFlow(options: LoginOptions = null): Promise<void> {\r\n    options = options || {};\r\n\r\n    const querySource = options.customHashFragment\r\n      ? options.customHashFragment.substring(1)\r\n      : window.location.search;\r\n\r\n    const parts = this.getCodePartsFromUrl(querySource);\r\n\r\n    const code = parts['code'];\r\n    const state = parts['state'];\r\n\r\n    const sessionState = parts['session_state'];\r\n\r\n    if (!options.preventClearHashAfterLogin) {\r\n      const href = location.href\r\n        .replace(/[&\\?]code=[^&\\$]*/, '')\r\n        .replace(/[&\\?]scope=[^&\\$]*/, '')\r\n        .replace(/[&\\?]state=[^&\\$]*/, '')\r\n        .replace(/[&\\?]session_state=[^&\\$]*/, '');\r\n\r\n      history.replaceState(null, window.name, href);\r\n    }\r\n\r\n    let [nonceInState, userState] = this.parseState(state);\r\n    this.state = userState;\r\n\r\n    if (parts['error']) {\r\n      this.debug('error trying to login');\r\n      this.handleLoginError({}, parts);\r\n      const err = new OAuthErrorEvent('code_error', {}, parts);\r\n      this.eventsSubject.next(err);\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    if (!nonceInState) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    const success = this.validateNonce(nonceInState);\r\n    if (!success) {\r\n      const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\r\n      this.eventsSubject.next(event);\r\n      return Promise.reject(event);\r\n    }\r\n\r\n    this.storeSessionState(sessionState);\r\n\r\n    if (code) {\r\n      return this.getTokenFromCode(code, options).then(_ => null);\r\n    } else {\r\n      return Promise.resolve();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retrieve the returned auth code from the redirect uri that has been called.\r\n   * If required also check hash, as we could use hash location strategy.\r\n   */\r\n  private getCodePartsFromUrl(queryString: string): object {\r\n    if (!queryString || queryString.length === 0) {\r\n      return this.urlHelper.getHashFragmentParams();\r\n    }\r\n\r\n    // normalize query string\r\n    if (queryString.charAt(0) === '?') {\r\n      queryString = queryString.substr(1);\r\n    }\r\n\r\n    return this.urlHelper.parseQueryString(queryString);\r\n  }\r\n\r\n  /**\r\n   * Get token using an intermediate code. Works for the Authorization Code flow.\r\n   */\r\n  private getTokenFromCode(\r\n    code: string,\r\n    options: LoginOptions\r\n  ): Promise<object> {\r\n    let params = new HttpParams()\r\n      .set('grant_type', 'authorization_code')\r\n      .set('code', code)\r\n      .set('redirect_uri', options.customRedirectUri || this.redirectUri);\r\n\r\n    if (!this.disablePKCE) {\r\n      let pkciVerifier;\r\n\r\n      if (\r\n        this.saveNoncesInLocalStorage &&\r\n        typeof window['localStorage'] !== 'undefined'\r\n      ) {\r\n        pkciVerifier = localStorage.getItem('PKCI_verifier');\r\n      } else {\r\n        pkciVerifier = this._storage.getItem('PKCI_verifier');\r\n      }\r\n\r\n      if (!pkciVerifier) {\r\n        console.warn('No PKCI verifier found in oauth storage!');\r\n      } else {\r\n        params = params.set('code_verifier', pkciVerifier);\r\n      }\r\n    }\r\n\r\n    return this.fetchAndProcessToken(params);\r\n  }\r\n\r\n  private fetchAndProcessToken(params: HttpParams): Promise<TokenResponse> {\r\n    this.assertUrlNotNullAndCorrectProtocol(\r\n      this.tokenEndpoint,\r\n      'tokenEndpoint'\r\n    );\r\n    let headers = new HttpHeaders().set(\r\n      'Content-Type',\r\n      'application/x-www-form-urlencoded'\r\n    );\r\n\r\n    if (this.useHttpBasicAuth) {\r\n      const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n      headers = headers.set('Authorization', 'Basic ' + header);\r\n    }\r\n\r\n    if (!this.useHttpBasicAuth) {\r\n      params = params.set('client_id', this.clientId);\r\n    }\r\n\r\n    if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n      params = params.set('client_secret', this.dummyClientSecret);\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      if (this.customQueryParams) {\r\n        for (let key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n          params = params.set(key, this.customQueryParams[key]);\r\n        }\r\n      }\r\n\r\n      this.http\r\n        .post<TokenResponse>(this.tokenEndpoint, params, { headers })\r\n        .subscribe(\r\n          tokenResponse => {\r\n            this.debug('refresh tokenResponse', tokenResponse);\r\n            this.storeAccessTokenResponse(\r\n              tokenResponse.access_token,\r\n              tokenResponse.refresh_token,\r\n              tokenResponse.expires_in ||\r\n                this.fallbackAccessTokenExpirationTimeInSec,\r\n              tokenResponse.scope,\r\n              this.extractRecognizedCustomParameters(tokenResponse)\r\n            );\r\n\r\n            if (this.oidc && tokenResponse.id_token) {\r\n              this.processIdToken(\r\n                tokenResponse.id_token,\r\n                tokenResponse.access_token\r\n              )\r\n                .then(result => {\r\n                  this.storeIdToken(result);\r\n\r\n                  this.eventsSubject.next(\r\n                    new OAuthSuccessEvent('token_received')\r\n                  );\r\n                  this.eventsSubject.next(\r\n                    new OAuthSuccessEvent('token_refreshed')\r\n                  );\r\n\r\n                  resolve(tokenResponse);\r\n                })\r\n                .catch(reason => {\r\n                  this.eventsSubject.next(\r\n                    new OAuthErrorEvent('token_validation_error', reason)\r\n                  );\r\n                  console.error('Error validating tokens');\r\n                  console.error(reason);\r\n\r\n                  reject(reason);\r\n                });\r\n            } else {\r\n              this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n              this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\r\n\r\n              resolve(tokenResponse);\r\n            }\r\n          },\r\n          err => {\r\n            console.error('Error getting token', err);\r\n            this.eventsSubject.next(\r\n              new OAuthErrorEvent('token_refresh_error', err)\r\n            );\r\n            reject(err);\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Checks whether there are tokens in the hash fragment\r\n   * as a result of the implicit flow. These tokens are\r\n   * parsed, validated and used to sign the user in to the\r\n   * current client.\r\n   *\r\n   * @param options Optional options.\r\n   */\r\n  public tryLoginImplicitFlow(options: LoginOptions = null): Promise<boolean> {\r\n    options = options || {};\r\n\r\n    let parts: object;\r\n\r\n    if (options.customHashFragment) {\r\n      parts = this.urlHelper.getHashFragmentParams(options.customHashFragment);\r\n    } else {\r\n      parts = this.urlHelper.getHashFragmentParams();\r\n    }\r\n\r\n    this.debug('parsed url', parts);\r\n\r\n    const state = parts['state'];\r\n\r\n    let [nonceInState, userState] = this.parseState(state);\r\n    this.state = userState;\r\n\r\n    if (parts['error']) {\r\n      this.debug('error trying to login');\r\n      this.handleLoginError(options, parts);\r\n      const err = new OAuthErrorEvent('token_error', {}, parts);\r\n      this.eventsSubject.next(err);\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    const accessToken = parts['access_token'];\r\n    const idToken = parts['id_token'];\r\n    const sessionState = parts['session_state'];\r\n    const grantedScopes = parts['scope'];\r\n\r\n    if (!this.requestAccessToken && !this.oidc) {\r\n      return Promise.reject(\r\n        'Either requestAccessToken or oidc (or both) must be true.'\r\n      );\r\n    }\r\n\r\n    if (this.requestAccessToken && !accessToken) {\r\n      return Promise.resolve(false);\r\n    }\r\n    if (this.requestAccessToken && !options.disableOAuth2StateCheck && !state) {\r\n      return Promise.resolve(false);\r\n    }\r\n    if (this.oidc && !idToken) {\r\n      return Promise.resolve(false);\r\n    }\r\n\r\n    if (this.sessionChecksEnabled && !sessionState) {\r\n      this.logger.warn(\r\n        'session checks (Session Status Change Notification) ' +\r\n          'were activated in the configuration but the id_token ' +\r\n          'does not contain a session_state claim'\r\n      );\r\n    }\r\n\r\n    if (this.requestAccessToken && !options.disableOAuth2StateCheck) {\r\n      const success = this.validateNonce(nonceInState);\r\n\r\n      if (!success) {\r\n        const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\r\n        this.eventsSubject.next(event);\r\n        return Promise.reject(event);\r\n      }\r\n    }\r\n\r\n    if (this.requestAccessToken) {\r\n      this.storeAccessTokenResponse(\r\n        accessToken,\r\n        null,\r\n        parts['expires_in'] || this.fallbackAccessTokenExpirationTimeInSec,\r\n        grantedScopes\r\n      );\r\n    }\r\n\r\n    if (!this.oidc) {\r\n      this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n      if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\r\n        location.hash = '';\r\n      }\r\n\r\n      this.callOnTokenReceivedIfExists(options);\r\n      return Promise.resolve(true);\r\n    }\r\n\r\n    return this.processIdToken(idToken, accessToken)\r\n      .then(result => {\r\n        if (options.validationHandler) {\r\n          return options\r\n            .validationHandler({\r\n              accessToken: accessToken,\r\n              idClaims: result.idTokenClaims,\r\n              idToken: result.idToken,\r\n              state: state\r\n            })\r\n            .then(_ => result);\r\n        }\r\n        return result;\r\n      })\r\n      .then(result => {\r\n        this.storeIdToken(result);\r\n        this.storeSessionState(sessionState);\r\n        if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\r\n          location.hash = '';\r\n        }\r\n        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n        this.callOnTokenReceivedIfExists(options);\r\n        this.inImplicitFlow = false;\r\n        return true;\r\n      })\r\n      .catch(reason => {\r\n        this.eventsSubject.next(\r\n          new OAuthErrorEvent('token_validation_error', reason)\r\n        );\r\n        this.logger.error('Error validating tokens');\r\n        this.logger.error(reason);\r\n        return Promise.reject(reason);\r\n      });\r\n  }\r\n\r\n  private parseState(state: string): [string, string] {\r\n    let nonce = state;\r\n    let userState = '';\r\n\r\n    if (state) {\r\n      const idx = state.indexOf(this.config.nonceStateSeparator);\r\n      if (idx > -1) {\r\n        nonce = state.substr(0, idx);\r\n        userState = state.substr(idx + this.config.nonceStateSeparator.length);\r\n      }\r\n    }\r\n    return [nonce, userState];\r\n  }\r\n\r\n  protected validateNonce(nonceInState: string): boolean {\r\n    let savedNonce;\r\n\r\n    if (\r\n      this.saveNoncesInLocalStorage &&\r\n      typeof window['localStorage'] !== 'undefined'\r\n    ) {\r\n      savedNonce = localStorage.getItem('nonce');\r\n    } else {\r\n      savedNonce = this._storage.getItem('nonce');\r\n    }\r\n\r\n    if (savedNonce !== nonceInState) {\r\n      const err = 'Validating access_token failed, wrong state/nonce.';\r\n      console.error(err, savedNonce, nonceInState);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  protected storeIdToken(idToken: ParsedIdToken): void {\r\n    this._storage.setItem('id_token', idToken.idToken);\r\n    this._storage.setItem('id_token_claims_obj', idToken.idTokenClaimsJson);\r\n    this._storage.setItem('id_token_expires_at', '' + idToken.idTokenExpiresAt);\r\n    this._storage.setItem('id_token_stored_at', '' + Date.now());\r\n  }\r\n\r\n  protected storeSessionState(sessionState: string): void {\r\n    this._storage.setItem('session_state', sessionState);\r\n  }\r\n\r\n  protected getSessionState(): string {\r\n    return this._storage.getItem('session_state');\r\n  }\r\n\r\n  protected handleLoginError(options: LoginOptions, parts: object): void {\r\n    if (options.onLoginError) {\r\n      options.onLoginError(parts);\r\n    }\r\n    if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\r\n      location.hash = '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  public processIdToken(\r\n    idToken: string,\r\n    accessToken: string,\r\n    skipNonceCheck = false\r\n  ): Promise<ParsedIdToken> {\r\n    const tokenParts = idToken.split('.');\r\n    const headerBase64 = this.padBase64(tokenParts[0]);\r\n    const headerJson = b64DecodeUnicode(headerBase64);\r\n    const header = JSON.parse(headerJson);\r\n    const claimsBase64 = this.padBase64(tokenParts[1]);\r\n    const claimsJson = b64DecodeUnicode(claimsBase64);\r\n    const claims = JSON.parse(claimsJson);\r\n\r\n    let savedNonce;\r\n    if (\r\n      this.saveNoncesInLocalStorage &&\r\n      typeof window['localStorage'] !== 'undefined'\r\n    ) {\r\n      savedNonce = localStorage.getItem('nonce');\r\n    } else {\r\n      savedNonce = this._storage.getItem('nonce');\r\n    }\r\n\r\n    if (Array.isArray(claims.aud)) {\r\n      if (claims.aud.every(v => v !== this.clientId)) {\r\n        const err = 'Wrong audience: ' + claims.aud.join(',');\r\n        this.logger.warn(err);\r\n        return Promise.reject(err);\r\n      }\r\n    } else {\r\n      if (claims.aud !== this.clientId) {\r\n        const err = 'Wrong audience: ' + claims.aud;\r\n        this.logger.warn(err);\r\n        return Promise.reject(err);\r\n      }\r\n    }\r\n\r\n    if (!claims.sub) {\r\n      const err = 'No sub claim in id_token';\r\n      this.logger.warn(err);\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    /* For now, we only check whether the sub against\r\n     * silentRefreshSubject when sessionChecksEnabled is on\r\n     * We will reconsider in a later version to do this\r\n     * in every other case too.\r\n     */\r\n    if (\r\n      this.sessionChecksEnabled &&\r\n      this.silentRefreshSubject &&\r\n      this.silentRefreshSubject !== claims['sub']\r\n    ) {\r\n      const err =\r\n        'After refreshing, we got an id_token for another user (sub). ' +\r\n        `Expected sub: ${this.silentRefreshSubject}, received sub: ${claims['sub']}`;\r\n\r\n      this.logger.warn(err);\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    if (!claims.iat) {\r\n      const err = 'No iat claim in id_token';\r\n      this.logger.warn(err);\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    if (!this.skipIssuerCheck && claims.iss !== this.issuer) {\r\n      const err = 'Wrong issuer: ' + claims.iss;\r\n      this.logger.warn(err);\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    if (!skipNonceCheck && claims.nonce !== savedNonce) {\r\n      const err = 'Wrong nonce: ' + claims.nonce;\r\n      this.logger.warn(err);\r\n      return Promise.reject(err);\r\n    }\r\n    // at_hash is not applicable to authorization code flow\r\n    // addressing https://github.com/manfredsteyer/angular-oauth2-oidc/issues/661\r\n    // i.e. Based on spec the at_hash check is only true for implicit code flow on Ping Federate\r\n    // https://www.pingidentity.com/developer/en/resources/openid-connect-developers-guide.html\r\n    if (this.hasOwnProperty('responseType') && this.responseType === 'code') {\r\n      this.disableAtHashCheck = true;\r\n    }\r\n    if (\r\n      !this.disableAtHashCheck &&\r\n      this.requestAccessToken &&\r\n      !claims['at_hash']\r\n    ) {\r\n      const err = 'An at_hash is needed!';\r\n      this.logger.warn(err);\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    const now = Date.now();\r\n    const issuedAtMSec = claims.iat * 1000;\r\n    const expiresAtMSec = claims.exp * 1000;\r\n    const clockSkewInMSec = (this.clockSkewInSec || 600) * 1000;\r\n\r\n    if (\r\n      issuedAtMSec - clockSkewInMSec >= now ||\r\n      expiresAtMSec + clockSkewInMSec <= now\r\n    ) {\r\n      const err = 'Token has expired';\r\n      console.error(err);\r\n      console.error({\r\n        now: now,\r\n        issuedAtMSec: issuedAtMSec,\r\n        expiresAtMSec: expiresAtMSec\r\n      });\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    const validationParams: ValidationParams = {\r\n      accessToken: accessToken,\r\n      idToken: idToken,\r\n      jwks: this.jwks,\r\n      idTokenClaims: claims,\r\n      idTokenHeader: header,\r\n      loadKeys: () => this.loadJwks()\r\n    };\r\n\r\n    if (this.disableAtHashCheck) {\r\n      return this.checkSignature(validationParams).then(_ => {\r\n        const result: ParsedIdToken = {\r\n          idToken: idToken,\r\n          idTokenClaims: claims,\r\n          idTokenClaimsJson: claimsJson,\r\n          idTokenHeader: header,\r\n          idTokenHeaderJson: headerJson,\r\n          idTokenExpiresAt: expiresAtMSec\r\n        };\r\n        return result;\r\n      });\r\n    }\r\n\r\n    return this.checkAtHash(validationParams).then(atHashValid => {\r\n      if (!this.disableAtHashCheck && this.requestAccessToken && !atHashValid) {\r\n        const err = 'Wrong at_hash';\r\n        this.logger.warn(err);\r\n        return Promise.reject(err);\r\n      }\r\n\r\n      return this.checkSignature(validationParams).then(_ => {\r\n        const atHashCheckEnabled = !this.disableAtHashCheck;\r\n        const result: ParsedIdToken = {\r\n          idToken: idToken,\r\n          idTokenClaims: claims,\r\n          idTokenClaimsJson: claimsJson,\r\n          idTokenHeader: header,\r\n          idTokenHeaderJson: headerJson,\r\n          idTokenExpiresAt: expiresAtMSec\r\n        };\r\n        if (atHashCheckEnabled) {\r\n          return this.checkAtHash(validationParams).then(atHashValid => {\r\n            if (this.requestAccessToken && !atHashValid) {\r\n              const err = 'Wrong at_hash';\r\n              this.logger.warn(err);\r\n              return Promise.reject(err);\r\n            } else {\r\n              return result;\r\n            }\r\n          });\r\n        } else {\r\n          return result;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns the received claims about the user.\r\n   */\r\n  public getIdentityClaims(): object {\r\n    const claims = this._storage.getItem('id_token_claims_obj');\r\n    if (!claims) {\r\n      return null;\r\n    }\r\n    return JSON.parse(claims);\r\n  }\r\n\r\n  /**\r\n   * Returns the granted scopes from the server.\r\n   */\r\n  public getGrantedScopes(): object {\r\n    const scopes = this._storage.getItem('granted_scopes');\r\n    if (!scopes) {\r\n      return null;\r\n    }\r\n    return JSON.parse(scopes);\r\n  }\r\n\r\n  /**\r\n   * Returns the current id_token.\r\n   */\r\n  public getIdToken(): string {\r\n    return this._storage ? this._storage.getItem('id_token') : null;\r\n  }\r\n\r\n  protected padBase64(base64data): string {\r\n    while (base64data.length % 4 !== 0) {\r\n      base64data += '=';\r\n    }\r\n    return base64data;\r\n  }\r\n\r\n  /**\r\n   * Returns the current access_token.\r\n   */\r\n  public getAccessToken(): string {\r\n    return this._storage ? this._storage.getItem('access_token') : null;\r\n  }\r\n\r\n  public getRefreshToken(): string {\r\n    return this._storage ? this._storage.getItem('refresh_token') : null;\r\n  }\r\n\r\n  /**\r\n   * Returns the expiration date of the access_token\r\n   * as milliseconds since 1970.\r\n   */\r\n  public getAccessTokenExpiration(): number {\r\n    if (!this._storage.getItem('expires_at')) {\r\n      return null;\r\n    }\r\n    return parseInt(this._storage.getItem('expires_at'), 10);\r\n  }\r\n\r\n  protected getAccessTokenStoredAt(): number {\r\n    return parseInt(this._storage.getItem('access_token_stored_at'), 10);\r\n  }\r\n\r\n  protected getIdTokenStoredAt(): number {\r\n    return parseInt(this._storage.getItem('id_token_stored_at'), 10);\r\n  }\r\n\r\n  /**\r\n   * Returns the expiration date of the id_token\r\n   * as milliseconds since 1970.\r\n   */\r\n  public getIdTokenExpiration(): number {\r\n    if (!this._storage.getItem('id_token_expires_at')) {\r\n      return null;\r\n    }\r\n\r\n    return parseInt(this._storage.getItem('id_token_expires_at'), 10);\r\n  }\r\n\r\n  /**\r\n   * Checkes, whether there is a valid access_token.\r\n   */\r\n  public hasValidAccessToken(): boolean {\r\n    if (this.getAccessToken()) {\r\n      const expiresAt = this._storage.getItem('expires_at');\r\n      const now = new Date();\r\n      if (expiresAt && parseInt(expiresAt, 10) < now.getTime()) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Checks whether there is a valid id_token.\r\n   */\r\n  public hasValidIdToken(): boolean {\r\n    if (this.getIdToken()) {\r\n      const expiresAt = this._storage.getItem('id_token_expires_at');\r\n      const now = new Date();\r\n      if (expiresAt && parseInt(expiresAt, 10) < now.getTime()) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Retrieve a saved custom property of the TokenReponse object. Only if predefined in authconfig.\r\n   */\r\n  public getCustomTokenResponseProperty(requestedProperty: string): any {\r\n    return this._storage &&\r\n      this.config.customTokenParameters &&\r\n      this.config.customTokenParameters.indexOf(requestedProperty) >= 0 &&\r\n      this._storage.getItem(requestedProperty) !== null\r\n      ? JSON.parse(this._storage.getItem(requestedProperty))\r\n      : null;\r\n  }\r\n\r\n  /**\r\n   * Returns the auth-header that can be used\r\n   * to transmit the access_token to a service\r\n   */\r\n  public authorizationHeader(): string {\r\n    return 'Bearer ' + this.getAccessToken();\r\n  }\r\n\r\n  /**\r\n   * Removes all tokens and logs the user out.\r\n   * If a logout url is configured, the user is\r\n   * redirected to it with optional state parameter.\r\n   * @param noRedirectToLogoutUrl\r\n   * @param state\r\n   */\r\n  public logOut(noRedirectToLogoutUrl = false, state = ''): void {\r\n    const id_token = this.getIdToken();\r\n    this._storage.removeItem('access_token');\r\n    this._storage.removeItem('id_token');\r\n    this._storage.removeItem('refresh_token');\r\n\r\n    if (this.saveNoncesInLocalStorage) {\r\n      localStorage.removeItem('nonce');\r\n      localStorage.removeItem('PKCI_verifier');\r\n    } else {\r\n      this._storage.removeItem('nonce');\r\n      this._storage.removeItem('PKCI_verifier');\r\n    }\r\n\r\n    this._storage.removeItem('expires_at');\r\n    this._storage.removeItem('id_token_claims_obj');\r\n    this._storage.removeItem('id_token_expires_at');\r\n    this._storage.removeItem('id_token_stored_at');\r\n    this._storage.removeItem('access_token_stored_at');\r\n    this._storage.removeItem('granted_scopes');\r\n    this._storage.removeItem('session_state');\r\n    if (this.config.customTokenParameters) {\r\n      this.config.customTokenParameters.forEach(customParam =>\r\n        this._storage.removeItem(customParam)\r\n      );\r\n    }\r\n    this.silentRefreshSubject = null;\r\n\r\n    this.eventsSubject.next(new OAuthInfoEvent('logout'));\r\n\r\n    if (!this.logoutUrl) {\r\n      return;\r\n    }\r\n    if (noRedirectToLogoutUrl) {\r\n      return;\r\n    }\r\n\r\n    if (!id_token && !this.postLogoutRedirectUri) {\r\n      return;\r\n    }\r\n\r\n    let logoutUrl: string;\r\n\r\n    if (!this.validateUrlForHttps(this.logoutUrl)) {\r\n      throw new Error(\r\n        \"logoutUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\"\r\n      );\r\n    }\r\n\r\n    // For backward compatibility\r\n    if (this.logoutUrl.indexOf('{{') > -1) {\r\n      logoutUrl = this.logoutUrl\r\n        .replace(/\\{\\{id_token\\}\\}/, id_token)\r\n        .replace(/\\{\\{client_id\\}\\}/, this.clientId);\r\n    } else {\r\n      let params = new HttpParams();\r\n\r\n      if (id_token) {\r\n        params = params.set('id_token_hint', id_token);\r\n      }\r\n\r\n      const postLogoutUrl = this.postLogoutRedirectUri || this.redirectUri;\r\n      if (postLogoutUrl) {\r\n        params = params.set('post_logout_redirect_uri', postLogoutUrl);\r\n\r\n        if (state) {\r\n          params = params.set('state', state);\r\n        }\r\n      }\r\n\r\n      logoutUrl =\r\n        this.logoutUrl +\r\n        (this.logoutUrl.indexOf('?') > -1 ? '&' : '?') +\r\n        params.toString();\r\n    }\r\n    this.config.openUri(logoutUrl);\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  public createAndSaveNonce(): Promise<string> {\r\n    const that = this;\r\n    return this.createNonce().then(function(nonce: any) {\r\n      // Use localStorage for nonce if possible\r\n      // localStorage is the only storage who survives a\r\n      // redirect in ALL browsers (also IE)\r\n      // Otherwiese we'd force teams who have to support\r\n      // IE into using localStorage for everything\r\n      if (\r\n        that.saveNoncesInLocalStorage &&\r\n        typeof window['localStorage'] !== 'undefined'\r\n      ) {\r\n        localStorage.setItem('nonce', nonce);\r\n      } else {\r\n        that._storage.setItem('nonce', nonce);\r\n      }\r\n      return nonce;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  public ngOnDestroy(): void {\r\n    this.clearAccessTokenTimer();\r\n    this.clearIdTokenTimer();\r\n\r\n    this.removeSilentRefreshEventListener();\r\n    const silentRefreshFrame = this.document.getElementById(\r\n      this.silentRefreshIFrameName\r\n    );\r\n    if (silentRefreshFrame) {\r\n      silentRefreshFrame.remove();\r\n    }\r\n\r\n    this.stopSessionCheckTimer();\r\n    this.removeSessionCheckEventListener();\r\n    const sessionCheckFrame = this.document.getElementById(\r\n      this.sessionCheckIFrameName\r\n    );\r\n    if (sessionCheckFrame) {\r\n      sessionCheckFrame.remove();\r\n    }\r\n  }\r\n\r\n  protected createNonce(): Promise<string> {\r\n    return new Promise(resolve => {\r\n      if (this.rngUrl) {\r\n        throw new Error(\r\n          'createNonce with rng-web-api has not been implemented so far'\r\n        );\r\n      }\r\n\r\n      /*\r\n       * This alphabet is from:\r\n       * https://tools.ietf.org/html/rfc7636#section-4.1\r\n       *\r\n       * [A-Z] / [a-z] / [0-9] / \"-\" / \".\" / \"_\" / \"~\"\r\n       */\r\n      const unreserved =\r\n        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\r\n      let size = 45;\r\n      let id = '';\r\n\r\n      const crypto =\r\n        typeof self === 'undefined' ? null : self.crypto || self['msCrypto'];\r\n      if (crypto) {\r\n        let bytes = new Uint8Array(size);\r\n        crypto.getRandomValues(bytes);\r\n\r\n        // Needed for IE\r\n        if (!bytes.map) {\r\n          (bytes as any).map = Array.prototype.map;\r\n        }\r\n\r\n        bytes = bytes.map(x => unreserved.charCodeAt(x % unreserved.length));\r\n        id = String.fromCharCode.apply(null, bytes);\r\n      } else {\r\n        while (0 < size--) {\r\n          id += unreserved[(Math.random() * unreserved.length) | 0];\r\n        }\r\n      }\r\n\r\n      resolve(base64UrlEncode(id));\r\n    });\r\n  }\r\n\r\n  protected async checkAtHash(params: ValidationParams): Promise<boolean> {\r\n    if (!this.tokenValidationHandler) {\r\n      this.logger.warn(\r\n        'No tokenValidationHandler configured. Cannot check at_hash.'\r\n      );\r\n      return true;\r\n    }\r\n    return this.tokenValidationHandler.validateAtHash(params);\r\n  }\r\n\r\n  protected checkSignature(params: ValidationParams): Promise<any> {\r\n    if (!this.tokenValidationHandler) {\r\n      this.logger.warn(\r\n        'No tokenValidationHandler configured. Cannot check signature.'\r\n      );\r\n      return Promise.resolve(null);\r\n    }\r\n    return this.tokenValidationHandler.validateSignature(params);\r\n  }\r\n\r\n  /**\r\n   * Start the implicit flow or the code flow,\r\n   * depending on your configuration.\r\n   */\r\n  public initLoginFlow(additionalState = '', params = {}): void {\r\n    if (this.responseType === 'code') {\r\n      return this.initCodeFlow(additionalState, params);\r\n    } else {\r\n      return this.initImplicitFlow(additionalState, params);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Starts the authorization code flow and redirects to user to\r\n   * the auth servers login url.\r\n   */\r\n  public initCodeFlow(additionalState = '', params = {}): void {\r\n    if (this.loginUrl !== '') {\r\n      this.initCodeFlowInternal(additionalState, params);\r\n    } else {\r\n      this.events\r\n        .pipe(filter(e => e.type === 'discovery_document_loaded'))\r\n        .subscribe(_ => this.initCodeFlowInternal(additionalState, params));\r\n    }\r\n  }\r\n\r\n  private initCodeFlowInternal(additionalState = '', params = {}): void {\r\n    if (!this.validateUrlForHttps(this.loginUrl)) {\r\n      throw new Error(\r\n        \"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\"\r\n      );\r\n    }\r\n\r\n    this.createLoginUrl(additionalState, '', null, false, params)\r\n      .then(this.config.openUri)\r\n      .catch(error => {\r\n        console.error('Error in initAuthorizationCodeFlow');\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  protected async createChallangeVerifierPairForPKCE(): Promise<\r\n    [string, string]\r\n  > {\r\n    if (!this.crypto) {\r\n      throw new Error(\r\n        'PKCE support for code flow needs a CryptoHander. Did you import the OAuthModule using forRoot() ?'\r\n      );\r\n    }\r\n\r\n    const verifier = await this.createNonce();\r\n    const challengeRaw = await this.crypto.calcHash(verifier, 'sha-256');\r\n    const challenge = base64UrlEncode(challengeRaw);\r\n\r\n    return [challenge, verifier];\r\n  }\r\n\r\n  private extractRecognizedCustomParameters(\r\n    tokenResponse: TokenResponse\r\n  ): Map<string, string> {\r\n    let foundParameters: Map<string, string> = new Map<string, string>();\r\n    if (!this.config.customTokenParameters) {\r\n      return foundParameters;\r\n    }\r\n    this.config.customTokenParameters.forEach((recognizedParameter: string) => {\r\n      if (tokenResponse[recognizedParameter]) {\r\n        foundParameters.set(\r\n          recognizedParameter,\r\n          JSON.stringify(tokenResponse[recognizedParameter])\r\n        );\r\n      }\r\n    });\r\n    return foundParameters;\r\n  }\r\n\r\n  /**\r\n   * Revokes the auth token to secure the vulnarability\r\n   * of the token issued allowing the authorization server to clean\r\n   * up any security credentials associated with the authorization\r\n   */\r\n  public revokeTokenAndLogout(): Promise<any> {\r\n    let revokeEndpoint = this.revocationEndpoint;\r\n    let accessToken = this.getAccessToken();\r\n    let refreshToken = this.getRefreshToken();\r\n\r\n    if (!accessToken) {\r\n      return;\r\n    }\r\n\r\n    let params = new HttpParams();\r\n\r\n    let headers = new HttpHeaders().set(\r\n      'Content-Type',\r\n      'application/x-www-form-urlencoded'\r\n    );\r\n\r\n    if (this.useHttpBasicAuth) {\r\n      const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n      headers = headers.set('Authorization', 'Basic ' + header);\r\n    }\r\n\r\n    if (!this.useHttpBasicAuth) {\r\n      params = params.set('client_id', this.clientId);\r\n    }\r\n\r\n    if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n      params = params.set('client_secret', this.dummyClientSecret);\r\n    }\r\n\r\n    if (this.customQueryParams) {\r\n      for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n        params = params.set(key, this.customQueryParams[key]);\r\n      }\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      let revokeAccessToken: Observable<void>;\r\n      let revokeRefreshToken: Observable<void>;\r\n\r\n      if (accessToken) {\r\n        let revokationParams = params\r\n          .set('token', accessToken)\r\n          .set('token_type_hint', 'access_token');\r\n        revokeAccessToken = this.http.post<void>(\r\n          revokeEndpoint,\r\n          revokationParams,\r\n          { headers }\r\n        );\r\n      } else {\r\n        revokeAccessToken = of(null);\r\n      }\r\n\r\n      if (refreshToken) {\r\n        let revokationParams = params\r\n          .set('token', refreshToken)\r\n          .set('token_type_hint', 'refresh_token');\r\n        revokeRefreshToken = this.http.post<void>(\r\n          revokeEndpoint,\r\n          revokationParams,\r\n          { headers }\r\n        );\r\n      } else {\r\n        revokeRefreshToken = of(null);\r\n      }\r\n\r\n      combineLatest([revokeAccessToken, revokeRefreshToken]).subscribe(\r\n        res => {\r\n          this.logOut();\r\n          resolve(res);\r\n          this.logger.info('Token successfully revoked');\r\n        },\r\n        err => {\r\n          this.logger.error('Error revoking token', err);\r\n          this.eventsSubject.next(\r\n            new OAuthErrorEvent('token_revoke_error', err)\r\n          );\r\n          reject(err);\r\n        }\r\n      );\r\n    });\r\n  }\r\n}\r\n","export abstract class OAuthModuleConfig {\r\n  resourceServer: OAuthResourceServerConfig;\r\n}\r\n\r\nexport abstract class OAuthResourceServerConfig {\r\n  /**\r\n   * Urls for which calls should be intercepted.\r\n   * If there is an ResourceServerErrorHandler registered, it is used for them.\r\n   * If sendAccessToken is set to true, the access_token is send to them too.\r\n   */\r\n  allowedUrls?: Array<string>;\r\n  sendAccessToken: boolean;\r\n  customUrlValidation?: (url: string) => boolean;\r\n}\r\n","import { HttpResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\n\r\nexport abstract class OAuthResourceServerErrorHandler {\r\n  abstract handleError(err: HttpResponse<any>): Observable<any>;\r\n}\r\n\r\nexport class OAuthNoopResourceServerErrorHandler\r\n  implements OAuthResourceServerErrorHandler {\r\n  handleError(err: HttpResponse<any>): Observable<any> {\r\n    return throwError(err);\r\n  }\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\n\r\nimport {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest\r\n} from '@angular/common/http';\r\nimport { Observable, of, merge } from 'rxjs';\r\nimport {\r\n  catchError,\r\n  filter,\r\n  map,\r\n  take,\r\n  mergeMap,\r\n  timeout\r\n} from 'rxjs/operators';\r\nimport { OAuthResourceServerErrorHandler } from './resource-server-error-handler';\r\nimport { OAuthModuleConfig } from '../oauth-module.config';\r\nimport { OAuthStorage } from '../types';\r\nimport { OAuthService } from '../oauth-service';\r\n\r\n@Injectable()\r\nexport class DefaultOAuthInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private authStorage: OAuthStorage,\r\n    private oAuthService: OAuthService,\r\n    private errorHandler: OAuthResourceServerErrorHandler,\r\n    @Optional() private moduleConfig: OAuthModuleConfig\r\n  ) {}\r\n\r\n  private checkUrl(url: string): boolean {\r\n    if (this.moduleConfig.resourceServer.customUrlValidation) {\r\n      return this.moduleConfig.resourceServer.customUrlValidation(url);\r\n    }\r\n\r\n    if (this.moduleConfig.resourceServer.allowedUrls) {\r\n      return !!this.moduleConfig.resourceServer.allowedUrls.find(u =>\r\n        url.startsWith(u)\r\n      );\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const url = req.url.toLowerCase();\r\n\r\n    if (\r\n      !this.moduleConfig ||\r\n      !this.moduleConfig.resourceServer ||\r\n      !this.checkUrl(url)\r\n    ) {\r\n      return next.handle(req);\r\n    }\r\n\r\n    const sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;\r\n\r\n    if (!sendAccessToken) {\r\n      return next\r\n        .handle(req)\r\n        .pipe(catchError(err => this.errorHandler.handleError(err)));\r\n    }\r\n\r\n    return merge(\r\n      of(this.oAuthService.getAccessToken()).pipe(\r\n        filter(token => (token ? true : false))\r\n      ),\r\n      this.oAuthService.events.pipe(\r\n        filter(e => e.type === 'token_received'),\r\n        timeout(this.oAuthService.waitForTokenInMsec || 0),\r\n        catchError(_ => of(null)), // timeout is not an error\r\n        map(_ => this.oAuthService.getAccessToken())\r\n      )\r\n    ).pipe(\r\n      take(1),\r\n      mergeMap(token => {\r\n        if (token) {\r\n          const header = 'Bearer ' + token;\r\n          const headers = req.headers.set('Authorization', header);\r\n          req = req.clone({ headers });\r\n        }\r\n\r\n        return next\r\n          .handle(req)\r\n          .pipe(catchError(err => this.errorHandler.handleError(err)));\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { ValidationHandler, ValidationParams } from './validation-handler';\r\n\r\n/**\r\n * A validation handler that isn't validating nothing.\r\n * Can be used to skip validation (at your own risk).\r\n */\r\nexport class NullValidationHandler implements ValidationHandler {\r\n  validateSignature(validationParams: ValidationParams): Promise<any> {\r\n    return Promise.resolve(null);\r\n  }\r\n  validateAtHash(validationParams: ValidationParams): Promise<boolean> {\r\n    return Promise.resolve(true);\r\n  }\r\n}\r\n","import { MemoryStorage } from './types';\r\n\r\nexport function createDefaultLogger() {\r\n  return console;\r\n}\r\n\r\nexport function createDefaultStorage() {\r\n  return typeof sessionStorage !== 'undefined'\r\n    ? sessionStorage\r\n    : new MemoryStorage();\r\n}\r\n","import { OAuthStorage, OAuthLogger } from './types';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { OAuthService } from './oauth-service';\r\nimport { UrlHelperService } from './url-helper.service';\r\n\r\nimport { OAuthModuleConfig } from './oauth-module.config';\r\nimport {\r\n  OAuthResourceServerErrorHandler,\r\n  OAuthNoopResourceServerErrorHandler\r\n} from './interceptors/resource-server-error-handler';\r\nimport { DefaultOAuthInterceptor } from './interceptors/default-oauth.interceptor';\r\nimport { ValidationHandler } from './token-validation/validation-handler';\r\nimport { NullValidationHandler } from './token-validation/null-validation-handler';\r\nimport { createDefaultLogger, createDefaultStorage } from './factories';\r\nimport {\r\n  HashHandler,\r\n  DefaultHashHandler\r\n} from './token-validation/hash-handler';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [],\r\n  exports: []\r\n})\r\nexport class OAuthModule {\r\n  static forRoot(\r\n    config: OAuthModuleConfig = null,\r\n    validationHandlerClass = NullValidationHandler\r\n  ): ModuleWithProviders<OAuthModule> {\r\n    return {\r\n      ngModule: OAuthModule,\r\n      providers: [\r\n        OAuthService,\r\n        UrlHelperService,\r\n        { provide: OAuthLogger, useFactory: createDefaultLogger },\r\n        { provide: OAuthStorage, useFactory: createDefaultStorage },\r\n        { provide: ValidationHandler, useClass: validationHandlerClass },\r\n        { provide: HashHandler, useClass: DefaultHashHandler },\r\n        {\r\n          provide: OAuthResourceServerErrorHandler,\r\n          useClass: OAuthNoopResourceServerErrorHandler\r\n        },\r\n        { provide: OAuthModuleConfig, useValue: config },\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: DefaultOAuthInterceptor,\r\n          multi: true\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { NullValidationHandler } from './null-validation-handler';\r\n\r\nconst err = `PLEASE READ THIS CAREFULLY:\r\n\r\nBeginning with angular-oauth2-oidc version 9, the JwksValidationHandler\r\nhas been moved to an library of its own. If you need it for implementing\r\nOAuth2/OIDC **implicit flow**, please install it using npm:\r\n\r\n  npm i angular-oauth2-oidc-jwks --save\r\n\r\nAfter that, you can import it into your application:\r\n\r\n  import { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';\r\n\r\nPlease note, that this dependency is not needed for the **code flow**,\r\nwhich is nowadays the **recommented** one for single page applications.\r\nThis also results in smaller bundle sizes.\r\n`;\r\n\r\n/**\r\n * This is just a dummy of the JwksValidationHandler\r\n * telling the users that the real one has been moved\r\n * to an library of its own, namely angular-oauth2-oidc-utils\r\n */\r\nexport class JwksValidationHandler extends NullValidationHandler {\r\n  constructor() {\r\n    super();\r\n    console.error(err);\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { AuthConfig } from './auth.config';\r\n\r\nexport const AUTH_CONFIG = new InjectionToken<AuthConfig>('AUTH_CONFIG');\r\n"]}