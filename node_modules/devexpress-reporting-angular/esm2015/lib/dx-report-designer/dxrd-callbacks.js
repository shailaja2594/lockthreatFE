/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Output, EventEmitter } from '@angular/core';
export class DxReportDesignerCallbacksComponent {
    constructor() {
        this.CustomizeElements = new EventEmitter();
        this.ExitDesigner = new EventEmitter();
        this.ReportSaving = new EventEmitter();
        this.ReportSaved = new EventEmitter();
        this.ReportOpened = new EventEmitter();
        this.ReportOpening = new EventEmitter();
        this.TabChanged = new EventEmitter();
        this.ComponentAdded = new EventEmitter();
        this.CustomizeParameterEditors = new EventEmitter();
        this.CustomizeSaveDialog = new EventEmitter();
        this.CustomizeOpenDialog = new EventEmitter();
        this.CustomizeToolbox = new EventEmitter();
        this.CustomizeFieldListActions = new EventEmitter();
        this.CustomizeMenuActions = new EventEmitter();
        this.CustomizeLocalization = new EventEmitter();
        this.BeforeRender = new EventEmitter();
        this.OnServerError = new EventEmitter();
        this.PreviewClick = new EventEmitter();
        this.PreviewCustomizeElements = new EventEmitter();
        this.PreviewCustomizeMenuActions = new EventEmitter();
        this.PreviewEditingFieldChanged = new EventEmitter();
        this.PreviewDocumentReady = new EventEmitter();
        this.PreviewParametersReset = new EventEmitter();
        this.PreviewCustomizeExportOptions = new EventEmitter();
        this.ParametersSubmitted = new EventEmitter();
    }
}
DxReportDesignerCallbacksComponent.decorators = [
    { type: Component, args: [{
                template: '',
                selector: 'dxrd-callbacks'
            },] },
];
DxReportDesignerCallbacksComponent.propDecorators = {
    CustomizeElements: [{ type: Output }],
    ExitDesigner: [{ type: Output }],
    ReportSaving: [{ type: Output }],
    ReportSaved: [{ type: Output }],
    ReportOpened: [{ type: Output }],
    ReportOpening: [{ type: Output }],
    TabChanged: [{ type: Output }],
    ComponentAdded: [{ type: Output }],
    CustomizeParameterEditors: [{ type: Output }],
    CustomizeSaveDialog: [{ type: Output }],
    CustomizeOpenDialog: [{ type: Output }],
    CustomizeToolbox: [{ type: Output }],
    CustomizeFieldListActions: [{ type: Output }],
    CustomizeMenuActions: [{ type: Output }],
    CustomizeLocalization: [{ type: Output }],
    BeforeRender: [{ type: Output }],
    OnServerError: [{ type: Output }],
    PreviewClick: [{ type: Output }],
    PreviewCustomizeElements: [{ type: Output }],
    PreviewCustomizeMenuActions: [{ type: Output }],
    PreviewEditingFieldChanged: [{ type: Output }],
    PreviewDocumentReady: [{ type: Output }],
    PreviewParametersReset: [{ type: Output }],
    PreviewCustomizeExportOptions: [{ type: Output }],
    ParametersSubmitted: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.CustomizeElements;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.ExitDesigner;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.ReportSaving;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.ReportSaved;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.ReportOpened;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.ReportOpening;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.TabChanged;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.ComponentAdded;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.CustomizeParameterEditors;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.CustomizeSaveDialog;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.CustomizeOpenDialog;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.CustomizeToolbox;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.CustomizeFieldListActions;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.CustomizeMenuActions;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.CustomizeLocalization;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.BeforeRender;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.OnServerError;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.PreviewClick;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.PreviewCustomizeElements;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.PreviewCustomizeMenuActions;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.PreviewEditingFieldChanged;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.PreviewDocumentReady;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.PreviewParametersReset;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.PreviewCustomizeExportOptions;
    /** @type {?} */
    DxReportDesignerCallbacksComponent.prototype.ParametersSubmitted;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHhyZC1jYWxsYmFja3MuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9kZXZleHByZXNzLXJlcG9ydGluZy1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL2R4LXJlcG9ydC1kZXNpZ25lci9keHJkLWNhbGxiYWNrcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBTWhFLE1BQU0sT0FBTyxrQ0FBa0M7SUFKL0M7UUFLYyxzQkFBaUIsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBQzVDLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUN2QyxpQkFBWSxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFDdkMsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBQ3RDLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUN2QyxrQkFBYSxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFDeEMsZUFBVSxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFDckMsbUJBQWMsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBQ3pDLDhCQUF5QixHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFDcEQsd0JBQW1CLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUM5Qyx3QkFBbUIsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBQzlDLHFCQUFnQixHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFDM0MsOEJBQXlCLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUNwRCx5QkFBb0IsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBQy9DLDBCQUFxQixHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFDaEQsaUJBQVksR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBQ3ZDLGtCQUFhLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUd4QyxpQkFBWSxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFDdkMsNkJBQXdCLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUNuRCxnQ0FBMkIsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBQ3RELCtCQUEwQixHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFDckQseUJBQW9CLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUMvQywyQkFBc0IsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBQ2pELGtDQUE2QixHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFDeEQsd0JBQW1CLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztJQUM1RCxDQUFDOzs7WUFoQ0EsU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxFQUFFO2dCQUNaLFFBQVEsRUFBRSxnQkFBZ0I7YUFDN0I7OztnQ0FFSSxNQUFNOzJCQUNOLE1BQU07MkJBQ04sTUFBTTswQkFDTixNQUFNOzJCQUNOLE1BQU07NEJBQ04sTUFBTTt5QkFDTixNQUFNOzZCQUNOLE1BQU07d0NBQ04sTUFBTTtrQ0FDTixNQUFNO2tDQUNOLE1BQU07K0JBQ04sTUFBTTt3Q0FDTixNQUFNO21DQUNOLE1BQU07b0NBQ04sTUFBTTsyQkFDTixNQUFNOzRCQUNOLE1BQU07MkJBR04sTUFBTTt1Q0FDTixNQUFNOzBDQUNOLE1BQU07eUNBQ04sTUFBTTttQ0FDTixNQUFNO3FDQUNOLE1BQU07NENBQ04sTUFBTTtrQ0FDTixNQUFNOzs7O0lBMUJQLCtEQUFzRDs7SUFDdEQsMERBQWlEOztJQUNqRCwwREFBaUQ7O0lBQ2pELHlEQUFnRDs7SUFDaEQsMERBQWlEOztJQUNqRCwyREFBa0Q7O0lBQ2xELHdEQUErQzs7SUFDL0MsNERBQW1EOztJQUNuRCx1RUFBOEQ7O0lBQzlELGlFQUF3RDs7SUFDeEQsaUVBQXdEOztJQUN4RCw4REFBcUQ7O0lBQ3JELHVFQUE4RDs7SUFDOUQsa0VBQXlEOztJQUN6RCxtRUFBMEQ7O0lBQzFELDBEQUFpRDs7SUFDakQsMkRBQWtEOztJQUdsRCwwREFBaUQ7O0lBQ2pELHNFQUE2RDs7SUFDN0QseUVBQWdFOztJQUNoRSx3RUFBK0Q7O0lBQy9ELGtFQUF5RDs7SUFDekQsb0VBQTJEOztJQUMzRCwyRUFBa0U7O0lBQ2xFLGlFQUF3RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gICAgdGVtcGxhdGU6ICcnLFxuICAgIHNlbGVjdG9yOiAnZHhyZC1jYWxsYmFja3MnXG59KVxuZXhwb3J0IGNsYXNzIER4UmVwb3J0RGVzaWduZXJDYWxsYmFja3NDb21wb25lbnQge1xuICAgIEBPdXRwdXQoKSBDdXN0b21pemVFbGVtZW50cyA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICAgIEBPdXRwdXQoKSBFeGl0RGVzaWduZXIgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgICBAT3V0cHV0KCkgUmVwb3J0U2F2aW5nID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gICAgQE91dHB1dCgpIFJlcG9ydFNhdmVkID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gICAgQE91dHB1dCgpIFJlcG9ydE9wZW5lZCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICAgIEBPdXRwdXQoKSBSZXBvcnRPcGVuaW5nID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gICAgQE91dHB1dCgpIFRhYkNoYW5nZWQgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgICBAT3V0cHV0KCkgQ29tcG9uZW50QWRkZWQgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgICBAT3V0cHV0KCkgQ3VzdG9taXplUGFyYW1ldGVyRWRpdG9ycyA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICAgIEBPdXRwdXQoKSBDdXN0b21pemVTYXZlRGlhbG9nID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gICAgQE91dHB1dCgpIEN1c3RvbWl6ZU9wZW5EaWFsb2cgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgICBAT3V0cHV0KCkgQ3VzdG9taXplVG9vbGJveCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICAgIEBPdXRwdXQoKSBDdXN0b21pemVGaWVsZExpc3RBY3Rpb25zID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gICAgQE91dHB1dCgpIEN1c3RvbWl6ZU1lbnVBY3Rpb25zID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gICAgQE91dHB1dCgpIEN1c3RvbWl6ZUxvY2FsaXphdGlvbiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICAgIEBPdXRwdXQoKSBCZWZvcmVSZW5kZXIgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgICBAT3V0cHV0KCkgT25TZXJ2ZXJFcnJvciA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gICAgXG4gICAgQE91dHB1dCgpIFByZXZpZXdDbGljayA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICAgIEBPdXRwdXQoKSBQcmV2aWV3Q3VzdG9taXplRWxlbWVudHMgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgICBAT3V0cHV0KCkgUHJldmlld0N1c3RvbWl6ZU1lbnVBY3Rpb25zID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gICAgQE91dHB1dCgpIFByZXZpZXdFZGl0aW5nRmllbGRDaGFuZ2VkID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gICAgQE91dHB1dCgpIFByZXZpZXdEb2N1bWVudFJlYWR5ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gICAgQE91dHB1dCgpIFByZXZpZXdQYXJhbWV0ZXJzUmVzZXQgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgICBAT3V0cHV0KCkgUHJldmlld0N1c3RvbWl6ZUV4cG9ydE9wdGlvbnMgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgICBAT3V0cHV0KCkgUGFyYW1ldGVyc1N1Ym1pdHRlZCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xufVxuIl19