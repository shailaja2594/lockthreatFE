import { Component, Output, EventEmitter, Input, Renderer2, ViewChild, Inject, PLATFORM_ID, ContentChild, ViewEncapsulation, NgModule } from '@angular/core';
import { isPlatformBrowser, CommonModule } from '@angular/common';
import { cleanNode, observable } from 'knockout';
import { __extends } from 'tslib';
import { Report } from 'devexpress-reporting/dx-webdocumentviewer';
import { Designer } from 'devexpress-reporting/dx-reportdesigner';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

var _c0 = ["control"];
var _c1 = function (a0, a1) { return { "width": a0, "height": a1 }; };
var DxReportViewerCallbacksComponent = /** @class */ (function () {
    function DxReportViewerCallbacksComponent() {
        this.CustomizeElements = new EventEmitter();
        this.PreviewClick = new EventEmitter();
        this.EditingFieldChanged = new EventEmitter();
        this.DocumentReady = new EventEmitter();
        this.CustomizeExportOptions = new EventEmitter();
        this.CustomizeParameterEditors = new EventEmitter();
        this.CustomizeParameterLookUpSource = new EventEmitter();
        this.ParametersReset = new EventEmitter();
        this.ParametersSubmitted = new EventEmitter();
        this.CustomizeMenuActions = new EventEmitter();
        this.CustomizeLocalization = new EventEmitter();
        this.BeforeRender = new EventEmitter();
        this.OnServerError = new EventEmitter();
    }
    DxReportViewerCallbacksComponent.propDecorators = {
        CustomizeElements: [{ type: Output }],
        PreviewClick: [{ type: Output }],
        EditingFieldChanged: [{ type: Output }],
        DocumentReady: [{ type: Output }],
        CustomizeExportOptions: [{ type: Output }],
        CustomizeParameterEditors: [{ type: Output }],
        CustomizeParameterLookUpSource: [{ type: Output }],
        ParametersReset: [{ type: Output }],
        ParametersSubmitted: [{ type: Output }],
        CustomizeMenuActions: [{ type: Output }],
        CustomizeLocalization: [{ type: Output }],
        BeforeRender: [{ type: Output }],
        OnServerError: [{ type: Output }]
    };
DxReportViewerCallbacksComponent.ɵfac = function DxReportViewerCallbacksComponent_Factory(t) { return new (t || DxReportViewerCallbacksComponent)(); };
DxReportViewerCallbacksComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxReportViewerCallbacksComponent, selectors: [["dxrv-callbacks"]], outputs: { CustomizeElements: "CustomizeElements", PreviewClick: "PreviewClick", EditingFieldChanged: "EditingFieldChanged", DocumentReady: "DocumentReady", CustomizeExportOptions: "CustomizeExportOptions", CustomizeParameterEditors: "CustomizeParameterEditors", CustomizeParameterLookUpSource: "CustomizeParameterLookUpSource", ParametersReset: "ParametersReset", ParametersSubmitted: "ParametersSubmitted", CustomizeMenuActions: "CustomizeMenuActions", CustomizeLocalization: "CustomizeLocalization", BeforeRender: "BeforeRender", OnServerError: "OnServerError" }, decls: 0, vars: 0, template: function DxReportViewerCallbacksComponent_Template(rf, ctx) { }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxReportViewerCallbacksComponent, [{
        type: Component,
        args: [{
                template: '',
                selector: 'dxrv-callbacks'
            }]
    }], function () { return []; }, { CustomizeElements: [{
            type: Output
        }], PreviewClick: [{
            type: Output
        }], EditingFieldChanged: [{
            type: Output
        }], DocumentReady: [{
            type: Output
        }], CustomizeExportOptions: [{
            type: Output
        }], CustomizeParameterEditors: [{
            type: Output
        }], CustomizeParameterLookUpSource: [{
            type: Output
        }], ParametersReset: [{
            type: Output
        }], ParametersSubmitted: [{
            type: Output
        }], CustomizeMenuActions: [{
            type: Output
        }], CustomizeLocalization: [{
            type: Output
        }], BeforeRender: [{
            type: Output
        }], OnServerError: [{
            type: Output
        }] }); })();
    return DxReportViewerCallbacksComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var DxReportViewerRequestOptionsComponent = /** @class */ (function () {
    function DxReportViewerRequestOptionsComponent() {
        this.invokeAction = "/DXXRDV";
    }
    DxReportViewerRequestOptionsComponent.propDecorators = {
        invokeAction: [{ type: Input }],
        getLocalizationAction: [{ type: Input }],
        host: [{ type: Input }]
    };
DxReportViewerRequestOptionsComponent.ɵfac = function DxReportViewerRequestOptionsComponent_Factory(t) { return new (t || DxReportViewerRequestOptionsComponent)(); };
DxReportViewerRequestOptionsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxReportViewerRequestOptionsComponent, selectors: [["dxrv-request-options"]], inputs: { invokeAction: "invokeAction", getLocalizationAction: "getLocalizationAction", host: "host" }, decls: 0, vars: 0, template: function DxReportViewerRequestOptionsComponent_Template(rf, ctx) { }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxReportViewerRequestOptionsComponent, [{
        type: Component,
        args: [{
                template: '',
                selector: 'dxrv-request-options'
            }]
    }], function () { return []; }, { invokeAction: [{
            type: Input
        }], getLocalizationAction: [{
            type: Input
        }], host: [{
            type: Input
        }] }); })();
    return DxReportViewerRequestOptionsComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/**
 * @abstract
 * @template T
 */
var DxReportingComponent = /** @class */ (function () {
    function DxReportingComponent(renderer, platformId) {
        this.renderer = renderer;
        this.platformId = platformId;
        this.height = '800px';
        this.width = '100%';
        this.cssClass = '';
    }
    /**
     * @return {?}
     */
    DxReportingComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        if (isPlatformBrowser(this.platformId)) {
            this.callbacks = this.getCallbacks();
            /** @type {?} */
            var options = this.getControlOptions();
            /** @type {?} */
            var binding = this.getKoBinding(options);
            this.bindingSender = binding.sender;
            binding.applyBindings(this.control.nativeElement);
        }
    };
    /**
     * @return {?}
     */
    DxReportingComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        cleanNode(this.control.nativeElement);
    };
    /**
     * @return {?}
     */
    DxReportingComponent.prototype.getEventRaiser = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var component = this;
        return function (eventName, args) { return component.callbacks && component.callbacks[eventName] && component.callbacks[eventName].emit({ sender: component.bindingSender, args: args, component: component }); };
    };
    /** @nocollapse */
    DxReportingComponent.ctorParameters = function () { return [
        { type: Renderer2 },
        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
    ]; };
    DxReportingComponent.propDecorators = {
        control: [{ type: ViewChild, args: ["control",] }],
        height: [{ type: Input }],
        width: [{ type: Input }],
        cssClass: [{ type: Input }],
        rtl: [{ type: Input }]
    };
DxReportingComponent.ɵfac = function DxReportingComponent_Factory(t) { return new (t || DxReportingComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };
DxReportingComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DxReportingComponent, viewQuery: function DxReportingComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.control = _t.first);
    } }, inputs: { height: "height", width: "width", cssClass: "cssClass", rtl: "rtl" } });

    return DxReportingComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var DxReportViewerMobileModeSettingsComponent = /** @class */ (function () {
    function DxReportViewerMobileModeSettingsComponent() {
    }
    DxReportViewerMobileModeSettingsComponent.propDecorators = {
        readerMode: [{ type: Input }],
        animationEnabled: [{ type: Input }]
    };
DxReportViewerMobileModeSettingsComponent.ɵfac = function DxReportViewerMobileModeSettingsComponent_Factory(t) { return new (t || DxReportViewerMobileModeSettingsComponent)(); };
DxReportViewerMobileModeSettingsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxReportViewerMobileModeSettingsComponent, selectors: [["dxrv-mobile-mode-settings"]], inputs: { readerMode: "readerMode", animationEnabled: "animationEnabled" }, decls: 0, vars: 0, template: function DxReportViewerMobileModeSettingsComponent_Template(rf, ctx) { }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxReportViewerMobileModeSettingsComponent, [{
        type: Component,
        args: [{
                template: '',
                selector: 'dxrv-mobile-mode-settings'
            }]
    }], function () { return []; }, { readerMode: [{
            type: Input
        }], animationEnabled: [{
            type: Input
        }] }); })();
    return DxReportViewerMobileModeSettingsComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var DxReportViewerRemoteSettingsComponent = /** @class */ (function () {
    function DxReportViewerRemoteSettingsComponent() {
    }
    DxReportViewerRemoteSettingsComponent.propDecorators = {
        authToken: [{ type: Input }],
        serverUri: [{ type: Input }]
    };
DxReportViewerRemoteSettingsComponent.ɵfac = function DxReportViewerRemoteSettingsComponent_Factory(t) { return new (t || DxReportViewerRemoteSettingsComponent)(); };
DxReportViewerRemoteSettingsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxReportViewerRemoteSettingsComponent, selectors: [["dxrv-remote-settings"]], inputs: { authToken: "authToken", serverUri: "serverUri" }, decls: 0, vars: 0, template: function DxReportViewerRemoteSettingsComponent_Template(rf, ctx) { }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxReportViewerRemoteSettingsComponent, [{
        type: Component,
        args: [{
                template: '',
                selector: 'dxrv-remote-settings'
            }]
    }], function () { return []; }, { authToken: [{
            type: Input
        }], serverUri: [{
            type: Input
        }] }); })();
    return DxReportViewerRemoteSettingsComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var DxReportViewerTabPanelSettingsComponent = /** @class */ (function () {
    function DxReportViewerTabPanelSettingsComponent() {
    }
    DxReportViewerTabPanelSettingsComponent.propDecorators = {
        position: [{ type: Input }],
        width: [{ type: Input }]
    };
DxReportViewerTabPanelSettingsComponent.ɵfac = function DxReportViewerTabPanelSettingsComponent_Factory(t) { return new (t || DxReportViewerTabPanelSettingsComponent)(); };
DxReportViewerTabPanelSettingsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxReportViewerTabPanelSettingsComponent, selectors: [["dxrv-tabpanel-settings"]], inputs: { position: "position", width: "width" }, decls: 0, vars: 0, template: function DxReportViewerTabPanelSettingsComponent_Template(rf, ctx) { }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxReportViewerTabPanelSettingsComponent, [{
        type: Component,
        args: [{
                template: '',
                selector: 'dxrv-tabpanel-settings'
            }]
    }], function () { return []; }, { position: [{
            type: Input
        }], width: [{
            type: Input
        }] }); })();
    return DxReportViewerTabPanelSettingsComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var DxReportViewerComponent = /** @class */ (function (_super) {
    __extends(DxReportViewerComponent, _super);
    function DxReportViewerComponent(renderer, platformId) {
        var _this = _super.call(this, renderer, platformId) || this;
        _this.koReportUrl = observable();
        return _this;
    }
    /**
     * @param {?} options
     * @return {?}
     */
    DxReportViewerComponent.prototype.getKoBinding = /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        return new Report.Preview.JSReportViewerBinding(options, this.getEventRaiser());
    };
    /**
     * @return {?}
     */
    DxReportViewerComponent.prototype.getCallbacks = /**
     * @return {?}
     */
    function () {
        return this.callbacksComponent;
    };
    /**
     * @return {?}
     */
    DxReportViewerComponent.prototype.getControlOptions = /**
     * @return {?}
     */
    function () {
        return {
            rtl: this.rtl,
            isMobile: this.isMobile,
            reportUrl: this.koReportUrl,
            requestOptions: this.requestOptionsComponent,
            mobileModeSettings: this.mobileModeSettingsComponent,
            remoteSettings: this.remoteSettingsComponent,
            tabPanelSettings: this.tabPanelSettingsComponent,
            callbacks: {}
        };
    };
    /**
     * @return {?}
     */
    DxReportViewerComponent.prototype.GetPreviewModel = /**
     * @return {?}
     */
    function () {
        return this.bindingSender.GetPreviewModel();
    };
    Object.defineProperty(DxReportViewerComponent.prototype, "reportUrl", {
        get: /**
         * @return {?}
         */
        function () {
            return this.koReportUrl();
        },
        set: /**
         * @param {?} reportUrl
         * @return {?}
         */
        function (reportUrl) {
            this.koReportUrl(reportUrl);
        },
        enumerable: true,
        configurable: true
    });
    /** @nocollapse */
    DxReportViewerComponent.ctorParameters = function () { return [
        { type: Renderer2 },
        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
    ]; };
    DxReportViewerComponent.propDecorators = {
        requestOptionsComponent: [{ type: ContentChild, args: [DxReportViewerRequestOptionsComponent,] }],
        callbacksComponent: [{ type: ContentChild, args: [DxReportViewerCallbacksComponent,] }],
        mobileModeSettingsComponent: [{ type: ContentChild, args: [DxReportViewerMobileModeSettingsComponent,] }],
        remoteSettingsComponent: [{ type: ContentChild, args: [DxReportViewerRemoteSettingsComponent,] }],
        tabPanelSettingsComponent: [{ type: ContentChild, args: [DxReportViewerTabPanelSettingsComponent,] }],
        isMobile: [{ type: Input }],
        reportUrl: [{ type: Input }]
    };
DxReportViewerComponent.ɵfac = function DxReportViewerComponent_Factory(t) { return new (t || DxReportViewerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };
DxReportViewerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxReportViewerComponent, selectors: [["dx-report-viewer"]], contentQueries: function DxReportViewerComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, DxReportViewerRequestOptionsComponent, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, DxReportViewerCallbacksComponent, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, DxReportViewerMobileModeSettingsComponent, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, DxReportViewerRemoteSettingsComponent, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, DxReportViewerTabPanelSettingsComponent, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.requestOptionsComponent = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.callbacksComponent = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.mobileModeSettingsComponent = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.remoteSettingsComponent = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabPanelSettingsComponent = _t.first);
    } }, inputs: { reportUrl: "reportUrl", isMobile: "isMobile" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 5, consts: [[3, "ngClass", "ngStyle"], ["control", ""], ["data-bind", "dxReportViewer: $data"]], template: function DxReportViewerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0, 1);
        ɵngcc0.ɵɵelement(2, "div", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.cssClass)("ngStyle", ɵngcc0.ɵɵpureFunction2(2, _c1, ctx.width, ctx.height));
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgStyle], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxReportViewerComponent, [{
        type: Component,
        args: [{
                selector: 'dx-report-viewer',
                encapsulation: ViewEncapsulation.None,
                template: "<div #control [ngClass]=\"cssClass\" [ngStyle]=\"{'width': width, 'height': height }\">\n  <div data-bind=\"dxReportViewer: $data\"></div>\n</div>",
                styles: []
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: Object, decorators: [{
                type: Inject,
                args: [PLATFORM_ID]
            }] }]; }, { reportUrl: [{
            type: Input
        }], requestOptionsComponent: [{
            type: ContentChild,
            args: [DxReportViewerRequestOptionsComponent]
        }], callbacksComponent: [{
            type: ContentChild,
            args: [DxReportViewerCallbacksComponent]
        }], mobileModeSettingsComponent: [{
            type: ContentChild,
            args: [DxReportViewerMobileModeSettingsComponent]
        }], remoteSettingsComponent: [{
            type: ContentChild,
            args: [DxReportViewerRemoteSettingsComponent]
        }], tabPanelSettingsComponent: [{
            type: ContentChild,
            args: [DxReportViewerTabPanelSettingsComponent]
        }], isMobile: [{
            type: Input
        }] }); })();
    return DxReportViewerComponent;
}(DxReportingComponent));

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var DxReportViewerModule = /** @class */ (function () {
    function DxReportViewerModule() {
    }
DxReportViewerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxReportViewerModule, id: "DxReportViewerModule" });
DxReportViewerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxReportViewerModule_Factory(t) { return new (t || DxReportViewerModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxReportViewerModule, { declarations: function () { return [DxReportViewerComponent,
        DxReportViewerCallbacksComponent,
        DxReportViewerMobileModeSettingsComponent,
        DxReportViewerRemoteSettingsComponent,
        DxReportViewerRequestOptionsComponent,
        DxReportViewerTabPanelSettingsComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [DxReportViewerComponent,
        DxReportViewerCallbacksComponent,
        DxReportViewerMobileModeSettingsComponent,
        DxReportViewerRemoteSettingsComponent,
        DxReportViewerRequestOptionsComponent,
        DxReportViewerTabPanelSettingsComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxReportViewerModule, [{
        type: NgModule,
        args: [{
                id: "DxReportViewerModule",
                imports: [CommonModule],
                declarations: [
                    DxReportViewerComponent,
                    DxReportViewerCallbacksComponent,
                    DxReportViewerMobileModeSettingsComponent,
                    DxReportViewerRemoteSettingsComponent,
                    DxReportViewerRequestOptionsComponent,
                    DxReportViewerTabPanelSettingsComponent
                ],
                exports: [
                    DxReportViewerComponent,
                    DxReportViewerCallbacksComponent,
                    DxReportViewerMobileModeSettingsComponent,
                    DxReportViewerRemoteSettingsComponent,
                    DxReportViewerRequestOptionsComponent,
                    DxReportViewerTabPanelSettingsComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return DxReportViewerModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var DxReportDesignerRequestOptionsComponent = /** @class */ (function () {
    function DxReportDesignerRequestOptionsComponent() {
    }
    DxReportDesignerRequestOptionsComponent.propDecorators = {
        getDesignerModelAction: [{ type: Input }],
        getLocalizationAction: [{ type: Input }],
        host: [{ type: Input }]
    };
DxReportDesignerRequestOptionsComponent.ɵfac = function DxReportDesignerRequestOptionsComponent_Factory(t) { return new (t || DxReportDesignerRequestOptionsComponent)(); };
DxReportDesignerRequestOptionsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxReportDesignerRequestOptionsComponent, selectors: [["dxrd-request-options"]], inputs: { getDesignerModelAction: "getDesignerModelAction", getLocalizationAction: "getLocalizationAction", host: "host" }, decls: 0, vars: 0, template: function DxReportDesignerRequestOptionsComponent_Template(rf, ctx) { }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxReportDesignerRequestOptionsComponent, [{
        type: Component,
        args: [{
                template: '',
                selector: 'dxrd-request-options'
            }]
    }], function () { return []; }, { getDesignerModelAction: [{
            type: Input
        }], getLocalizationAction: [{
            type: Input
        }], host: [{
            type: Input
        }] }); })();
    return DxReportDesignerRequestOptionsComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var DxReportDesignerCallbacksComponent = /** @class */ (function () {
    function DxReportDesignerCallbacksComponent() {
        this.CustomizeElements = new EventEmitter();
        this.ExitDesigner = new EventEmitter();
        this.ReportSaving = new EventEmitter();
        this.ReportSaved = new EventEmitter();
        this.ReportOpened = new EventEmitter();
        this.ReportOpening = new EventEmitter();
        this.TabChanged = new EventEmitter();
        this.ComponentAdded = new EventEmitter();
        this.CustomizeParameterEditors = new EventEmitter();
        this.CustomizeSaveDialog = new EventEmitter();
        this.CustomizeOpenDialog = new EventEmitter();
        this.CustomizeToolbox = new EventEmitter();
        this.CustomizeFieldListActions = new EventEmitter();
        this.CustomizeMenuActions = new EventEmitter();
        this.CustomizeLocalization = new EventEmitter();
        this.BeforeRender = new EventEmitter();
        this.OnServerError = new EventEmitter();
        this.PreviewClick = new EventEmitter();
        this.PreviewCustomizeElements = new EventEmitter();
        this.PreviewCustomizeMenuActions = new EventEmitter();
        this.PreviewEditingFieldChanged = new EventEmitter();
        this.PreviewDocumentReady = new EventEmitter();
        this.PreviewParametersReset = new EventEmitter();
        this.PreviewCustomizeExportOptions = new EventEmitter();
        this.ParametersSubmitted = new EventEmitter();
    }
    DxReportDesignerCallbacksComponent.propDecorators = {
        CustomizeElements: [{ type: Output }],
        ExitDesigner: [{ type: Output }],
        ReportSaving: [{ type: Output }],
        ReportSaved: [{ type: Output }],
        ReportOpened: [{ type: Output }],
        ReportOpening: [{ type: Output }],
        TabChanged: [{ type: Output }],
        ComponentAdded: [{ type: Output }],
        CustomizeParameterEditors: [{ type: Output }],
        CustomizeSaveDialog: [{ type: Output }],
        CustomizeOpenDialog: [{ type: Output }],
        CustomizeToolbox: [{ type: Output }],
        CustomizeFieldListActions: [{ type: Output }],
        CustomizeMenuActions: [{ type: Output }],
        CustomizeLocalization: [{ type: Output }],
        BeforeRender: [{ type: Output }],
        OnServerError: [{ type: Output }],
        PreviewClick: [{ type: Output }],
        PreviewCustomizeElements: [{ type: Output }],
        PreviewCustomizeMenuActions: [{ type: Output }],
        PreviewEditingFieldChanged: [{ type: Output }],
        PreviewDocumentReady: [{ type: Output }],
        PreviewParametersReset: [{ type: Output }],
        PreviewCustomizeExportOptions: [{ type: Output }],
        ParametersSubmitted: [{ type: Output }]
    };
DxReportDesignerCallbacksComponent.ɵfac = function DxReportDesignerCallbacksComponent_Factory(t) { return new (t || DxReportDesignerCallbacksComponent)(); };
DxReportDesignerCallbacksComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxReportDesignerCallbacksComponent, selectors: [["dxrd-callbacks"]], outputs: { CustomizeElements: "CustomizeElements", ExitDesigner: "ExitDesigner", ReportSaving: "ReportSaving", ReportSaved: "ReportSaved", ReportOpened: "ReportOpened", ReportOpening: "ReportOpening", TabChanged: "TabChanged", ComponentAdded: "ComponentAdded", CustomizeParameterEditors: "CustomizeParameterEditors", CustomizeSaveDialog: "CustomizeSaveDialog", CustomizeOpenDialog: "CustomizeOpenDialog", CustomizeToolbox: "CustomizeToolbox", CustomizeFieldListActions: "CustomizeFieldListActions", CustomizeMenuActions: "CustomizeMenuActions", CustomizeLocalization: "CustomizeLocalization", BeforeRender: "BeforeRender", OnServerError: "OnServerError", PreviewClick: "PreviewClick", PreviewCustomizeElements: "PreviewCustomizeElements", PreviewCustomizeMenuActions: "PreviewCustomizeMenuActions", PreviewEditingFieldChanged: "PreviewEditingFieldChanged", PreviewDocumentReady: "PreviewDocumentReady", PreviewParametersReset: "PreviewParametersReset", PreviewCustomizeExportOptions: "PreviewCustomizeExportOptions", ParametersSubmitted: "ParametersSubmitted" }, decls: 0, vars: 0, template: function DxReportDesignerCallbacksComponent_Template(rf, ctx) { }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxReportDesignerCallbacksComponent, [{
        type: Component,
        args: [{
                template: '',
                selector: 'dxrd-callbacks'
            }]
    }], function () { return []; }, { CustomizeElements: [{
            type: Output
        }], ExitDesigner: [{
            type: Output
        }], ReportSaving: [{
            type: Output
        }], ReportSaved: [{
            type: Output
        }], ReportOpened: [{
            type: Output
        }], ReportOpening: [{
            type: Output
        }], TabChanged: [{
            type: Output
        }], ComponentAdded: [{
            type: Output
        }], CustomizeParameterEditors: [{
            type: Output
        }], CustomizeSaveDialog: [{
            type: Output
        }], CustomizeOpenDialog: [{
            type: Output
        }], CustomizeToolbox: [{
            type: Output
        }], CustomizeFieldListActions: [{
            type: Output
        }], CustomizeMenuActions: [{
            type: Output
        }], CustomizeLocalization: [{
            type: Output
        }], BeforeRender: [{
            type: Output
        }], OnServerError: [{
            type: Output
        }], PreviewClick: [{
            type: Output
        }], PreviewCustomizeElements: [{
            type: Output
        }], PreviewCustomizeMenuActions: [{
            type: Output
        }], PreviewEditingFieldChanged: [{
            type: Output
        }], PreviewDocumentReady: [{
            type: Output
        }], PreviewParametersReset: [{
            type: Output
        }], PreviewCustomizeExportOptions: [{
            type: Output
        }], ParametersSubmitted: [{
            type: Output
        }] }); })();
    return DxReportDesignerCallbacksComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var DxReportDesignerComponent = /** @class */ (function (_super) {
    __extends(DxReportDesignerComponent, _super);
    function DxReportDesignerComponent(renderer, platformId) {
        var _this = _super.call(this, renderer, platformId) || this;
        _this.koReportUrl = observable();
        return _this;
    }
    /**
     * @return {?}
     */
    DxReportDesignerComponent.prototype.getCallbacks = /**
     * @return {?}
     */
    function () {
        return this.callbacksComponent;
    };
    /**
     * @param {?} options
     * @return {?}
     */
    DxReportDesignerComponent.prototype.getKoBinding = /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        return new Designer.Report.JSReportDesignerBinding(options, this.getEventRaiser());
    };
    /**
     * @return {?}
     */
    DxReportDesignerComponent.prototype.getControlOptions = /**
     * @return {?}
     */
    function () {
        return {
            allowMDI: this.allowMDI,
            reportUrl: this.koReportUrl,
            requestOptions: this.requestOptions,
            callbacks: { designer: {}, preview: {} }
        };
    };
    /**
     * @return {?}
     */
    DxReportDesignerComponent.prototype.GetDesignerModel = /**
     * @return {?}
     */
    function () {
        return this.bindingSender.GetDesignerModel();
    };
    /**
     * @return {?}
     */
    DxReportDesignerComponent.prototype.GetPreviewModel = /**
     * @return {?}
     */
    function () {
        return this.bindingSender.GetPreviewModel();
    };
    Object.defineProperty(DxReportDesignerComponent.prototype, "reportUrl", {
        get: /**
         * @return {?}
         */
        function () {
            return this.koReportUrl();
        },
        set: /**
         * @param {?} reportUrl
         * @return {?}
         */
        function (reportUrl) {
            this.koReportUrl(reportUrl);
        },
        enumerable: true,
        configurable: true
    });
    /** @nocollapse */
    DxReportDesignerComponent.ctorParameters = function () { return [
        { type: Renderer2 },
        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
    ]; };
    DxReportDesignerComponent.propDecorators = {
        requestOptions: [{ type: ContentChild, args: [DxReportDesignerRequestOptionsComponent,] }],
        callbacksComponent: [{ type: ContentChild, args: [DxReportDesignerCallbacksComponent,] }],
        allowMDI: [{ type: Input }],
        reportUrl: [{ type: Input }]
    };
DxReportDesignerComponent.ɵfac = function DxReportDesignerComponent_Factory(t) { return new (t || DxReportDesignerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };
DxReportDesignerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxReportDesignerComponent, selectors: [["dx-report-designer"]], contentQueries: function DxReportDesignerComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, DxReportDesignerRequestOptionsComponent, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, DxReportDesignerCallbacksComponent, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.requestOptions = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.callbacksComponent = _t.first);
    } }, inputs: { reportUrl: "reportUrl", allowMDI: "allowMDI" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 5, consts: [[3, "ngClass", "ngStyle"], ["control", ""], ["data-bind", "dxReportDesigner: $data"]], template: function DxReportDesignerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0, 1);
        ɵngcc0.ɵɵelement(2, "div", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.cssClass)("ngStyle", ɵngcc0.ɵɵpureFunction2(2, _c1, ctx.width, ctx.height));
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgStyle], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxReportDesignerComponent, [{
        type: Component,
        args: [{
                selector: 'dx-report-designer',
                encapsulation: ViewEncapsulation.None,
                template: "<div #control [ngClass]=\"cssClass\" [ngStyle]=\"{'width': width, 'height': height }\">\n  <div data-bind=\"dxReportDesigner: $data\"></div>\n</div>",
                styles: []
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: Object, decorators: [{
                type: Inject,
                args: [PLATFORM_ID]
            }] }]; }, { reportUrl: [{
            type: Input
        }], requestOptions: [{
            type: ContentChild,
            args: [DxReportDesignerRequestOptionsComponent]
        }], callbacksComponent: [{
            type: ContentChild,
            args: [DxReportDesignerCallbacksComponent]
        }], allowMDI: [{
            type: Input
        }] }); })();
    return DxReportDesignerComponent;
}(DxReportingComponent));

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var DxReportDesignerModule = /** @class */ (function () {
    function DxReportDesignerModule() {
    }
DxReportDesignerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxReportDesignerModule, id: "DxReportDesignerModule" });
DxReportDesignerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxReportDesignerModule_Factory(t) { return new (t || DxReportDesignerModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxReportDesignerModule, { declarations: function () { return [DxReportDesignerCallbacksComponent,
        DxReportDesignerRequestOptionsComponent,
        DxReportDesignerComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [DxReportDesignerCallbacksComponent,
        DxReportDesignerRequestOptionsComponent,
        DxReportDesignerComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxReportDesignerModule, [{
        type: NgModule,
        args: [{
                id: "DxReportDesignerModule",
                imports: [CommonModule],
                declarations: [
                    DxReportDesignerCallbacksComponent,
                    DxReportDesignerRequestOptionsComponent,
                    DxReportDesignerComponent
                ],
                exports: [
                    DxReportDesignerCallbacksComponent,
                    DxReportDesignerRequestOptionsComponent,
                    DxReportDesignerComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return DxReportDesignerModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

export { DxReportViewerModule, DxReportDesignerModule, DxReportDesignerComponent, DxReportViewerComponent, DxReportDesignerCallbacksComponent as ɵg, DxReportDesignerRequestOptionsComponent as ɵh, DxReportViewerCallbacksComponent as ɵc, DxReportViewerMobileModeSettingsComponent as ɵd, DxReportViewerRemoteSettingsComponent as ɵe, DxReportViewerRequestOptionsComponent as ɵb, DxReportViewerTabPanelSettingsComponent as ɵf, DxReportingComponent as ɵa };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,