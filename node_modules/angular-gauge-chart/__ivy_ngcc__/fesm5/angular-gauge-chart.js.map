{"version":3,"file":"angular-gauge-chart.js","sources":["ng:/angular-gauge-chart/lib/gauge-chart.component.ts","ng:/angular-gauge-chart/lib/gauge-chart.module.ts"],"names":["GaugeChart.gaugeChart"],"mappings":"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","sourcesContent":["/**\n * Angular 2 decorators and services\n */\nimport {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  ViewChild,\n  DoCheck,\n} from '@angular/core'\nimport * as GaugeChart from 'gauge-chart'\n\n/**\n * GaugeChart Component\n */\n@Component({\n  selector: 'rg-gauge-chart',\n  templateUrl: './gauge-chart.component.html',\n  styleUrls: ['./gauge-chart.component.css'],\n})\nexport class GaugeChartComponent implements OnInit, OnChanges, DoCheck {\n  @ViewChild('gaugeArea', { static: true }) gaugeArea\n\n  @Input() canvasWidth: number\n  @Input() needleValue: number\n  @Input() centralLabel: string\n  @Input() options\n  @Input() wrapOptions?\n  @Input() name?: string\n  @Input() nameFont?: string\n  @Input() bottomLabel?: string\n  @Input() bottomLabelFont?: string\n\n  public nameMargin: string\n  public bottomLabelMargin: string\n\n  private element\n  private gaugeChart: any\n  private oldOptions\n\n  ngOnInit() {\n    // calculate styles for name and bottomLabel\n    if (this.name) {\n      if (!this.nameFont) {\n        this.nameFont = '' + Math.round(this.canvasWidth / 15)\n      }\n      this.nameMargin = '' + Math.round(+this.nameFont / 4)\n    }\n\n    if (this.bottomLabel) {\n      if (!this.bottomLabelFont) {\n        this.bottomLabelFont = '' + Math.round(this.canvasWidth / 10)\n      }\n      this.bottomLabelMargin = '-' + this.bottomLabelFont\n    }\n\n    if (this.optionsCheck()) {\n      this.element = this.gaugeArea.nativeElement\n      this.drawChart()\n    }\n    this.oldOptions = JSON.parse(JSON.stringify(this.options))\n  }\n\n  optionsCheck() {\n    if (this.canvasWidth == null) {\n      console.warn('gauge-chart warning: canvasWidth is not specified!')\n      return false\n    } else if (this.needleValue == null) {\n      console.warn('gauge-chart warning: needleValue is not specified!')\n      return false\n    }\n    if (this.centralLabel == null) {\n      this.centralLabel = ''\n    }\n    return true\n  }\n\n  ngDoCheck() {\n    if (!this.areEqual(this.options, this.oldOptions)) {\n      this.drawChart(true)\n      this.oldOptions = JSON.parse(JSON.stringify(this.options))\n    }\n  }\n\n  areEqual(obj1, obj2) {\n    return JSON.stringify(obj1) === JSON.stringify(obj2)\n  }\n\n  drawChart(redraw = false) {\n    if (redraw) {\n      this.gaugeChart.removeGauge()\n    }\n    this.options.centralLabel = this.centralLabel\n    this.gaugeChart = GaugeChart.gaugeChart(\n      this.element,\n      this.canvasWidth,\n      this.options,\n    )\n    this.gaugeChart.updateNeedle(this.needleValue)\n  }\n\n  ngOnChanges(changes) {\n    if (changes.needleValue && !changes.needleValue.firstChange) {\n      this.needleValue = changes.needleValue.currentValue\n      this.gaugeChart.updateNeedle(this.needleValue)\n    }\n    if (changes.centralLabel && !changes.centralLabel.firstChange) {\n      this.centralLabel = changes.centralLabel.currentValue\n      this.drawChart(true)\n    }\n  }\n}\n","import { NgModule } from '@angular/core'\nimport { GaugeChartComponent } from './gauge-chart.component'\n\n@NgModule({\n  imports: [],\n  declarations: [GaugeChartComponent],\n  exports: [GaugeChartComponent],\n})\nexport class GaugeChartModule {}\n"]}