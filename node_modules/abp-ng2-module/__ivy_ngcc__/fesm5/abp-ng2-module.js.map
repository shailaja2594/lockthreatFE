{"version":3,"file":"abp-ng2-module.js","sources":["ng:/abp-ng2-module/lib/abp.module.ts","ng:/abp-ng2-module/lib/services/auth/token.service.ts","ng:/abp-ng2-module/lib/services/auth/permission-checker.service.ts","ng:/abp-ng2-module/lib/services/features/feature-checker.service.ts","ng:/abp-ng2-module/lib/services/localization/localization.service.ts","ng:/abp-ng2-module/lib/services/log/log.service.ts","ng:/abp-ng2-module/lib/services/message/message.service.ts","ng:/abp-ng2-module/lib/services/multi-tenancy/abp-multi-tenancy.service.ts","ng:/abp-ng2-module/lib/services/notify/notify.service.ts","ng:/abp-ng2-module/lib/services/session/abp-session.service.ts","ng:/abp-ng2-module/lib/services/settings/setting.service.ts","ng:/abp-ng2-module/lib/services/utils/utils.service.ts","ng:/abp-ng2-module/lib/services/abp-user-configuration.service.ts","ng:/abp-ng2-module/lib/interceptors/abp-http-configuration.service.ts","ng:/abp-ng2-module/lib/interceptors/refresh-token.service.ts","ng:/abp-ng2-module/lib/interceptors/abpHttpInterceptor.ts","ng:/abp-ng2-module/public-api.ts","ng:/abp-ng2-module/abp-ng2-module.ts"],"names":[],"mappings":"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","sourcesContent":["import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [\n  ],\n  exports: []\n})\nexport class AbpModule { }\n","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TokenService {\r\n\r\n    getToken(): string {\r\n        return abp.auth.getToken();\r\n    }\r\n\r\n    getTokenCookieName(): string {\r\n        return abp.auth.tokenCookieName;\r\n    }\r\n\r\n    clearToken(): void {\r\n        abp.auth.clearToken();\r\n    }\r\n\r\n    setToken(authToken: string, expireDate?: Date): void {\r\n        abp.auth.setToken(authToken, expireDate);\r\n    }\r\n\r\n    //refresh token\r\n    getRefreshToken(): string {\r\n        return abp.auth.getRefreshToken();\r\n    }\r\n\r\n    getRefreshTokenCookieName(): string {\r\n        return abp.auth.refreshTokenCookieName;\r\n    }\r\n\r\n    clearRefreshToken(): void {\r\n        abp.auth.clearRefreshToken();\r\n    }\r\n\r\n    setRefreshToken(refreshToken: string, expireDate?: Date): void {\r\n        abp.auth.setRefreshToken(refreshToken, expireDate);\r\n    }\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PermissionCheckerService {\r\n\r\n    isGranted(permissionName: string): boolean {\r\n        return abp.auth.isGranted(permissionName);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FeatureCheckerService {\r\n\r\n    get(featureName: string): abp.features.IFeature {\r\n        return abp.features.get(featureName);\r\n    }\r\n\r\n    getValue(featureName: string): string {\r\n        return abp.features.getValue(featureName);\r\n    }\r\n\r\n    isEnabled(featureName: string): boolean {\r\n        return abp.features.isEnabled(featureName);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LocalizationService {\r\n\r\n    get languages(): abp.localization.ILanguageInfo[] {\r\n        return abp.localization.languages;\r\n    }\r\n\r\n    get currentLanguage(): abp.localization.ILanguageInfo {\r\n        return abp.localization.currentLanguage;\r\n    }\r\n\r\n    localize(key: string, sourceName: string): string {\r\n        return abp.localization.localize(key, sourceName);\r\n    }\r\n    \r\n    getSource(sourceName: string): (...key: string[]) => string {\r\n        return abp.localization.getSource(sourceName);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LogService {\r\n\r\n    debug(logObject?: any): void {\r\n        abp.log.debug(logObject);\r\n    }\r\n\r\n    info(logObject?: any): void {\r\n        abp.log.info(logObject);\r\n    }\r\n\r\n    warn(logObject?: any): void {\r\n        abp.log.warn(logObject);\r\n    }\r\n\r\n    error(logObject?: any): void {\r\n        abp.log.error(logObject);\r\n    }\r\n\r\n    fatal(logObject?: any): void {\r\n        abp.log.fatal(logObject);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n\r\n    info(message: string, title?: string, options?: any): any {\r\n        return abp.message.info(message, title, options);\r\n    }\r\n\r\n    success(message: string, title?: string, options?: any): any {\r\n        return abp.message.success(message, title, options);\r\n    }\r\n\r\n    warn(message: string, title?: string, options?: any): any {\r\n        return abp.message.warn(message, title, options);\r\n    }\r\n\r\n    error(message: string, title?: string, options?: any): any {\r\n        return abp.message.error(message, title, options);\r\n    }\r\n\r\n    confirm(message: string, title?: string, callback?: (result: boolean) => void, options?: any): any {\r\n        return abp.message.confirm(message, title, callback, options);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AbpMultiTenancyService {\r\n\r\n    get isEnabled(): boolean {\r\n        return abp.multiTenancy.isEnabled;\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class NotifyService {\r\n\r\n    info(message: string, title?: string, options?: any): void {\r\n        abp.notify.info(message, title, options);\r\n    }\r\n\r\n    success(message: string, title?: string, options?: any): void {\r\n        abp.notify.success(message, title, options);\r\n    }\r\n\r\n    warn(message: string, title?: string, options?: any): void {\r\n        abp.notify.warn(message, title, options);\r\n    }\r\n\r\n    error(message: string, title?: string, options?: any): void {\r\n        abp.notify.error(message, title, options);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AbpSessionService {\r\n\r\n    get userId(): number | undefined {\r\n        return abp.session.userId;\r\n    }\r\n\r\n    get tenantId(): number | undefined {\r\n        return abp.session.tenantId;\r\n    }\r\n\r\n    get impersonatorUserId(): number | undefined {\r\n        return abp.session.impersonatorUserId;\r\n    }\r\n\r\n    get impersonatorTenantId(): number | undefined {\r\n        return abp.session.impersonatorTenantId;\r\n    }\r\n\r\n    get multiTenancySide(): abp.multiTenancy.sides {\r\n        return abp.session.multiTenancySide;\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SettingService {\r\n\r\n    get(name: string): string {\r\n        return abp.setting.get(name);\r\n    }\r\n\r\n    getBoolean(name: string): boolean {\r\n        return abp.setting.getBoolean(name);\r\n    }\r\n    \r\n    getInt(name: string): number {\r\n        return abp.setting.getInt(name);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UtilsService {\r\n\r\n    getCookieValue(key: string): string {\r\n        return abp.utils.getCookieValue(key);\r\n    }\r\n\r\n    setCookieValue(key: string, value: string, expireDate?: Date, path?: string): void {\r\n        abp.utils.setCookieValue(key, value, expireDate, path);\r\n    }\r\n\r\n    deleteCookie(key: string, path?: string): void {\r\n        abp.utils.deleteCookie(key, path);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\ndeclare var jQuery: any;\r\ndeclare var abp: any;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AbpUserConfigurationService {\r\n\r\n    constructor(private _http: HttpClient) {\r\n        \r\n    }\r\n\r\n    initialize(): void {\r\n        this._http.get('/AbpUserConfiguration/GetAll')\r\n            .subscribe(result => {\r\n                jQuery.extend(true, abp, JSON.parse(JSON.stringify(result)));\r\n            });\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { MessageService } from '../services/message/message.service';\r\nimport { LogService } from '../services/log/log.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { IErrorInfo, IAjaxResponse } from '../models';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AbpHttpConfigurationService {\r\n\r\n    constructor(\r\n        private _messageService: MessageService,\r\n        private _logService: LogService) {\r\n    }\r\n\r\n    defaultError = <IErrorInfo>{\r\n        message: 'An error has occurred!',\r\n        details: 'Error details were not sent by server.'\r\n    };\r\n\r\n    defaultError401 = <IErrorInfo>{\r\n        message: 'You are not authenticated!',\r\n        details: 'You should be authenticated (sign in) in order to perform this operation.'\r\n    };\r\n\r\n    defaultError403 = <IErrorInfo>{\r\n        message: 'You are not authorized!',\r\n        details: 'You are not allowed to perform this operation.'\r\n    };\r\n\r\n    defaultError404 = <IErrorInfo>{\r\n        message: 'Resource not found!',\r\n        details: 'The resource requested could not be found on the server.'\r\n    };\r\n\r\n    logError(error: IErrorInfo): void {\r\n        this._logService.error(error);\r\n    }\r\n\r\n    showError(error: IErrorInfo): any {\r\n        if (error.details) {\r\n            return this._messageService.error(error.details, error.message || this.defaultError.message);\r\n        } else {\r\n            return this._messageService.error(error.message || this.defaultError.message);\r\n        }\r\n    }\r\n\r\n    handleTargetUrl(targetUrl: string): void {\r\n        if (!targetUrl) {\r\n            location.href = '/';\r\n        } else {\r\n            location.href = targetUrl;\r\n        }\r\n    }\r\n\r\n    handleUnAuthorizedRequest(messagePromise: any, targetUrl?: string) {\r\n        const self = this;\r\n\r\n        if (messagePromise) {\r\n            messagePromise.done(() => {\r\n                this.handleTargetUrl(targetUrl || '/');\r\n            });\r\n        } else {\r\n            self.handleTargetUrl(targetUrl || '/');\r\n        }\r\n    }\r\n\r\n    handleNonAbpErrorResponse(response: HttpResponse<any>) {\r\n        const self = this;\r\n\r\n        switch (response.status) {\r\n            case 401:\r\n                self.handleUnAuthorizedRequest(\r\n                    self.showError(self.defaultError401),\r\n                    '/'\r\n                );\r\n                break;\r\n            case 403:\r\n                self.showError(self.defaultError403);\r\n                break;\r\n            case 404:\r\n                self.showError(self.defaultError404);\r\n                break;\r\n            default:\r\n                self.showError(self.defaultError);\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleAbpResponse(response: HttpResponse<any>, ajaxResponse: IAjaxResponse): HttpResponse<any> {\r\n        var newResponse: HttpResponse<any>;\r\n\r\n        if (ajaxResponse.success) {\r\n\r\n            newResponse = response.clone({\r\n                body: ajaxResponse.result\r\n            });\r\n\r\n            if (ajaxResponse.targetUrl) {\r\n                this.handleTargetUrl(ajaxResponse.targetUrl);;\r\n            }\r\n        } else {\r\n\r\n            newResponse = response.clone({\r\n                body: ajaxResponse.result\r\n            });\r\n\r\n            if (!ajaxResponse.error) {\r\n                ajaxResponse.error = this.defaultError;\r\n            }\r\n\r\n            this.logError(ajaxResponse.error);\r\n            this.showError(ajaxResponse.error);\r\n\r\n            if (response.status === 401) {\r\n                this.handleUnAuthorizedRequest(null, ajaxResponse.targetUrl);\r\n            }\r\n        }\r\n\r\n        return newResponse;\r\n    }\r\n\r\n    getAbpAjaxResponseOrNull(response: HttpResponse<any>): IAjaxResponse | null {\r\n        if (!response || !response.headers) {\r\n            return null;\r\n        }\r\n\r\n        var contentType = response.headers.get('Content-Type');\r\n        if (!contentType) {\r\n            this._logService.warn('Content-Type is not sent!');\r\n            return null;\r\n        }\r\n\r\n        if (contentType.indexOf(\"application/json\") < 0) {\r\n            this._logService.warn('Content-Type is not application/json: ' + contentType);\r\n            return null;\r\n        }\r\n\r\n        var responseObj = JSON.parse(JSON.stringify(response.body));\r\n        if (!responseObj.__abp) {\r\n            return null;\r\n        }\r\n\r\n        return responseObj as IAjaxResponse;\r\n    }\r\n\r\n    handleResponse(response: HttpResponse<any>): HttpResponse<any> {\r\n        var ajaxResponse = this.getAbpAjaxResponseOrNull(response);\r\n        if (ajaxResponse == null) {\r\n            return response;\r\n        }\r\n\r\n        return this.handleAbpResponse(response, ajaxResponse);\r\n    }\r\n\r\n    blobToText(blob: any): Observable<string> {\r\n        return new Observable<string>((observer: any) => {\r\n            if (!blob) {\r\n                observer.next(\"\");\r\n                observer.complete();\r\n            } else {\r\n                let reader = new FileReader();\r\n                reader.onload = function () {\r\n                    observer.next(this.result);\r\n                    observer.complete();\r\n                }\r\n                reader.readAsText(blob);\r\n            }\r\n        });\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport abstract class RefreshTokenService {\r\n    /**\r\n     * Try to authenticate with refresh token and return if auth succeed\r\n     */\r\n    abstract tryAuthWithRefreshToken(): Observable<boolean>;\r\n}","import { Injectable, Injector } from '@angular/core';\r\nimport { Observable, of, BehaviorSubject } from 'rxjs';\r\nimport { LogService } from '../services/log/log.service';\r\nimport { TokenService } from '../services/auth/token.service';\r\nimport { UtilsService } from '../services/utils/utils.service';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpResponse, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { switchMap, filter, take, catchError, tap, map } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs/internal/observable/throwError';\r\nimport { AbpHttpConfigurationService } from './abp-http-configuration.service'\r\nimport { RefreshTokenService } from './refresh-token.service'\r\ndeclare const abp: any;\r\n\r\n@Injectable()\r\nexport class AbpHttpInterceptor implements HttpInterceptor {\r\n\r\n    protected configuration: AbpHttpConfigurationService;\r\n    private _tokenService: TokenService = new TokenService();\r\n    private _utilsService: UtilsService = new UtilsService();\r\n    private _logService: LogService = new LogService();\r\n\r\n    constructor(configuration: AbpHttpConfigurationService,\r\n        private _injector: Injector) {\r\n        this.configuration = configuration;\r\n    }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        var modifiedRequest = this.normalizeRequestHeaders(request);\r\n        return next.handle(modifiedRequest)\r\n            .pipe(\r\n                catchError(error => {\r\n                    if (error instanceof HttpErrorResponse && error.status === 401) {\r\n                        return this.tryAuthWithRefreshToken(request, next, error);\r\n                    } else {\r\n                        return this.handleErrorResponse(error);\r\n                    }\r\n                }),\r\n                switchMap((event) => {\r\n                    return this.handleSuccessResponse(event);\r\n                })\r\n            );\r\n    }\r\n\r\n    protected tryGetRefreshTokenService(): Observable<boolean> {\r\n        var _refreshTokenService = this._injector.get(RefreshTokenService, null);\r\n\r\n        if (_refreshTokenService) {\r\n            return _refreshTokenService.tryAuthWithRefreshToken();\r\n        }\r\n        return of(false);\r\n    }\r\n\r\n    private isRefreshing = false;\r\n    private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n\r\n    private tryAuthWithRefreshToken(request: HttpRequest<any>, next: HttpHandler, error: any) {\r\n        if (!this.isRefreshing) {\r\n            this.isRefreshing = true;\r\n            this.refreshTokenSubject.next(null);\r\n\r\n            return this.tryGetRefreshTokenService().pipe(\r\n                switchMap((authResult: boolean) => {\r\n                    this.isRefreshing = false;\r\n                    if (authResult) {\r\n                        this.refreshTokenSubject.next(authResult);\r\n                        let modifiedRequest = this.normalizeRequestHeaders(request);\r\n                        return next.handle(modifiedRequest);\r\n                    } else {\r\n                        return this.handleErrorResponse(error);\r\n                    }\r\n                }));\r\n        } else {\r\n            return this.refreshTokenSubject.pipe(\r\n                filter(authResult => authResult != null),\r\n                take(1),\r\n                switchMap(authResult => {\r\n                    let modifiedRequest = this.normalizeRequestHeaders(request);\r\n                    return next.handle(modifiedRequest);\r\n                }));\r\n        }\r\n    }\r\n\r\n    protected normalizeRequestHeaders(request: HttpRequest<any>): HttpRequest<any> {\r\n        var modifiedHeaders = new HttpHeaders();\r\n        modifiedHeaders = request.headers.set(\"Pragma\", \"no-cache\")\r\n            .set(\"Cache-Control\", \"no-cache\")\r\n            .set(\"Expires\", \"Sat, 01 Jan 2000 00:00:00 GMT\");\r\n\r\n        modifiedHeaders = this.addXRequestedWithHeader(modifiedHeaders);\r\n        modifiedHeaders = this.addAuthorizationHeaders(modifiedHeaders);\r\n        modifiedHeaders = this.addAspNetCoreCultureHeader(modifiedHeaders);\r\n        modifiedHeaders = this.addAcceptLanguageHeader(modifiedHeaders);\r\n        modifiedHeaders = this.addTenantIdHeader(modifiedHeaders);\r\n\r\n        return request.clone({\r\n            headers: modifiedHeaders\r\n        });\r\n    }\r\n\r\n    protected addXRequestedWithHeader(headers: HttpHeaders): HttpHeaders {\r\n        if (headers) {\r\n            headers = headers.set('X-Requested-With', 'XMLHttpRequest');\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected addAspNetCoreCultureHeader(headers: HttpHeaders): HttpHeaders {\r\n        let cookieLangValue = this._utilsService.getCookieValue(\"Abp.Localization.CultureName\");\r\n        if (cookieLangValue && headers && !headers.has('.AspNetCore.Culture')) {\r\n            headers = headers.set('.AspNetCore.Culture', cookieLangValue);\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected addAcceptLanguageHeader(headers: HttpHeaders): HttpHeaders {\r\n        let cookieLangValue = this._utilsService.getCookieValue(\"Abp.Localization.CultureName\");\r\n        if (cookieLangValue && headers && !headers.has('Accept-Language')) {\r\n            headers = headers.set('Accept-Language', cookieLangValue);\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected addTenantIdHeader(headers: HttpHeaders): HttpHeaders {\r\n        let cookieTenantIdValue = this._utilsService.getCookieValue(abp.multiTenancy.tenantIdCookieName);\r\n        if (cookieTenantIdValue && headers && !headers.has(abp.multiTenancy.tenantIdCookieName)) {\r\n            headers = headers.set(abp.multiTenancy.tenantIdCookieName, cookieTenantIdValue);\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected addAuthorizationHeaders(headers: HttpHeaders): HttpHeaders {\r\n        let authorizationHeaders = headers ? headers.getAll('Authorization') : null;\r\n        if (!authorizationHeaders) {\r\n            authorizationHeaders = [];\r\n        }\r\n\r\n        if (!this.itemExists(authorizationHeaders, (item: string) => item.indexOf('Bearer ') == 0)) {\r\n            let token = this._tokenService.getToken();\r\n            if (headers && token) {\r\n                headers = headers.set('Authorization', 'Bearer ' + token);\r\n            }\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected handleSuccessResponse(event: HttpEvent<any>): Observable<HttpEvent<any>> {\r\n        var self = this;\r\n\r\n        if (event instanceof HttpResponse) {\r\n            if (event.body instanceof Blob && event.body.type && event.body.type.indexOf(\"application/json\") >= 0) {\r\n                return self.configuration.blobToText(event.body).pipe(\r\n                    map(\r\n                        json => {\r\n                            const responseBody = json == \"null\" ? {} : JSON.parse(json);\r\n\r\n                            var modifiedResponse = self.configuration.handleResponse(event.clone({\r\n                                body: responseBody\r\n                            }));\r\n\r\n                            return modifiedResponse.clone({\r\n                                body: new Blob([JSON.stringify(modifiedResponse.body)], { type: 'application/json' })\r\n                            });\r\n                        })\r\n                );\r\n            }\r\n        }\r\n        return of(event);\r\n    }\r\n\r\n    protected handleErrorResponse(error: any): Observable<never> {\r\n        if (!(error.error instanceof Blob)) {\r\n            return throwError(error);\r\n        }\r\n\r\n        return this.configuration.blobToText(error.error).pipe(\r\n            switchMap((json) => {\r\n                const errorBody = (json == \"\" || json == \"null\") ? {} : JSON.parse(json);\r\n                const errorResponse = new HttpResponse({\r\n                    headers: error.headers,\r\n                    status: error.status,\r\n                    body: errorBody\r\n                });\r\n\r\n                var ajaxResponse = this.configuration.getAbpAjaxResponseOrNull(errorResponse);\r\n\r\n                if (ajaxResponse != null) {\r\n                    this.configuration.handleAbpResponse(errorResponse, ajaxResponse);\r\n                } else {\r\n                    this.configuration.handleNonAbpErrorResponse(errorResponse);\r\n                }\r\n\r\n                return throwError(error);\r\n            })\r\n        );\r\n    }\r\n\r\n    private itemExists<T>(items: T[], predicate: (item: T) => boolean): boolean {\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (predicate(items[i])) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","/*\n * Public API Surface of abp-ng2-module\n */\n\nexport * from './lib/abp.module';\nexport * from './lib/services/';\nexport * from './lib/interceptors/';\nexport * from './lib/models/';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}