{"version":3,"file":"counto.directive.js","sources":["counto.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, Input, Output, EventEmitter } from '@angular/core';\n\n@Directive({\n    selector: '[counto]'\n})\n\nexport class CountoDirective {\n\n    @Output() countoChange = new EventEmitter();\n    @Output() countoEnd = new EventEmitter();\n    private _timer: any;\n    private _duration: number;\n    private _countTo: number;\n    private _countFrom: number;\n    private _step: number;\n\n    @Input()\n    set duration(duration: string) {\n        this._duration = parseFloat(duration);\n        this.run();\n    }\n\n    @Input()\n    set countTo(countTo: string) {\n        this._countTo = parseFloat(countTo);\n        this.run();\n    }\n\n    @Input()\n    set countFrom(countFrom: string) {\n        this._countFrom = parseFloat(countFrom);\n        this.run();\n    }\n\n    @Input()\n    set step(step: string) {\n        this._step = parseFloat(step);\n        this.run();\n    }\n\n    run() {\n        var _this = this;\n        clearInterval(_this._timer);\n\n        if (isNaN(_this._duration)) {\n            return false;\n        }\n\n        if (isNaN(_this._step)) {\n            return false;\n        }\n\n        if (isNaN(_this._countFrom)) {\n            return false;\n        }\n\n        if (isNaN(_this._countTo)) {\n            return false;\n        }\n\n        if (_this._step <= 0) {\n            console.info('Step must be greater than 0.');\n            return false;\n        }\n\n        if (_this._duration <= 0) {\n            console.info('Duration must be greater than 0.');\n            return false;\n        }\n\n        if (_this._step > _this._duration*1000) {\n            console.info('Step must be equal or smaller than duration.');\n            return false;\n        }\n\n        var intermediate  = _this._countFrom;\n        var increment     = Math.abs(_this._countTo - _this._countFrom) / ((_this._duration * 1000) / _this._step);\n\n        _this.countoChange.emit(intermediate);\n\n        _this._timer = setInterval(function() {\n            if (_this._countTo < _this._countFrom) {\n                if (intermediate <= _this._countTo) {\n                    clearInterval(_this._timer);\n                    _this.countoChange.emit(_this._countTo);\n                    _this.countoEnd.emit();\n                } else {\n                    _this.countoChange.emit(intermediate);\n                    intermediate -= increment;\n                }\n            } else {\n                if (intermediate >= _this._countTo) {\n                    clearInterval(_this._timer);\n                    _this.countoChange.emit(_this._countTo);\n                    _this.countoEnd.emit();\n                } else {\n                    _this.countoChange.emit(intermediate);\n                    intermediate += increment;\n                }\n            }\n        }, _this._step);\n    }\n}\n"]}