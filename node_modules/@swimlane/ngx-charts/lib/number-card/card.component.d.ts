import { EventEmitter, ElementRef, SimpleChanges, OnChanges, ChangeDetectorRef, NgZone, OnDestroy } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class CardComponent implements OnChanges, OnDestroy {
    private cd;
    private zone;
    color: any;
    bandColor: any;
    textColor: any;
    x: any;
    y: any;
    width: any;
    height: any;
    label: any;
    data: any;
    medianSize: number;
    valueFormatting: any;
    labelFormatting: any;
    animations: boolean;
    select: EventEmitter<any>;
    textEl: ElementRef;
    element: HTMLElement;
    value: string;
    transform: string;
    formattedLabel: string;
    cardWidth: number;
    cardHeight: number;
    textWidth: number;
    textFontSize: number;
    textTransform: string;
    initialized: boolean;
    animationReq: any;
    bandHeight: number;
    transformBand: string;
    textPadding: number[];
    labelFontSize: number;
    bandPath: string;
    constructor(element: ElementRef, cd: ChangeDetectorRef, zone: NgZone);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    update(): void;
    paddedValue(value: string): string;
    startCount(): void;
    scaleText(): void;
    setPadding(): void;
    onClick(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CardComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CardComponent, "g[ngx-charts-card]", never, { "animations": "animations"; "color": "color"; "bandColor": "bandColor"; "textColor": "textColor"; "x": "x"; "y": "y"; "width": "width"; "height": "height"; "label": "label"; "data": "data"; "medianSize": "medianSize"; "valueFormatting": "valueFormatting"; "labelFormatting": "labelFormatting"; }, { "select": "select"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiY2FyZC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIEVsZW1lbnRSZWYsIFNpbXBsZUNoYW5nZXMsIE9uQ2hhbmdlcywgQ2hhbmdlRGV0ZWN0b3JSZWYsIE5nWm9uZSwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDYXJkQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgY2Q7XG4gICAgcHJpdmF0ZSB6b25lO1xuICAgIGNvbG9yOiBhbnk7XG4gICAgYmFuZENvbG9yOiBhbnk7XG4gICAgdGV4dENvbG9yOiBhbnk7XG4gICAgeDogYW55O1xuICAgIHk6IGFueTtcbiAgICB3aWR0aDogYW55O1xuICAgIGhlaWdodDogYW55O1xuICAgIGxhYmVsOiBhbnk7XG4gICAgZGF0YTogYW55O1xuICAgIG1lZGlhblNpemU6IG51bWJlcjtcbiAgICB2YWx1ZUZvcm1hdHRpbmc6IGFueTtcbiAgICBsYWJlbEZvcm1hdHRpbmc6IGFueTtcbiAgICBhbmltYXRpb25zOiBib29sZWFuO1xuICAgIHNlbGVjdDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgdGV4dEVsOiBFbGVtZW50UmVmO1xuICAgIGVsZW1lbnQ6IEhUTUxFbGVtZW50O1xuICAgIHZhbHVlOiBzdHJpbmc7XG4gICAgdHJhbnNmb3JtOiBzdHJpbmc7XG4gICAgZm9ybWF0dGVkTGFiZWw6IHN0cmluZztcbiAgICBjYXJkV2lkdGg6IG51bWJlcjtcbiAgICBjYXJkSGVpZ2h0OiBudW1iZXI7XG4gICAgdGV4dFdpZHRoOiBudW1iZXI7XG4gICAgdGV4dEZvbnRTaXplOiBudW1iZXI7XG4gICAgdGV4dFRyYW5zZm9ybTogc3RyaW5nO1xuICAgIGluaXRpYWxpemVkOiBib29sZWFuO1xuICAgIGFuaW1hdGlvblJlcTogYW55O1xuICAgIGJhbmRIZWlnaHQ6IG51bWJlcjtcbiAgICB0cmFuc2Zvcm1CYW5kOiBzdHJpbmc7XG4gICAgdGV4dFBhZGRpbmc6IG51bWJlcltdO1xuICAgIGxhYmVsRm9udFNpemU6IG51bWJlcjtcbiAgICBiYW5kUGF0aDogc3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQ6IEVsZW1lbnRSZWYsIGNkOiBDaGFuZ2VEZXRlY3RvclJlZiwgem9uZTogTmdab25lKTtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIHVwZGF0ZSgpOiB2b2lkO1xuICAgIHBhZGRlZFZhbHVlKHZhbHVlOiBzdHJpbmcpOiBzdHJpbmc7XG4gICAgc3RhcnRDb3VudCgpOiB2b2lkO1xuICAgIHNjYWxlVGV4dCgpOiB2b2lkO1xuICAgIHNldFBhZGRpbmcoKTogdm9pZDtcbiAgICBvbkNsaWNrKCk6IHZvaWQ7XG59XG4iXX0=