import { ElementRef, AfterViewInit, EventEmitter, TemplateRef } from '@angular/core';
import { BaseChartComponent } from '../common/base-chart.component';
import { ViewDimensions } from '../common/view-dimensions.helper';
import { ColorHelper } from '../common/color.helper';
import * as ɵngcc0 from '@angular/core';
export declare class GaugeComponent extends BaseChartComponent implements AfterViewInit {
    legend: boolean;
    legendTitle: string;
    legendPosition: string;
    min: number;
    max: number;
    textValue: string;
    units: string;
    bigSegments: number;
    smallSegments: number;
    results: any[];
    showAxis: boolean;
    startAngle: number;
    angleSpan: number;
    activeEntries: any[];
    axisTickFormatting: any;
    tooltipDisabled: boolean;
    valueFormatting: (value: any) => string;
    showText: boolean;
    margin: any[];
    activate: EventEmitter<any>;
    deactivate: EventEmitter<any>;
    tooltipTemplate: TemplateRef<any>;
    textEl: ElementRef;
    dims: ViewDimensions;
    domain: any[];
    valueDomain: any;
    valueScale: any;
    colors: ColorHelper;
    transform: string;
    outerRadius: number;
    textRadius: number;
    resizeScale: number;
    rotation: string;
    textTransform: string;
    cornerRadius: number;
    arcs: any[];
    displayValue: string;
    legendOptions: any;
    ngAfterViewInit(): void;
    update(): void;
    getArcs(): any[];
    getDomain(): any[];
    getValueDomain(): any[];
    getValueScale(): any;
    getDisplayValue(): string;
    scaleText(repeat?: boolean): void;
    onClick(data: any): void;
    getLegendOptions(): any;
    setColors(): void;
    onActivate(item: any): void;
    onDeactivate(item: any): void;
    isActive(entry: any): boolean;
    trackBy(index: any, item: any): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GaugeComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<GaugeComponent, "ngx-charts-gauge", never, { "margin": "margin"; "startAngle": "startAngle"; "angleSpan": "angleSpan"; "min": "min"; "max": "max"; "activeEntries": "activeEntries"; "legend": "legend"; "legendTitle": "legendTitle"; "legendPosition": "legendPosition"; "textValue": "textValue"; "units": "units"; "bigSegments": "bigSegments"; "smallSegments": "smallSegments"; "results": "results"; "showAxis": "showAxis"; "axisTickFormatting": "axisTickFormatting"; "tooltipDisabled": "tooltipDisabled"; "valueFormatting": "valueFormatting"; "showText": "showText"; }, { "activate": "activate"; "deactivate": "deactivate"; }, ["tooltipTemplate"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2F1Z2UuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImdhdWdlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBBZnRlclZpZXdJbml0LCBFdmVudEVtaXR0ZXIsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYXNlQ2hhcnRDb21wb25lbnQgfSBmcm9tICcuLi9jb21tb24vYmFzZS1jaGFydC5jb21wb25lbnQnO1xuaW1wb3J0IHsgVmlld0RpbWVuc2lvbnMgfSBmcm9tICcuLi9jb21tb24vdmlldy1kaW1lbnNpb25zLmhlbHBlcic7XG5pbXBvcnQgeyBDb2xvckhlbHBlciB9IGZyb20gJy4uL2NvbW1vbi9jb2xvci5oZWxwZXInO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgR2F1Z2VDb21wb25lbnQgZXh0ZW5kcyBCYXNlQ2hhcnRDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcbiAgICBsZWdlbmQ6IGJvb2xlYW47XG4gICAgbGVnZW5kVGl0bGU6IHN0cmluZztcbiAgICBsZWdlbmRQb3NpdGlvbjogc3RyaW5nO1xuICAgIG1pbjogbnVtYmVyO1xuICAgIG1heDogbnVtYmVyO1xuICAgIHRleHRWYWx1ZTogc3RyaW5nO1xuICAgIHVuaXRzOiBzdHJpbmc7XG4gICAgYmlnU2VnbWVudHM6IG51bWJlcjtcbiAgICBzbWFsbFNlZ21lbnRzOiBudW1iZXI7XG4gICAgcmVzdWx0czogYW55W107XG4gICAgc2hvd0F4aXM6IGJvb2xlYW47XG4gICAgc3RhcnRBbmdsZTogbnVtYmVyO1xuICAgIGFuZ2xlU3BhbjogbnVtYmVyO1xuICAgIGFjdGl2ZUVudHJpZXM6IGFueVtdO1xuICAgIGF4aXNUaWNrRm9ybWF0dGluZzogYW55O1xuICAgIHRvb2x0aXBEaXNhYmxlZDogYm9vbGVhbjtcbiAgICB2YWx1ZUZvcm1hdHRpbmc6ICh2YWx1ZTogYW55KSA9PiBzdHJpbmc7XG4gICAgc2hvd1RleHQ6IGJvb2xlYW47XG4gICAgbWFyZ2luOiBhbnlbXTtcbiAgICBhY3RpdmF0ZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgZGVhY3RpdmF0ZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgdG9vbHRpcFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIHRleHRFbDogRWxlbWVudFJlZjtcbiAgICBkaW1zOiBWaWV3RGltZW5zaW9ucztcbiAgICBkb21haW46IGFueVtdO1xuICAgIHZhbHVlRG9tYWluOiBhbnk7XG4gICAgdmFsdWVTY2FsZTogYW55O1xuICAgIGNvbG9yczogQ29sb3JIZWxwZXI7XG4gICAgdHJhbnNmb3JtOiBzdHJpbmc7XG4gICAgb3V0ZXJSYWRpdXM6IG51bWJlcjtcbiAgICB0ZXh0UmFkaXVzOiBudW1iZXI7XG4gICAgcmVzaXplU2NhbGU6IG51bWJlcjtcbiAgICByb3RhdGlvbjogc3RyaW5nO1xuICAgIHRleHRUcmFuc2Zvcm06IHN0cmluZztcbiAgICBjb3JuZXJSYWRpdXM6IG51bWJlcjtcbiAgICBhcmNzOiBhbnlbXTtcbiAgICBkaXNwbGF5VmFsdWU6IHN0cmluZztcbiAgICBsZWdlbmRPcHRpb25zOiBhbnk7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgdXBkYXRlKCk6IHZvaWQ7XG4gICAgZ2V0QXJjcygpOiBhbnlbXTtcbiAgICBnZXREb21haW4oKTogYW55W107XG4gICAgZ2V0VmFsdWVEb21haW4oKTogYW55W107XG4gICAgZ2V0VmFsdWVTY2FsZSgpOiBhbnk7XG4gICAgZ2V0RGlzcGxheVZhbHVlKCk6IHN0cmluZztcbiAgICBzY2FsZVRleHQocmVwZWF0PzogYm9vbGVhbik6IHZvaWQ7XG4gICAgb25DbGljayhkYXRhOiBhbnkpOiB2b2lkO1xuICAgIGdldExlZ2VuZE9wdGlvbnMoKTogYW55O1xuICAgIHNldENvbG9ycygpOiB2b2lkO1xuICAgIG9uQWN0aXZhdGUoaXRlbTogYW55KTogdm9pZDtcbiAgICBvbkRlYWN0aXZhdGUoaXRlbTogYW55KTogdm9pZDtcbiAgICBpc0FjdGl2ZShlbnRyeTogYW55KTogYm9vbGVhbjtcbiAgICB0cmFja0J5KGluZGV4OiBhbnksIGl0ZW06IGFueSk6IHN0cmluZztcbn1cbiJdfQ==