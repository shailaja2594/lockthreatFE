import { EventEmitter, TemplateRef } from '@angular/core';
import { ViewDimensions } from '../common/view-dimensions.helper';
import { ColorHelper } from '../common/color.helper';
import { BaseChartComponent } from '../common/base-chart.component';
import { DataItem } from '../models/chart-data.model';
import * as ɵngcc0 from '@angular/core';
export declare class AdvancedPieChartComponent extends BaseChartComponent {
    gradient: boolean;
    activeEntries: any[];
    tooltipDisabled: boolean;
    tooltipText: any;
    label: string;
    activate: EventEmitter<any>;
    deactivate: EventEmitter<any>;
    tooltipTemplate: TemplateRef<any>;
    data: any;
    dims: ViewDimensions;
    domain: any[];
    outerRadius: number;
    innerRadius: number;
    transform: string;
    colors: ColorHelper;
    legendWidth: number;
    margin: number[];
    valueFormatting: (value: number) => any;
    nameFormatting: (value: string) => any;
    percentageFormatting: (value: number) => any;
    update(): void;
    getDomain(): any[];
    onClick(data: DataItem): void;
    setColors(): void;
    onActivate(item: any, fromLegend?: boolean): void;
    onDeactivate(item: any, fromLegend?: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AdvancedPieChartComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AdvancedPieChartComponent, "ngx-charts-advanced-pie-chart", never, { "activeEntries": "activeEntries"; "gradient": "gradient"; "tooltipDisabled": "tooltipDisabled"; "tooltipText": "tooltipText"; "label": "label"; "valueFormatting": "valueFormatting"; "nameFormatting": "nameFormatting"; "percentageFormatting": "percentageFormatting"; }, { "activate": "activate"; "deactivate": "deactivate"; }, ["tooltipTemplate"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWR2YW5jZWQtcGllLWNoYXJ0LmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJhZHZhbmNlZC1waWUtY2hhcnQuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVmlld0RpbWVuc2lvbnMgfSBmcm9tICcuLi9jb21tb24vdmlldy1kaW1lbnNpb25zLmhlbHBlcic7XG5pbXBvcnQgeyBDb2xvckhlbHBlciB9IGZyb20gJy4uL2NvbW1vbi9jb2xvci5oZWxwZXInO1xuaW1wb3J0IHsgQmFzZUNoYXJ0Q29tcG9uZW50IH0gZnJvbSAnLi4vY29tbW9uL2Jhc2UtY2hhcnQuY29tcG9uZW50JztcbmltcG9ydCB7IERhdGFJdGVtIH0gZnJvbSAnLi4vbW9kZWxzL2NoYXJ0LWRhdGEubW9kZWwnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQWR2YW5jZWRQaWVDaGFydENvbXBvbmVudCBleHRlbmRzIEJhc2VDaGFydENvbXBvbmVudCB7XG4gICAgZ3JhZGllbnQ6IGJvb2xlYW47XG4gICAgYWN0aXZlRW50cmllczogYW55W107XG4gICAgdG9vbHRpcERpc2FibGVkOiBib29sZWFuO1xuICAgIHRvb2x0aXBUZXh0OiBhbnk7XG4gICAgbGFiZWw6IHN0cmluZztcbiAgICBhY3RpdmF0ZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgZGVhY3RpdmF0ZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgdG9vbHRpcFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGRhdGE6IGFueTtcbiAgICBkaW1zOiBWaWV3RGltZW5zaW9ucztcbiAgICBkb21haW46IGFueVtdO1xuICAgIG91dGVyUmFkaXVzOiBudW1iZXI7XG4gICAgaW5uZXJSYWRpdXM6IG51bWJlcjtcbiAgICB0cmFuc2Zvcm06IHN0cmluZztcbiAgICBjb2xvcnM6IENvbG9ySGVscGVyO1xuICAgIGxlZ2VuZFdpZHRoOiBudW1iZXI7XG4gICAgbWFyZ2luOiBudW1iZXJbXTtcbiAgICB2YWx1ZUZvcm1hdHRpbmc6ICh2YWx1ZTogbnVtYmVyKSA9PiBhbnk7XG4gICAgbmFtZUZvcm1hdHRpbmc6ICh2YWx1ZTogc3RyaW5nKSA9PiBhbnk7XG4gICAgcGVyY2VudGFnZUZvcm1hdHRpbmc6ICh2YWx1ZTogbnVtYmVyKSA9PiBhbnk7XG4gICAgdXBkYXRlKCk6IHZvaWQ7XG4gICAgZ2V0RG9tYWluKCk6IGFueVtdO1xuICAgIG9uQ2xpY2soZGF0YTogRGF0YUl0ZW0pOiB2b2lkO1xuICAgIHNldENvbG9ycygpOiB2b2lkO1xuICAgIG9uQWN0aXZhdGUoaXRlbTogYW55LCBmcm9tTGVnZW5kPzogYm9vbGVhbik6IHZvaWQ7XG4gICAgb25EZWFjdGl2YXRlKGl0ZW06IGFueSwgZnJvbUxlZ2VuZD86IGJvb2xlYW4pOiB2b2lkO1xufVxuIl19