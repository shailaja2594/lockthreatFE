import { SimpleChanges, EventEmitter, OnChanges, OnInit, TemplateRef } from '@angular/core';
import { ColorHelper } from '../common/color.helper';
import * as ɵngcc0 from '@angular/core';
export declare class CircleSeriesComponent implements OnChanges, OnInit {
    data: any;
    type: string;
    xScale: any;
    yScale: any;
    colors: ColorHelper;
    scaleType: any;
    visibleValue: any;
    activeEntries: any[];
    tooltipDisabled: boolean;
    tooltipTemplate: TemplateRef<any>;
    select: EventEmitter<any>;
    activate: EventEmitter<any>;
    deactivate: EventEmitter<any>;
    areaPath: any;
    circle: any;
    barVisible: boolean;
    gradientId: string;
    gradientFill: string;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    update(): void;
    getActiveCircle(): {};
    mapDataPointToCircle(d: any, i: number): any;
    getTooltipText({ tooltipLabel, value, seriesName, min, max }: {
        tooltipLabel: any;
        value: any;
        seriesName: any;
        min: any;
        max: any;
    }): string;
    getTooltipMinMaxText(min: any, max: any): string;
    getGradientStops(color: any): {
        offset: number;
        color: any;
        opacity: number;
    }[];
    onClick(data: any): void;
    isActive(entry: any): boolean;
    activateCircle(): void;
    deactivateCircle(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CircleSeriesComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CircleSeriesComponent, "g[ngx-charts-circle-series]", never, { "type": "type"; "tooltipDisabled": "tooltipDisabled"; "data": "data"; "xScale": "xScale"; "yScale": "yScale"; "colors": "colors"; "scaleType": "scaleType"; "visibleValue": "visibleValue"; "activeEntries": "activeEntries"; "tooltipTemplate": "tooltipTemplate"; }, { "select": "select"; "activate": "activate"; "deactivate": "deactivate"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2lyY2xlLXNlcmllcy5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiY2lyY2xlLXNlcmllcy5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2ltcGxlQ2hhbmdlcywgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIE9uSW5pdCwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbG9ySGVscGVyIH0gZnJvbSAnLi4vY29tbW9uL2NvbG9yLmhlbHBlcic7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDaXJjbGVTZXJpZXNDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMsIE9uSW5pdCB7XG4gICAgZGF0YTogYW55O1xuICAgIHR5cGU6IHN0cmluZztcbiAgICB4U2NhbGU6IGFueTtcbiAgICB5U2NhbGU6IGFueTtcbiAgICBjb2xvcnM6IENvbG9ySGVscGVyO1xuICAgIHNjYWxlVHlwZTogYW55O1xuICAgIHZpc2libGVWYWx1ZTogYW55O1xuICAgIGFjdGl2ZUVudHJpZXM6IGFueVtdO1xuICAgIHRvb2x0aXBEaXNhYmxlZDogYm9vbGVhbjtcbiAgICB0b29sdGlwVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgc2VsZWN0OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBhY3RpdmF0ZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgZGVhY3RpdmF0ZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgYXJlYVBhdGg6IGFueTtcbiAgICBjaXJjbGU6IGFueTtcbiAgICBiYXJWaXNpYmxlOiBib29sZWFuO1xuICAgIGdyYWRpZW50SWQ6IHN0cmluZztcbiAgICBncmFkaWVudEZpbGw6IHN0cmluZztcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIHVwZGF0ZSgpOiB2b2lkO1xuICAgIGdldEFjdGl2ZUNpcmNsZSgpOiB7fTtcbiAgICBtYXBEYXRhUG9pbnRUb0NpcmNsZShkOiBhbnksIGk6IG51bWJlcik6IGFueTtcbiAgICBnZXRUb29sdGlwVGV4dCh7IHRvb2x0aXBMYWJlbCwgdmFsdWUsIHNlcmllc05hbWUsIG1pbiwgbWF4IH06IHtcbiAgICAgICAgdG9vbHRpcExhYmVsOiBhbnk7XG4gICAgICAgIHZhbHVlOiBhbnk7XG4gICAgICAgIHNlcmllc05hbWU6IGFueTtcbiAgICAgICAgbWluOiBhbnk7XG4gICAgICAgIG1heDogYW55O1xuICAgIH0pOiBzdHJpbmc7XG4gICAgZ2V0VG9vbHRpcE1pbk1heFRleHQobWluOiBhbnksIG1heDogYW55KTogc3RyaW5nO1xuICAgIGdldEdyYWRpZW50U3RvcHMoY29sb3I6IGFueSk6IHtcbiAgICAgICAgb2Zmc2V0OiBudW1iZXI7XG4gICAgICAgIGNvbG9yOiBhbnk7XG4gICAgICAgIG9wYWNpdHk6IG51bWJlcjtcbiAgICB9W107XG4gICAgb25DbGljayhkYXRhOiBhbnkpOiB2b2lkO1xuICAgIGlzQWN0aXZlKGVudHJ5OiBhbnkpOiBib29sZWFuO1xuICAgIGFjdGl2YXRlQ2lyY2xlKCk6IHZvaWQ7XG4gICAgZGVhY3RpdmF0ZUNpcmNsZSgpOiB2b2lkO1xufVxuIl19